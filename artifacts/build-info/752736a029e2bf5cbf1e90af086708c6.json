{"id":"752736a029e2bf5cbf1e90af086708c6","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@erc725/smart-contracts-v8/contracts/constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n// ERC165 INTERFACE IDs\nbytes4 constant _INTERFACEID_ERC725X = 0x7545acac;\nbytes4 constant _INTERFACEID_ERC725Y = 0x629aa694;\n\n// ERC725X OPERATION TYPES\nuint256 constant OPERATION_0_CALL = 0;\nuint256 constant OPERATION_1_CREATE = 1;\nuint256 constant OPERATION_2_CREATE2 = 2;\nuint256 constant OPERATION_3_STATICCALL = 3;\nuint256 constant OPERATION_4_DELEGATECALL = 4;\n"},"@erc725/smart-contracts-v8/contracts/ERC725Y.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {IERC725Y} from \"./interfaces/IERC725Y.sol\";\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n// constants\nimport {_INTERFACEID_ERC725Y} from \"./constants.sol\";\n\n// errors\nimport {\n    ERC725Y_MsgValueDisallowed,\n    ERC725Y_DataKeysValuesLengthMismatch,\n    ERC725Y_DataKeysValuesEmptyArray,\n    OwnableCannotSetZeroAddressAsOwner\n} from \"./errors.sol\";\n\n/**\n * @title Deployable implementation with `constructor` of ERC725Y sub-standard, a generic data key/value store.\n * @author Fabian Vogelsteller <fabian@lukso.network> and <CJ42>, <YamenMerhi>, <B00ste>, <SkimaHarvey>\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ncontract ERC725Y is Ownable, ERC165, IERC725Y {\n    /**\n     * @dev Map `bytes32` data keys to their `bytes` data values.\n     */\n    mapping(bytes32 => bytes) internal _store;\n\n    /**\n     * @notice Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\n     * @dev Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\n     * @param initialOwner the owner of the contract.\n     *\n     * @custom:requirements\n     * - `initialOwner` CANNOT be the zero address.\n     */\n    constructor(address initialOwner) payable {\n        if (initialOwner == address(0)) {\n            revert OwnableCannotSetZeroAddressAsOwner();\n        }\n        Ownable._transferOwnership(initialOwner);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getData(\n        bytes32 dataKey\n    ) public view virtual override returns (bytes memory dataValue) {\n        return _getData(dataKey);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) public view virtual override returns (bytes[] memory dataValues) {\n        dataValues = new bytes[](dataKeys.length);\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            dataValues[i] = _getData(dataKeys[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return dataValues;\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner}.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n     * (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n     * If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n     *\n     * @custom:events {DataChanged} event.\n     */\n    function setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) public payable virtual override onlyOwner {\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n        _setData(dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner} of the contract.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n     * (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n     * If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n     *\n     * @custom:events {DataChanged} event **for each data key/value pair set**.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) public payable virtual override onlyOwner {\n        /// @dev do not allow to send value by default when setting data in ERC725Y\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n        _setDataBatch(dataKeys, dataValues);\n    }\n\n    /**\n     * @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n     * represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n     * @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage.\n     */\n    function _getData(\n        bytes32 dataKey\n    ) internal view virtual returns (bytes memory dataValue) {\n        return _store[dataKey];\n    }\n\n    /**\n     * @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n     * `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n     * @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n     *\n     * @custom:events {DataChanged} event emitted after a successful `setData` call.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual {\n        _store[dataKey] = dataValue;\n        emit DataChanged(dataKey, dataValue);\n    }\n\n    /**\n     * @dev Write a set of `dataValues` to the underlying ERC725Y storage for each associated `dataKeys`. The ERC725Y storage is\n     * represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKeys A bytes32 array of data keys to write the associated `bytes` value to the store.\n     * @param dataValues The `bytes` values to associate with each given `dataKeys` in the ERC725Y storage.\n     *\n     * @custom:events {DataChanged} event emitted for each successful data key-value pairs set.\n     */\n    function _setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) internal virtual {\n        if (dataKeys.length != dataValues.length) {\n            revert ERC725Y_DataKeysValuesLengthMismatch();\n        }\n\n        if (dataKeys.length == 0) {\n            revert ERC725Y_DataKeysValuesEmptyArray();\n        }\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            _setData(dataKeys[i], dataValues[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @inheritdoc ERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override returns (bool) {\n        return\n            interfaceId == _INTERFACEID_ERC725Y ||\n            super.supportsInterface(interfaceId);\n    }\n}\n"},"@erc725/smart-contracts-v8/contracts/errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n * @param balance The balance of native tokens of the ERC725X smart contract.\n * @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`.\n */\nerror ERC725X_InsufficientBalance(uint256 balance, uint256 value);\n\n/**\n * @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n * (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n * @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`.\n */\nerror ERC725X_UnknownOperationType(uint256 operationTypeProvided);\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n * Sending native tokens via `staticcall` is not allowed because it is a state changing operation.\n */\nerror ERC725X_MsgValueDisallowedInStaticCall();\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n * Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting.\n */\nerror ERC725X_MsgValueDisallowedInDelegateCall();\n\n/**\n * @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_CreateOperationsRequireEmptyRecipientAddress();\n\n/**\n * @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_ContractDeploymentFailed();\n\n/**\n * @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_NoContractBytecodeProvided();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n * array parameters provided when calling the {executeBatch} function.\n */\nerror ERC725X_ExecuteParametersLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array.\n */\nerror ERC725X_ExecuteParametersEmptyArray();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n * array parameters provided when calling the {setDataBatch} function.\n */\nerror ERC725Y_DataKeysValuesLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\n */\nerror ERC725Y_DataKeysValuesEmptyArray();\n\n/**\n * @dev Reverts when sending value to the {setData} or {setDataBatch} function.\n */\nerror ERC725Y_MsgValueDisallowed();\n\n/**\n * @dev Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\n */\nerror OwnableCannotSetZeroAddressAsOwner();\n"},"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n/**\n * @title The interface for ERC725Y sub-standard, a generic data key/value store.\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ninterface IERC725Y {\n    /**\n     * @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n     * @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event DataChanged(bytes32 indexed dataKey, bytes dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n     * @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n     * @param dataKey The data key for which to retrieve the value.\n     * @return dataValue The bytes value stored under the specified data key.\n     */\n    function getData(\n        bytes32 dataKey\n    ) external view returns (bytes memory dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n     * @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n     * @param dataKeys The array of keys which values to retrieve\n     * @return dataValues The array of data stored at multiple keys\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) external view returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n     *\n     * @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n     * The function is marked as payable to enable flexibility on child contracts. For instance to implement\n     * a fee mechanism for setting specific data.\n     *\n     * @param dataKey The data key for which to set a new value.\n     * @param dataValue The new bytes value to set.\n     */\n    function setData(bytes32 dataKey, bytes memory dataValue) external payable;\n\n    /**\n     * @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n     *\n     * @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n     *\n     * @param dataKeys An array of data keys to set bytes values for.\n     * @param dataValues An array of bytes values to set for each `dataKeys`.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external payable;\n}\n"},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title The interface for ERC725Y sub-standard, a generic data key/value store.\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ninterface IERC725Y is IERC165 {\n    /**\n     * @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n     * @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event DataChanged(bytes32 indexed dataKey, bytes dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n     * @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n     * @param dataKey The data key for which to retrieve the value.\n     * @return dataValue The bytes value stored under the specified data key.\n     */\n    function getData(\n        bytes32 dataKey\n    ) external view returns (bytes memory dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n     * @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n     * @param dataKeys The array of keys which values to retrieve\n     * @return dataValues The array of data stored at multiple keys\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) external view returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n     *\n     * @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n     * The function is marked as payable to enable flexibility on child contracts. For instance to implement\n     * a fee mechanism for setting specific data.\n     *\n     * @param dataKey The data key for which to set a new value.\n     * @param dataValue The new bytes value to set.\n     */\n    function setData(bytes32 dataKey, bytes memory dataValue) external payable;\n\n    /**\n     * @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n     *\n     * @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n     *\n     * @param dataKeys An array of data keys to set bytes values for.\n     * @param dataValues An array of bytes values to set for each `dataKeys`.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external payable;\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.12;\n\nimport \"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\";\n"},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n * @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\n */\ninterface ILSP1UniversalReceiver {\n    /**\n     * @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n     * @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n     *\n     * @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n     * @param value The amount sent to the {universalReceiver(...)} function.\n     * @param typeId A `bytes32` unique identifier (= _\"hook\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n     * @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n     * @param returnedValue The value returned by the {universalReceiver(...)} function.\n     */\n    event UniversalReceiver(\n        address indexed from,\n        uint256 indexed value,\n        bytes32 indexed typeId,\n        bytes receivedData,\n        bytes returnedValue\n    );\n\n    /**\n     * @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n     * @notice Reacted on received notification with `typeId` & `data`.\n     *\n     * @param typeId The hash of a specific standard or a hook.\n     * @param data The arbitrary data received with the call.\n     *\n     * @custom:events {UniversalReceiver} event.\n     */\n    function universalReceiver(\n        bytes32 typeId,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n}\n"},"@lukso/lsp1-contracts/contracts/LSP1Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP1 = 0x6bb56a14;\nbytes4 constant _INTERFACEID_LSP1_DELEGATE = 0xa245bbda;\n\n// --- ERC725Y Data Keys\n\n// bytes10(keccak256('LSP1UniversalReceiverDelegate'))\nbytes10 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX = 0x0cfc51aec37c55a4d0b1;\n\n// keccak256('LSP1UniversalReceiverDelegate')\nbytes32 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY = 0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47;\n"},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// libraries\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {LSP2Utils} from \"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\";\n\n// constants\nimport {ILSP1UniversalReceiver as ILSP1} from \"./ILSP1UniversalReceiver.sol\";\n\n// constants\nimport {\n    _INTERFACEID_LSP1,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX\n} from \"./LSP1Constants.sol\";\n\n/**\n * @title LSP1 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n * that implements LSP1 and retrieve informations related to LSP1 `typeId`.\n * Based on LSP1 Universal Receiver standard.\n */\nlibrary LSP1Utils {\n    using ERC165Checker for address;\n\n    /**\n     * @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n     * supports the LSP1 interface.\n     *\n     * @param lsp1Implementation The address of the contract to notify.\n     * @param typeId A `bytes32` typeId.\n     * @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address.\n     */\n    function notifyUniversalReceiver(\n        address lsp1Implementation,\n        bytes32 typeId,\n        bytes memory data\n    ) internal {\n        if (\n            lsp1Implementation.supportsERC165InterfaceUnchecked(\n                _INTERFACEID_LSP1\n            )\n        ) {\n            ILSP1(lsp1Implementation).universalReceiver(typeId, data);\n        }\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate` data key.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key.\n     */\n    function getLSP1DelegateValue(\n        mapping(bytes32 => bytes) storage erc725YStorage\n    ) internal view returns (bytes memory) {\n        return erc725YStorage[_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY];\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @param typeId A bytes32 LSP1 `typeId`;\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key.\n     */\n    function getLSP1DelegateValueForTypeId(\n        mapping(bytes32 => bytes) storage erc725YStorage,\n        bytes32 typeId\n    ) internal view returns (bytes memory) {\n        bytes32 lsp1TypeIdDataKey = LSP2Utils.generateMappingKey(\n            _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX,\n            bytes20(typeId)\n        );\n        return erc725YStorage[lsp1TypeIdDataKey];\n    }\n}\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\n\n// bytes4(keccack256(\"LSP17Extendable\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENDABLE = 0xa918fa6b;\n\n// bytes4(keccack256(\"LSP17Extension\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENSION = 0xcee78b40;\n\n// --- ERC725Y Data Keys\n\n// Extension Handler Prefix\n\n// bytes10(keccak256('LSP17Extension'))\nbytes10 constant _LSP17_EXTENSION_PREFIX = 0xcee78b4094da86011096;\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev reverts when there is no extension for the function selector being called with\n */\nerror NoExtensionFoundForFunctionSelector(bytes4 functionSelector);\n\n/**\n * @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\n */\nerror InvalidFunctionSelector(bytes data);\n\n/**\n * @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\n */\nerror InvalidExtensionAddress(bytes storedData);\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\n\n// constants\nimport {_INTERFACEID_LSP17_EXTENDABLE} from \"./LSP17Constants.sol\";\n\n// errors\nimport {NoExtensionFoundForFunctionSelector} from \"./LSP17Errors.sol\";\n\n/**\n * @title Module to add more functionalities to a contract using extensions.\n *\n * @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n * This module can be inherited to extend the functionality of the parent contract when\n * calling a function that doesn't exist on the parent contract via forwarding the call\n * to an extension mapped to the function selector being called, set originally by the parent contract\n */\nabstract contract LSP17Extendable is ERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override returns (bool) {\n        return\n            interfaceId == _INTERFACEID_LSP17_EXTENDABLE ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns whether the interfaceId being checked is supported in the extension of the\n     * {supportsInterface} selector.\n     *\n     * To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n     * supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n     * extension if the extension is set, if not it returns false.\n     */\n    function _supportsInterfaceInERC165Extension(\n        bytes4 interfaceId\n    ) internal view virtual returns (bool) {\n        (address erc165Extension, ) = _getExtensionAndForwardValue(\n            ERC165.supportsInterface.selector\n        );\n        if (erc165Extension == address(0)) return false;\n\n        return\n            ERC165Checker.supportsERC165InterfaceUnchecked(\n                erc165Extension,\n                interfaceId\n            );\n    }\n\n    /**\n     * @dev Returns the extension mapped to a specific function selector\n     * If no extension was found, return the address(0)\n     * To be overridden.\n     * Up to the implementer contract to return an extension based on a function selector\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual returns (address, bool);\n\n    /**\n     * @dev Forwards the call to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the `address(0)` will be returned.\n     * Forwards the value if the extension is payable.\n     *\n     * Reverts if there is no extension for the function being called.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n     *\n     * @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n     * If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n     *\n     * ```solidity\n     * (bool success, bytes memory result) = extension.call{value: msg.value}(\n     *     abi.encodePacked(callData, msg.sender, msg.value)\n     * );\n     * ```\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual returns (bytes memory) {\n        // If there is a function selector\n        (\n            address extension,\n            bool shouldForwardValue\n        ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if no extension was found, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{\n            value: shouldForwardValue ? msg.value : 0\n        }(abi.encodePacked(callData, msg.sender, msg.value));\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            // solhint-disable no-inline-assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n}\n"},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {\n    IERC725Y\n} from \"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\";\n\n/**\n * @title LSP2 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n * defined on the LSP2 standard.\n * Based on LSP2 ERC725Y JSON Schema standard.\n */\nlibrary LSP2Utils {\n    /**\n     * @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n     *\n     * ```\n     * keccak256(\"keyName\")\n     * ```\n     *\n     * @param keyName The string to hash to generate a Singleton data key.\n     *\n     * @return The generated `bytes32` data key of key type Singleton.\n     */\n    function generateSingletonKey(\n        string memory keyName\n    ) internal pure returns (bytes32) {\n        return keccak256(bytes(keyName));\n    }\n\n    /**\n     * @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n     *\n     * ```\n     * keccak256(\"arrayKeyName[]\")\n     * ```\n     *\n     * @param arrayKeyName The string that will be used to generate a data key of key type Array.\n     *\n     * @return The generated `bytes32` data key of key type Array.\n     *\n     * @custom:requirements\n     * - The `keyName` must include at the end of the string the square brackets `\"[]\"`.\n     */\n    function generateArrayKey(\n        string memory arrayKeyName\n    ) internal pure returns (bytes32) {\n        bytes memory dataKey = bytes(arrayKeyName);\n        require(dataKey.length >= 2, \"MUST be longer than 2 characters\");\n        require(\n            dataKey[dataKey.length - 2] == 0x5b && // \"[\" in utf8 encoded\n                dataKey[dataKey.length - 1] == 0x5d, // \"]\" in utf8\n            \"Missing empty square brackets '[]' at the end of the key name\"\n        );\n\n        return keccak256(dataKey);\n    }\n\n    /**\n     * @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n     * with the 16 bytes of `index`. As:\n     *\n     * ```\n     * arrayKey[index]\n     * ```\n     *\n     * @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n     * @param index The index number in the `arrayKey`.\n     *\n     * @return The generated `bytes32` data key of key type Array at a specific `index`.\n     */\n    function generateArrayElementKeyAtIndex(\n        bytes32 arrayKey,\n        uint128 index\n    ) internal pure returns (bytes32) {\n        bytes memory elementInArray = bytes.concat(\n            bytes16(arrayKey),\n            bytes16(index)\n        );\n        return bytes32(elementInArray);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:bytes20(lastWordHash)\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param lastWord The word to retrieve the first 10 bytes of its hash.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        string memory lastWord\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 lastWordHash = keccak256(bytes(lastWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(lastWordHash)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n     * This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param addr An address to map `firstWord` to.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n     *\n     * ```\n     * keyPrefix:bytes20Value\n     * ```\n     *\n     * @param keyPrefix The first part of the data key of key type Mapping.\n     * @param bytes20Value The second part of the data key of key type Mapping.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`.\n     */\n    function generateMappingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n     * mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n     *\n     * ```\n     * bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 6 bytes of its hash.\n     * @param secondWord The word to retrieve the first 4 bytes of its hash.\n     * @param addr The address that makes the last part of the MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`.\n     */\n    function generateMappingWithGroupingKey(\n        string memory firstWord,\n        string memory secondWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 secondWordHash = keccak256(bytes(secondWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes6(firstWordHash),\n            bytes4(secondWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n     *\n     * ```\n     * keyPrefix:mapPrefix:0000:subMapKey\n     * ```\n     *\n     * @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n     * @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n     * @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes6 keyPrefix,\n        bytes4 mapPrefix,\n        bytes20 subMapKey\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            mapPrefix,\n            bytes2(0),\n            subMapKey\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n     *\n     * @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n     * @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n     * (containing the first and second mapped word) to a specific `bytes20Value`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a JSONURL value content.\n     * @param hashFunction The function used to hash the JSON file.\n     * @param json Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     */\n    function generateJSONURLValue(\n        string memory hashFunction,\n        string memory json,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(json));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Generate a ASSETURL value content.\n     *\n     * @param hashFunction The function used to hash the JSON file.\n     * @param assetBytes Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     *\n     * @return The encoded value as an `ASSETURL`.\n     */\n    function generateASSETURLValue(\n        string memory hashFunction,\n        string memory assetBytes,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(assetBytes));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n     *\n     * @param compactBytesArray The bytes value to verify.\n     *\n     * @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise.\n     */\n    function isCompactBytesArray(\n        bytes memory compactBytesArray\n    ) internal pure returns (bool) {\n        /**\n         * Pointer will always land on these values:\n         *\n         * ↓↓↓↓\n         * 0003 a00000\n         * 0005 fff83a0011\n         * 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n         * 0012 bb000000000000000000000000000000beef\n         * 0019 cc00000000000000000000000000000000000000000000deed\n         * ↑↑↑↑\n         *\n         * The pointer can only land on the length of the following bytes value.\n         */\n        uint256 pointer = 0;\n\n        /**\n         * Check each length byte and make sure that when you reach the last length byte.\n         * Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.\n         */\n        while (pointer < compactBytesArray.length) {\n            if (pointer + 1 >= compactBytesArray.length) return false;\n            uint256 elementLength = uint16(\n                bytes2(\n                    abi.encodePacked(\n                        compactBytesArray[pointer],\n                        compactBytesArray[pointer + 1]\n                    )\n                )\n            );\n            pointer += elementLength + 2;\n        }\n        if (pointer == compactBytesArray.length) return true;\n        return false;\n    }\n\n    /**\n     * @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n     *\n     * @param arrayLength Plain bytes that should be validated.\n     *\n     * @return `true` if the value is 16 bytes long, `false` otherwise.\n     */\n    function isValidLSP2ArrayLengthValue(\n        bytes memory arrayLength\n    ) internal pure returns (bool) {\n        if (arrayLength.length == 16) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n     *\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeLastElementFromArrayAndMap(\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        bytes32 removedElementMapKey\n    )\n        internal\n        pure\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](3);\n        dataValues = new bytes[](3);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // remove the data value for the map key of the element\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = \"\";\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n     *\n     * @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n     *\n     * @param erc725YContract The ERC725Y contract.\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementIndex the index of the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeElementFromArrayAndMap(\n        IERC725Y erc725YContract,\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        uint128 removedElementIndex,\n        bytes32 removedElementMapKey\n    )\n        internal\n        view\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](5);\n        dataValues = new bytes[](5);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // Generate the key of the last element in the array\n        bytes32 lastElementIndexKey = LSP2Utils.generateArrayElementKeyAtIndex(\n            arrayKey,\n            newArrayLength\n        );\n\n        // Get the data value from the key of the last element in the array\n        bytes20 lastElementIndexValue = bytes20(\n            erc725YContract.getData(lastElementIndexKey)\n        );\n\n        // Set data value of the last element instead of the element from the array that will be removed\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = bytes.concat(lastElementIndexValue);\n\n        // Remove the data value for the swapped array element\n        dataKeys[3] = lastElementIndexKey;\n        dataValues[3] = \"\";\n\n        // Generate mapping key for the swapped array element\n        bytes32 lastElementMapKey = LSP2Utils.generateMappingKey(\n            bytes10(removedElementMapKey),\n            lastElementIndexValue\n        );\n\n        // Generate the mapping value for the swapped array element\n        bytes memory lastElementMapValue = abi.encodePacked(\n            bytes4(erc725YContract.getData(lastElementMapKey)),\n            removedElementIndex\n        );\n\n        // Update the map value of the swapped array element to the new index\n        dataKeys[4] = lastElementMapKey;\n        dataValues[4] = lastElementMapValue;\n    }\n}\n"},"@lukso/lsp4-contracts/contracts/LSP4Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// Token types\nuint256 constant _LSP4_TOKEN_TYPE_TOKEN = 0;\nuint256 constant _LSP4_TOKEN_TYPE_NFT = 1;\nuint256 constant _LSP4_TOKEN_TYPE_COLLECTION = 2;\n\n// --- ERC725Y entries\n\n// bytes10(keccak256('SupportedStandards')) + bytes2(0) + bytes20(keccak256('LSP4DigitalAsset'))\nbytes32 constant _LSP4_SUPPORTED_STANDARDS_KEY = 0xeafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c;\n\n// bytes4(keccak256('LSP4DigitalAsset'))\nbytes constant _LSP4_SUPPORTED_STANDARDS_VALUE = hex\"a4d96624\";\n\n// keccak256('LSP4TokenName')\nbytes32 constant _LSP4_TOKEN_NAME_KEY = 0xdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1;\n\n// keccak256('LSP4TokenSymbol')\nbytes32 constant _LSP4_TOKEN_SYMBOL_KEY = 0x2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756;\n\n// keccak256('LSP4TokenType')\nbytes32 constant _LSP4_TOKEN_TYPE_KEY = 0xe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3;\n\n// keccak256('LSP4Creators[]')\nbytes32 constant _LSP4_CREATORS_ARRAY_KEY = 0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7;\n\n// bytes10(keccak256('LSP4CreatorsMap'))\nbytes10 constant _LSP4_CREATORS_MAP_KEY_PREFIX = 0x6de85eaf5d982b4e5da0;\n\n// keccak256('LSP4Metadata')\nbytes32 constant _LSP4_METADATA_KEY = 0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e;\n"},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC725Y} from \"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\";\n\n// constants\nimport {\n    _LSP4_SUPPORTED_STANDARDS_KEY,\n    _LSP4_SUPPORTED_STANDARDS_VALUE,\n    _LSP4_TOKEN_NAME_KEY,\n    _LSP4_TOKEN_SYMBOL_KEY,\n    _LSP4_TOKEN_TYPE_KEY\n} from \"./LSP4Constants.sol\";\n\n// errors\nimport {\n    LSP4TokenNameNotEditable,\n    LSP4TokenSymbolNotEditable,\n    LSP4TokenTypeNotEditable\n} from \"./LSP4Errors.sol\";\n\n/**\n * @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n * @author Matthew Stevens\n * @dev Standard Implementation of the LSP4 standard.\n */\nabstract contract LSP4DigitalAssetMetadata is ERC725Y {\n    /**\n     * @notice Deploying a digital asset `name_` with the `symbol_` symbol.\n     *\n     * @param name_ The name of the token.\n     * @param symbol_ The symbol of the token.\n     * @param initialOwner_ The owner of the token contract.\n     * @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address initialOwner_,\n        uint256 lsp4TokenType_\n    ) ERC725Y(initialOwner_) {\n        // set data key SupportedStandards:LSP4DigitalAsset\n        ERC725Y._setData(\n            _LSP4_SUPPORTED_STANDARDS_KEY,\n            _LSP4_SUPPORTED_STANDARDS_VALUE\n        );\n\n        ERC725Y._setData(_LSP4_TOKEN_NAME_KEY, bytes(name_));\n        ERC725Y._setData(_LSP4_TOKEN_SYMBOL_KEY, bytes(symbol_));\n        ERC725Y._setData(_LSP4_TOKEN_TYPE_KEY, abi.encode(lsp4TokenType_));\n    }\n\n    /**\n     * @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n     * via this function once the digital asset contract has been deployed.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual override {\n        if (dataKey == _LSP4_TOKEN_NAME_KEY) {\n            revert LSP4TokenNameNotEditable();\n        } else if (dataKey == _LSP4_TOKEN_SYMBOL_KEY) {\n            revert LSP4TokenSymbolNotEditable();\n        } else if (dataKey == _LSP4_TOKEN_TYPE_KEY) {\n            revert LSP4TokenTypeNotEditable();\n        } else {\n            _store[dataKey] = dataValue;\n\n            emit DataChanged(dataKey, dataValue);\n        }\n    }\n}\n"},"@lukso/lsp4-contracts/contracts/LSP4Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenNameNotEditable();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenSymbolNotEditable();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenTypeNotEditable();\n"},"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset.\n */\ninterface ILSP8IdentifiableDigitalAsset {\n    // --- Events\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from the `from` to the `to` address.\n     * @param operator The address of operator that sent the `tokenId`\n     * @param from The previous owner of the `tokenId`\n     * @param to The new owner of `tokenId`\n     * @param tokenId The tokenId that was transferred\n     * @param force If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\n     * @param data Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\n     */\n    event Transfer(\n        address operator,\n        address indexed from,\n        address indexed to,\n        bytes32 indexed tokenId,\n        bool force,\n        bytes data\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\n     * @param operator The address authorized as an operator.\n     * @param tokenOwner The owner of the `tokenId`.\n     * @param tokenId The tokenId `operator` address has access on behalf of `tokenOwner`.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorAuthorizationChanged(\n        address indexed operator,\n        address indexed tokenOwner,\n        bytes32 indexed tokenId,\n        bytes operatorNotificationData\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\n     * @param operator The address revoked from the operator array ({getOperatorsOf}).\n     * @param tokenOwner The owner of the `tokenId`.\n     * @param tokenId The tokenId `operator` is revoked from operating on.\n     * @param notified Bool indicating whether the operator has been notified or not\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorRevoked(\n        address indexed operator,\n        address indexed tokenOwner,\n        bytes32 indexed tokenId,\n        bool notified,\n        bytes operatorNotificationData\n    );\n\n    /**\n     * @dev Emitted when setting data for `tokenId`.\n     * @param tokenId The tokenId which data is set for.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event TokenIdDataChanged(\n        bytes32 indexed tokenId,\n        bytes32 indexed dataKey,\n        bytes dataValue\n    );\n\n    // --- Token queries\n\n    /**\n     * @dev Returns the number of existing tokens that have been minted in this contract.\n     * @return The number of existing tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // --- Token owner queries\n\n    /**\n     * @dev Get the number of token IDs owned by `tokenOwner`.\n\n     * @param tokenOwner The address to query     *\n     * @return The total number of token IDs that `tokenOwner` owns.\n     */\n    function balanceOf(address tokenOwner) external view returns (uint256);\n\n    /**\n     * @dev Returns the address that owns a given `tokenId`.\n     *\n     * @param tokenId The token ID to query the owner for.\n     * @return The owner address of the given `tokenId`.\n     *\n     * @custom:requirements `tokenId` must exist.\n     * @custom:info if the `tokenId` is not owned by any address, the returned address will be `address(0)`\n     */\n    function tokenOwnerOf(bytes32 tokenId) external view returns (address);\n\n    /**\n     * @dev Returns the list of token IDs that the `tokenOwner` address owns.\n     * @param tokenOwner The address that we want to get the list of token IDs for.\n     * @return An array of `bytes32[] tokenIds` owned by `tokenOwner`.\n     */\n    function tokenIdsOf(\n        address tokenOwner\n    ) external view returns (bytes32[] memory);\n\n    // --- TokenId Metadata functionality\n\n    /**\n     * @notice Retrieves data for a specific `tokenId` and `dataKey`.\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to retrieve.\n     * @return dataValues The data value associated with the given `tokenId` and `dataKey`.\n     */\n    function getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) external returns (bytes memory dataValues);\n\n    /**\n     * @notice Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\n     * @param tokenIds An array of token IDs.\n     * @param dataKeys An array of data keys corresponding to the token IDs.\n     * @return dataValues An array of data values for each pair of `tokenId` and `dataKey`.\n     */\n    function getDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys\n    ) external returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Sets data for a specific `tokenId` and `dataKey`.\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to set.\n     * @param dataValue The value to set for the given data key.\n     * @custom:events {TokenIdDataChanged} event.\n     */\n    function setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) external;\n\n    /**\n     * @notice Sets data in batch for multiple `tokenId` and `dataKey` pairs.\n     * @param tokenIds An array of token IDs.\n     * @param dataKeys An array of data keys corresponding to the token IDs.\n     * @param dataValues An array of values to set for the given data keys.\n     * @custom:events {TokenIdDataChanged} event for each pair.\n     */\n    function setDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external;\n\n    // --- Operator functionality\n\n    /**\n     * @dev Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @param operator The address to authorize as an operator.\n     * @param tokenId The token ID operator has access to.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller MUST be the {tokenOwnerOf} `tokenId`.\n     * - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address).\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorAuthorizationChanged} event.\n     */\n    function authorizeOperator(\n        address operator,\n        bytes32 tokenId,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner.\n     * See also {isOperatorFor}.\n     *\n     * @param operator The address to revoke as an operator.\n     * @param tokenId The tokenId `operator` is revoked from operating on.\n     * @param notify Boolean indicating whether to notify the operator or not\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller must be the {tokenOwnerOf} `tokenId`.\n     * - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address).\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token owner)..\n     */\n    function revokeOperator(\n        address operator,\n        bytes32 tokenId,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Returns whether `operator` address is an operator for a given `tokenId`.\n     *\n     * @param operator The address to query operator status for.\n     * @param tokenId The token ID to check if `operator` is allowed to operate on.\n     *\n     * @return `true` if `operator` is an operator for `tokenId`, `false` otherwise.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller must be the current {tokenOwnerOf} `tokenId`.\n     *\n     * @custom:info The tokenOwner is its own operator.\n     */\n    function isOperatorFor(\n        address operator,\n        bytes32 tokenId\n    ) external view returns (bool);\n\n    /**\n     * @dev Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\n     *\n     * @param tokenId The token ID to get the operators for.\n     * @return An array of operators allowed to transfer or burn a specific `tokenId`.\n     *\n     * Requirements\n     * - `tokenId` must exist.\n     */\n    function getOperatorsOf(\n        bytes32 tokenId\n    ) external view returns (address[] memory);\n\n    // --- Transfer functionality\n\n    /**\n     * @dev Transfer a given `tokenId` token from the `from` address to the `to` address.\n     *\n     * If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred.\n     *\n     * The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs)\n     * or contracts that do not implement the LSP1 standard.\n     *\n     * @param from The address that owns the given `tokenId`.\n     * @param to The address that will receive the `tokenId`.\n     * @param tokenId The token ID to transfer.\n     * @param force When set to `true`, the `to` address CAN be any address.\n     * When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself).\n     * - `from` must own the given `tokenId`.\n     * - If the caller is not `from`, it must be an operator for the `tokenId`.\n     *\n     * @custom:events\n     * - {Transfer} event when the `tokenId` is successfully transferred.\n     *\n     * @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n     * or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n     *\n     * @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n     *\n     * @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n     * This even if the `force` was set to `true`.\n     */\n    function transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`.\n     * If any transfer fails, the whole call will revert.\n     *\n     * @param from An array of sending addresses.\n     * @param to An array of recipient addresses.\n     * @param tokenId An array of token IDs to transfer.\n     * @param force When set to `true`, `to` may be any address.\n     * When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\n     *\n     *\n     * @custom:requirements\n     * - The arrays of `from`, `to` and `tokenId` must have the same length.\n     * - no values in the `from` array can be the zero address.\n     * - no values in the `to` array can be the zero address.\n     * - `from` and `to` cannot be the same address at the same index on each arrays.\n     * - each `tokenId` must be owned by `from`.\n     * - If the caller is not `from`, it must be an operator of each `tokenId`.\n     *\n     * @custom:events\n     * - {Transfer} events on each successful token transfer.\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        bytes32[] memory tokenId,\n        bool[] memory force,\n        bytes[] memory data\n    ) external;\n\n    /**\n     * @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n     *\n     * @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n     * @param data An array of ABI encoded function calls to be called on the contract.\n     * @return results An array of abi-encoded data returned by the functions executed.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n}\n"},"@lukso/lsp8-contracts/contracts/LSP8Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP8 = 0x3a271706;\n\nbytes4 constant _INTERFACEID_LSP8_V0_12_0 = 0x30dc5278;\n\nbytes4 constant _INTERFACEID_LSP8_V0_14_0 = 0xecad9f75;\n\n// --- ERC725Y Data Keys\n\n// keccak256('LSP8TokenIdFormat')\nbytes32 constant _LSP8_TOKENID_FORMAT_KEY = 0xf675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d;\n\n// keccak256('LSP8TokenMetadataBaseURI')\nbytes32 constant _LSP8_TOKEN_METADATA_BASE_URI = 0x1a7628600c3bac7101f53697f48df381ddc36b9015e7d7c9c5633d1252aa2843;\n\n// keccak256('LSP8ReferenceContract')\nbytes32 constant _LSP8_REFERENCE_CONTRACT = 0x708e7b881795f2e6b6c2752108c177ec89248458de3bf69d0d43480b3e5034e6;\n\n// --- Token Hooks\n\n// keccak256('LSP8Tokens_SenderNotification')\nbytes32 constant _TYPEID_LSP8_TOKENSSENDER = 0xb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00;\n\n// keccak256('LSP8Tokens_RecipientNotification')\nbytes32 constant _TYPEID_LSP8_TOKENSRECIPIENT = 0x0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d;\n\n// keccak256('LSP8Tokens_OperatorNotification')\nbytes32 constant _TYPEID_LSP8_TOKENOPERATOR = 0x8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f00970;\n\n// --- Token IDs Format\n\nuint256 constant _LSP8_TOKENID_FORMAT_NUMBER = 0;\nuint256 constant _LSP8_TOKENID_FORMAT_STRING = 1;\nuint256 constant _LSP8_TOKENID_FORMAT_ADDRESS = 2;\nuint256 constant _LSP8_TOKENID_FORMAT_UNIQUE_ID = 3;\nuint256 constant _LSP8_TOKENID_FORMAT_HASH = 4;\n\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER = 100;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING = 101;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS = 102;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID = 103;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH = 104;\n"},"@lukso/lsp8-contracts/contracts/LSP8Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- Errors\n\n/**\n * @dev Reverts when `tokenId` has not been minted.\n */\nerror LSP8NonExistentTokenId(bytes32 tokenId);\n\n/**\n * @dev Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\n */\nerror LSP8NotTokenOwner(address tokenOwner, bytes32 tokenId, address caller);\n\n/**\n * @dev Reverts when `caller` is not an allowed operator for `tokenId`.\n */\nerror LSP8NotTokenOperator(bytes32 tokenId, address caller);\n\n/**\n * @dev Reverts when `operator` is already authorized for the `tokenId`.\n */\nerror LSP8OperatorAlreadyAuthorized(address operator, bytes32 tokenId);\n\n/**\n * @dev Reverts when trying to set the zero address as an operator.\n */\nerror LSP8CannotUseAddressZeroAsOperator();\n\n/**\n * @dev Reverts when trying to send token to the zero address.\n */\nerror LSP8CannotSendToAddressZero();\n\n/**\n * @dev Reverts when `operator` is not an operator for the `tokenId`.\n */\nerror LSP8NonExistingOperator(address operator, bytes32 tokenId);\n\n/**\n * @dev Reverts when `tokenId` has already been minted.\n */\nerror LSP8TokenIdAlreadyMinted(bytes32 tokenId);\n\n/**\n * @dev Reverts when the parameters used for `transferBatch` have different lengths.\n */\nerror LSP8InvalidTransferBatch();\n\n/**\n * @dev Reverts if the `tokenReceiver` does not implement LSP1\n * when minting or transferring tokens with `bool force` set as `false`.\n */\nerror LSP8NotifyTokenReceiverContractMissingLSP1Interface(\n    address tokenReceiver\n);\n\n/**\n * @dev Reverts if the `tokenReceiver` is an EOA\n * when minting or transferring tokens with `bool force` set as `false`.\n */\nerror LSP8NotifyTokenReceiverIsEOA(address tokenReceiver);\n\n/**\n * @dev Reverts when trying to authorize or revoke the token's owner as an operator.\n */\nerror LSP8TokenOwnerCannotBeOperator();\n\n/**\n * @dev Error occurs when sending native tokens to the LSP8 contract without sending any data.\n *\n * E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\n *\n * @notice LSP8 contract cannot receive native tokens.\n */\nerror LSP8TokenContractCannotHoldValue();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed.\n * The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract.\n * It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\n */\nerror LSP8TokenIdFormatNotEditable();\n\n/**\n * @dev Reverts when the length of the token IDs data arrays is not equal\n */\nerror LSP8TokenIdsDataLengthMismatch();\n\n/**\n * @dev Reverts when empty arrays is passed to the function\n */\nerror LSP8TokenIdsDataEmptyArray();\n\n/**\n * @dev Reverts when a batch call failed.\n * @notice Batch call failed.\n */\nerror LSP8BatchCallFailed(uint256 callIndex);\n\n/**\n * @dev Reverts when the token owner changed inside the {_beforeTokenTransfer} hook.\n */\nerror LSP8TokenOwnerChanged(\n    bytes32 tokenId,\n    address oldOwner,\n    address newOwner\n);\n\n/**\n * @dev Reverts when the call to revoke operator is not authorized.\n */\nerror LSP8RevokeOperatorNotAuthorized(\n    address caller,\n    address tokenOwner,\n    bytes32 tokenId\n);\n"},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.12;\n\n// interfaces\nimport {\n    ILSP1UniversalReceiver as ILSP1\n} from \"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\";\nimport {\n    ILSP8IdentifiableDigitalAsset\n} from \"./ILSP8IdentifiableDigitalAsset.sol\";\n\n// modules\nimport {\n    LSP4DigitalAssetMetadata,\n    ERC725Y\n} from \"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\";\n\nimport {\n    LSP17Extendable\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\";\n\n// libraries\nimport {\n    EnumerableSet\n} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {LSP1Utils} from \"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\";\nimport {LSP2Utils} from \"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\";\n\n// constants\nimport {\n    _INTERFACEID_LSP1\n} from \"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\";\nimport {\n    _LSP17_EXTENSION_PREFIX\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\";\nimport {\n    _INTERFACEID_LSP8,\n    _LSP8_TOKENID_FORMAT_KEY,\n    _TYPEID_LSP8_TOKENOPERATOR,\n    _TYPEID_LSP8_TOKENSSENDER,\n    _TYPEID_LSP8_TOKENSRECIPIENT\n} from \"./LSP8Constants.sol\";\n\n// errors\nimport {\n    NoExtensionFoundForFunctionSelector,\n    InvalidFunctionSelector,\n    InvalidExtensionAddress\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\";\nimport {\n    LSP8TokenContractCannotHoldValue,\n    LSP8TokenIdFormatNotEditable,\n    LSP8NonExistentTokenId,\n    LSP8NotTokenOwner,\n    LSP8CannotUseAddressZeroAsOperator,\n    LSP8TokenOwnerCannotBeOperator,\n    LSP8OperatorAlreadyAuthorized,\n    LSP8NotTokenOperator,\n    LSP8InvalidTransferBatch,\n    LSP8NonExistingOperator,\n    LSP8CannotSendToAddressZero,\n    LSP8TokenIdAlreadyMinted,\n    LSP8NotifyTokenReceiverContractMissingLSP1Interface,\n    LSP8NotifyTokenReceiverIsEOA,\n    LSP8TokenIdsDataLengthMismatch,\n    LSP8TokenIdsDataEmptyArray,\n    LSP8BatchCallFailed,\n    LSP8TokenOwnerChanged,\n    LSP8RevokeOperatorNotAuthorized\n} from \"./LSP8Errors.sol\";\n\n/**\n * @title Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\n * @author Matthew Stevens\n *\n * @dev Standard implementation contract of the LSP8 standard.\n *\n * Minting and transferring are done by providing a unique `tokenId`.\n * This implementation is agnostic to the way tokens are created.\n * A supply mechanism has to be added in a derived contract using {_mint}\n * For a generic mechanism, see {LSP7Mintable}.\n */\nabstract contract LSP8IdentifiableDigitalAsset is\n    ILSP8IdentifiableDigitalAsset,\n    LSP4DigitalAssetMetadata,\n    LSP17Extendable\n{\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // --- Storage\n\n    uint256 internal _existingTokens;\n\n    // Mapping from `tokenId` to `tokenOwner`\n    mapping(bytes32 => address) internal _tokenOwners;\n\n    // Mapping `tokenOwner` to owned tokenIds\n    mapping(address => EnumerableSet.Bytes32Set) internal _ownedTokens;\n\n    // Mapping a `tokenId` to its authorized operator addresses.\n    mapping(bytes32 => EnumerableSet.AddressSet) internal _operators;\n\n    /**\n     * @notice Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_`\n     * with tokenId format `lsp8TokenIdFormat_`.\n     *\n     * @dev Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract.\n     * This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\n     *\n     * @param name_ The name of the token\n     * @param symbol_ The symbol of the token\n     * @param newOwner_ The owner of the the token-Metadata\n     * @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n     * @param lsp8TokenIdFormat_ The format of tokenIds (= NFTs) that this contract will create.\n     *\n     * @custom:warning Make sure the tokenId format provided on deployment is correct, as it can only be set once\n     * and cannot be changed in the ERC725Y storage after the contract has been deployed.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address newOwner_,\n        uint256 lsp4TokenType_,\n        uint256 lsp8TokenIdFormat_\n    ) LSP4DigitalAssetMetadata(name_, symbol_, newOwner_, lsp4TokenType_) {\n        LSP4DigitalAssetMetadata._setData(\n            _LSP8_TOKENID_FORMAT_KEY,\n            abi.encode(lsp8TokenIdFormat_)\n        );\n    }\n\n    // fallback functions\n\n    /**\n     * @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n     *\n     * @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n     * forwarding the function call to the extension address mapped to the function being called.\n     *\n     * This function is executed when:\n     *    - Sending data of length less than 4 bytes to the contract.\n     *    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n     *    - Receiving native tokens\n     *\n     * 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n     *\n     *   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n     *\n     *   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n     *\n     * 2. If the data sent to this function is of length less than 4 bytes (not a function selector), revert.\n     */\n    // solhint-disable-next-line no-complex-fallback\n    fallback(\n        bytes calldata callData\n    ) external payable virtual returns (bytes memory) {\n        if (msg.data.length < 4) {\n            revert InvalidFunctionSelector(callData);\n        }\n        return _fallbackLSP17Extendable(callData);\n    }\n\n    /**\n     * @dev Reverts whenever someone tries to send native tokens to a LSP8 contract.\n     * @notice LSP8 contract cannot receive native tokens.\n     */\n    // solhint-disable-next-line no-complex-fallback\n    receive() external payable virtual {\n        // revert on empty calls with no value\n        if (msg.value == 0) {\n            revert InvalidFunctionSelector(hex\"00000000\");\n        }\n\n        revert LSP8TokenContractCannotHoldValue();\n    }\n\n    /**\n     * @dev Forwards the call with the received value to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the address(0) will be returned.\n     * We will always forward the value to the extension, as the LSP8 contract is not supposed to hold any native tokens.\n     *\n     * Reverts if there is no extension for the function being called.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * CALL opcode, passing the {msg.data} appended with the 20 bytes of the {msg.sender} and\n     * 32 bytes of the {msg.value}\n     *\n     * @custom:info The LSP8 Token contract should not hold any native tokens. Any native tokens received by the contract\n     * will be forwarded to the extension address mapped to the selector from `msg.sig`.\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual override returns (bytes memory) {\n        // If there is a function selector\n        (address extension, ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if no extension was found, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{value: msg.value}(\n            abi.encodePacked(callData, msg.sender, msg.value)\n        );\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            // solhint-disable no-inline-assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the extension address stored under the following data key:\n     * - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n     * - If no extension is stored, returns the address(0).\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual override returns (address, bool) {\n        // Generate the data key relevant for the functionSelector being called\n        bytes32 mappedExtensionDataKey = LSP2Utils.generateMappingKey(\n            _LSP17_EXTENSION_PREFIX,\n            functionSelector\n        );\n\n        // Check if there is an extension stored under the generated data key\n        bytes memory extensionAddress = _getData(mappedExtensionDataKey);\n        if (extensionAddress.length != 20 && extensionAddress.length != 0)\n            revert InvalidExtensionAddress(extensionAddress);\n\n        return (address(bytes20(extensionAddress)), true);\n    }\n\n    /**\n     * @inheritdoc LSP17Extendable\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(ERC725Y, LSP17Extendable) returns (bool) {\n        return\n            interfaceId == _INTERFACEID_LSP8 ||\n            super.supportsInterface(interfaceId) ||\n            LSP17Extendable._supportsInterfaceInERC165Extension(interfaceId);\n    }\n\n    /**\n     * @inheritdoc LSP4DigitalAssetMetadata\n     * @dev The ERC725Y data key `_LSP8_TOKENID_FORMAT_KEY` cannot be changed\n     * once the identifiable digital asset contract has been deployed.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual override {\n        if (dataKey == _LSP8_TOKENID_FORMAT_KEY) {\n            revert LSP8TokenIdFormatNotEditable();\n        }\n        LSP4DigitalAssetMetadata._setData(dataKey, dataValue);\n    }\n\n    // --- Token queries\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _existingTokens;\n    }\n\n    // --- Token owner queries\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function balanceOf(\n        address tokenOwner\n    ) public view virtual override returns (uint256) {\n        return _ownedTokens[tokenOwner].length();\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function tokenOwnerOf(\n        bytes32 tokenId\n    ) public view virtual override returns (address) {\n        address tokenOwner = _tokenOwners[tokenId];\n\n        if (tokenOwner == address(0)) {\n            revert LSP8NonExistentTokenId(tokenId);\n        }\n\n        return tokenOwner;\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function tokenIdsOf(\n        address tokenOwner\n    ) public view virtual override returns (bytes32[] memory) {\n        return _ownedTokens[tokenOwner].values();\n    }\n\n    // --- TokenId Metadata functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) public view virtual override returns (bytes memory dataValue) {\n        return _getDataForTokenId(tokenId, dataKey);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys\n    ) public view virtual override returns (bytes[] memory dataValues) {\n        if (tokenIds.length != dataKeys.length) {\n            revert LSP8TokenIdsDataLengthMismatch();\n        }\n\n        dataValues = new bytes[](tokenIds.length);\n\n        for (uint256 i; i < tokenIds.length; ) {\n            dataValues[i] = _getDataForTokenId(tokenIds[i], dataKeys[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return dataValues;\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) public virtual override onlyOwner {\n        _setDataForTokenId(tokenId, dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function setDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) public virtual override onlyOwner {\n        if (\n            tokenIds.length != dataKeys.length ||\n            dataKeys.length != dataValues.length\n        ) {\n            revert LSP8TokenIdsDataLengthMismatch();\n        }\n\n        if (tokenIds.length == 0) {\n            revert LSP8TokenIdsDataEmptyArray();\n        }\n\n        for (uint256 i; i < tokenIds.length; ) {\n            _setDataForTokenId(tokenIds[i], dataKeys[i], dataValues[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    // --- General functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     *\n     * @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) public virtual override returns (bytes[] memory results) {\n        results = new bytes[](data.length);\n        for (uint256 i; i < data.length; ) {\n            (bool success, bytes memory result) = address(this).delegatecall(\n                data[i]\n            );\n\n            if (!success) {\n                // Look for revert reason and bubble it up if present\n                if (result.length != 0) {\n                    // The easiest way to bubble the revert reason is using memory via assembly\n                    // solhint-disable no-inline-assembly\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        let returndata_size := mload(result)\n                        revert(add(32, result), returndata_size)\n                    }\n                } else {\n                    revert LSP8BatchCallFailed({callIndex: i});\n                }\n            }\n\n            results[i] = result;\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    // --- Operator functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function authorizeOperator(\n        address operator,\n        bytes32 tokenId,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        if (tokenOwner != msg.sender) {\n            revert LSP8NotTokenOwner(tokenOwner, tokenId, msg.sender);\n        }\n\n        if (operator == address(0)) {\n            revert LSP8CannotUseAddressZeroAsOperator();\n        }\n\n        if (tokenOwner == operator) {\n            revert LSP8TokenOwnerCannotBeOperator();\n        }\n\n        bool isAdded = _operators[tokenId].add(operator);\n        if (!isAdded) revert LSP8OperatorAlreadyAuthorized(operator, tokenId);\n\n        emit OperatorAuthorizationChanged(\n            operator,\n            tokenOwner,\n            tokenId,\n            operatorNotificationData\n        );\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            tokenId,\n            true, // authorized\n            operatorNotificationData\n        );\n\n        _notifyTokenOperator(operator, lsp1Data);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function revokeOperator(\n        address operator,\n        bytes32 tokenId,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        if (msg.sender != tokenOwner) {\n            if (operator != msg.sender) {\n                revert LSP8RevokeOperatorNotAuthorized(\n                    msg.sender,\n                    tokenOwner,\n                    tokenId\n                );\n            }\n        }\n\n        if (operator == address(0)) {\n            revert LSP8CannotUseAddressZeroAsOperator();\n        }\n\n        if (tokenOwner == operator) {\n            revert LSP8TokenOwnerCannotBeOperator();\n        }\n\n        _revokeOperator(\n            operator,\n            tokenOwner,\n            tokenId,\n            notify,\n            operatorNotificationData\n        );\n\n        if (notify) {\n            bytes memory lsp1Data = abi.encode(\n                tokenOwner,\n                tokenId,\n                false, // unauthorized\n                operatorNotificationData\n            );\n\n            _notifyTokenOperator(operator, lsp1Data);\n        }\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function isOperatorFor(\n        address operator,\n        bytes32 tokenId\n    ) public view virtual override returns (bool) {\n        return _isOperatorOrOwner(operator, tokenId);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getOperatorsOf(\n        bytes32 tokenId\n    ) public view virtual override returns (address[] memory) {\n        _existsOrError(tokenId);\n\n        return _operators[tokenId].values();\n    }\n\n    /**\n     * @dev verifies if the `caller` is operator or owner for the `tokenId`\n     * @return true if `caller` is either operator or owner\n     */\n    function _isOperatorOrOwner(\n        address caller,\n        bytes32 tokenId\n    ) internal view virtual returns (bool) {\n        return (caller == tokenOwnerOf(tokenId) ||\n            _operators[tokenId].contains(caller));\n    }\n\n    // --- Transfer functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) public virtual override {\n        if (!_isOperatorOrOwner(msg.sender, tokenId)) {\n            revert LSP8NotTokenOperator(tokenId, msg.sender);\n        }\n\n        _transfer(from, to, tokenId, force, data);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        bytes32[] memory tokenId,\n        bool[] memory force,\n        bytes[] memory data\n    ) public virtual override {\n        uint256 fromLength = from.length;\n        if (\n            fromLength != to.length ||\n            fromLength != tokenId.length ||\n            fromLength != force.length ||\n            fromLength != data.length\n        ) {\n            revert LSP8InvalidTransferBatch();\n        }\n\n        for (uint256 i; i < fromLength; ) {\n            transfer(from[i], to[i], tokenId[i], force[i], data[i]);\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev removes `operator` from the list of operators for the `tokenId`\n     */\n    function _revokeOperator(\n        address operator,\n        address tokenOwner,\n        bytes32 tokenId,\n        bool notified,\n        bytes memory operatorNotificationData\n    ) internal virtual {\n        bool isRemoved = _operators[tokenId].remove(operator);\n        if (!isRemoved) revert LSP8NonExistingOperator(operator, tokenId);\n\n        emit OperatorRevoked(\n            operator,\n            tokenOwner,\n            tokenId,\n            notified,\n            operatorNotificationData\n        );\n    }\n\n    /**\n     * @dev revoke all the current operators for a specific `tokenId` token which belongs to `tokenOwner`.\n     *\n     * @param tokenOwner The address that is the owner of the `tokenId`.\n     * @param tokenId The token to remove the associated operators for.\n     */\n    function _clearOperators(\n        address tokenOwner,\n        bytes32 tokenId\n    ) internal virtual {\n        // here is a good example of why having multiple operators will be expensive.. we\n        // need to clear them on token transfer\n        //\n        // NOTE: this may cause a tx to fail if there is too many operators to clear, in which case\n        // the tokenOwner needs to call `revokeOperator` until there is less operators to clear and\n        // the desired `transfer` or `burn` call can succeed.\n        EnumerableSet.AddressSet storage operatorsForTokenId = _operators[\n            tokenId\n        ];\n\n        uint256 operatorListLength = operatorsForTokenId.length();\n        address operator;\n        for (uint256 i; i < operatorListLength; ) {\n            // we are emptying the list, always remove from index 0\n            operator = operatorsForTokenId.at(0);\n            _revokeOperator(operator, tokenOwner, tokenId, false, \"\");\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens start existing when they are minted ({_mint}), and stop existing when they are burned ({_burn}).\n     */\n    function _exists(bytes32 tokenId) internal view virtual returns (bool) {\n        return _tokenOwners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev When `tokenId` does not exist then revert with an error.\n     */\n    function _existsOrError(bytes32 tokenId) internal view virtual {\n        if (!_exists(tokenId)) {\n            revert LSP8NonExistentTokenId(tokenId);\n        }\n    }\n\n    /**\n     * @dev Create `tokenId` by minting it and transfers it to `to`.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the recipient via LSP1**.\n     *\n     * @param to The address that will receive the minted `tokenId`.\n     * @param tokenId The token ID to create (= mint).\n     * @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hook of the `to` address.\n     *\n     * @custom:requirements\n     * - `tokenId` must not exist and not have been already minted.\n     * - `to` cannot be the zero address.\n\n     * @custom:events {Transfer} event with `address(0)` as `from` address.\n     */\n    function _mint(\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) internal virtual {\n        if (to == address(0)) {\n            revert LSP8CannotSendToAddressZero();\n        }\n\n        // Check that `tokenId` is not already minted\n        if (_exists(tokenId)) {\n            revert LSP8TokenIdAlreadyMinted(tokenId);\n        }\n\n        _beforeTokenTransfer(address(0), to, tokenId, force, data);\n\n        // Check that `tokenId` was not minted inside the `_beforeTokenTransfer` hook\n        if (_exists(tokenId)) {\n            revert LSP8TokenIdAlreadyMinted(tokenId);\n        }\n\n        // token being minted\n        ++_existingTokens;\n\n        _ownedTokens[to].add(tokenId);\n        _tokenOwners[tokenId] = to;\n\n        emit Transfer(msg.sender, address(0), to, tokenId, force, data);\n\n        _afterTokenTransfer(address(0), to, tokenId, force, data);\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            address(0),\n            to,\n            tokenId,\n            data\n        );\n        _notifyTokenReceiver(to, force, lsp1Data);\n    }\n\n    /**\n     * @dev Burn a specific `tokenId`, removing the `tokenId` from the {tokenIdsOf} the caller and decreasing its {balanceOf} by -1.\n     * This will also clear all the operators allowed to transfer the `tokenId`.\n     *\n     * The owner of the `tokenId` will be notified about the `tokenId` being transferred through its LSP1 {universalReceiver}\n     * function, if it is a contract that supports the LSP1 interface. Its {universalReceiver} function will receive\n     * all the parameters in the calldata packed encoded.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender via LSP1**.\n     *\n     * @param tokenId The token to burn.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the LSP1 hook on the token owner's address.\n     *\n     * @custom:hint In dApps, you can know which addresses are burning tokens by listening for the `Transfer` event and filter with the zero address as `to`.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     *\n     * @custom:events {Transfer} event with `address(0)` as the `to` address.\n     */\n    function _burn(bytes32 tokenId, bytes memory data) internal virtual {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        _beforeTokenTransfer(tokenOwner, address(0), tokenId, false, data);\n\n        // Re-fetch and update `tokenOwner` in case `tokenId`\n        // was transferred inside the `_beforeTokenTransfer` hook\n        tokenOwner = tokenOwnerOf(tokenId);\n\n        // token being burned\n        --_existingTokens;\n\n        _clearOperators(tokenOwner, tokenId);\n\n        _ownedTokens[tokenOwner].remove(tokenId);\n        delete _tokenOwners[tokenId];\n\n        emit Transfer(msg.sender, tokenOwner, address(0), tokenId, false, data);\n\n        _afterTokenTransfer(tokenOwner, address(0), tokenId, false, data);\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            tokenOwner,\n            address(0),\n            tokenId,\n            data\n        );\n\n        _notifyTokenSender(tokenOwner, lsp1Data);\n    }\n\n    /**\n     * @dev Change the owner of the `tokenId` from `from` to `to`.\n     *\n     * Both the sender and recipient will be notified of the `tokenId` being transferred through their LSP1 {universalReceiver}\n     * function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n     * all the parameters in the calldata packed encoded.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender/recipient via LSP1**.\n     *\n     * @param from The sender address.\n     * @param to The recipient address.\n     * @param tokenId The token to transfer.\n     * @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n     * @param data Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * @custom:events {Transfer} event.\n     *\n     * @custom:danger This internal function does not check if the sender is authorized or not to operate on the `tokenId`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) internal virtual {\n        address tokenOwner = tokenOwnerOf(tokenId);\n        if (tokenOwner != from) {\n            revert LSP8NotTokenOwner(tokenOwner, tokenId, from);\n        }\n\n        if (to == address(0)) {\n            revert LSP8CannotSendToAddressZero();\n        }\n\n        _beforeTokenTransfer(from, to, tokenId, force, data);\n\n        // Check that `tokenId`'s owner was not changed inside the `_beforeTokenTransfer` hook\n        address currentTokenOwner = tokenOwnerOf(tokenId);\n        if (tokenOwner != currentTokenOwner) {\n            revert LSP8TokenOwnerChanged(\n                tokenId,\n                tokenOwner,\n                currentTokenOwner\n            );\n        }\n\n        _clearOperators(from, tokenId);\n\n        _ownedTokens[from].remove(tokenId);\n        _ownedTokens[to].add(tokenId);\n        _tokenOwners[tokenId] = to;\n\n        emit Transfer(msg.sender, from, to, tokenId, force, data);\n\n        _afterTokenTransfer(from, to, tokenId, force, data);\n\n        bytes memory lsp1Data = abi.encode(msg.sender, from, to, tokenId, data);\n\n        _notifyTokenSender(from, lsp1Data);\n        _notifyTokenReceiver(to, force, lsp1Data);\n    }\n\n    /**\n     * @dev Sets data for a specific `tokenId` and `dataKey` in the ERC725Y storage\n     * The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to set.\n     * @param dataValue The value to set for the given data key.\n     * @custom:events {TokenIdDataChanged} event.\n     */\n    function _setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual {\n        _store[keccak256(bytes.concat(tokenId, dataKey))] = dataValue;\n        emit TokenIdDataChanged(tokenId, dataKey, dataValue);\n    }\n\n    /**\n     * @dev Retrieves data for a specific `tokenId` and `dataKey` from the ERC725Y storage\n     * The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to retrieve.\n     * @return dataValues The data value associated with the given `tokenId` and `dataKey`.\n     */\n    function _getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) internal view virtual returns (bytes memory dataValues) {\n        return _store[keccak256(bytes.concat(tokenId, dataKey))];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer, including minting and burning.\n     * Allows to run custom logic before updating balances and notifying sender/recipient by overriding this function.\n     *\n     * @param from The sender address\n     * @param to The recipient address\n     * @param tokenId The tokenId to transfer\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param data The data sent alongside the transfer\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data // solhint-disable-next-line no-empty-blocks\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer, including minting and burning.\n     * Allows to run custom logic after updating balances, but **before notifying sender/recipient via LSP1** by overriding this function.\n     *\n     * @param from The sender address\n     * @param to The recipient address\n     * @param tokenId The tokenId to transfer\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param data The data sent alongside the transfer\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data // solhint-disable-next-line no-empty-blocks\n    ) internal virtual {}\n\n    /**\n     * @dev Attempt to notify the operator `operator` about the `tokenId` being authorized.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENOPERATOR` as typeId, if `operator` is a contract that supports the LSP1 interface.\n     * If `operator` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n\n     * @param operator The address to call the {universalReceiver} function on.\n     * @param lsp1Data the data to be sent to the `operator` address in the `universalReceiver` call.\n     */\n    function _notifyTokenOperator(\n        address operator,\n        bytes memory lsp1Data\n    ) internal virtual {\n        LSP1Utils.notifyUniversalReceiver(\n            operator,\n            _TYPEID_LSP8_TOKENOPERATOR,\n            lsp1Data\n        );\n    }\n\n    /**\n     * @dev Attempt to notify the token sender `from` about the `tokenId` being transferred.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSSENDER` as typeId, if `from` is a contract that supports the LSP1 interface.\n     * If `from` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n\n     * @param from The address to call the {universalReceiver} function on.\n     * @param lsp1Data the data to be sent to the `from` address in the `universalReceiver` call.\n     */\n    function _notifyTokenSender(\n        address from,\n        bytes memory lsp1Data\n    ) internal virtual {\n        LSP1Utils.notifyUniversalReceiver(\n            from,\n            _TYPEID_LSP8_TOKENSSENDER,\n            lsp1Data\n        );\n    }\n\n    /**\n     * @dev Attempt to notify the token receiver `to` about the `tokenId` being received.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSRECIPIENT` as typeId, if `to` is a contract that supports the LSP1 interface.\n     *\n     * If `to` is is an EOA or a contract that does not support the LSP1 interface, the behaviour will depend on the `force` boolean flag.\n     * - if `force` is set to `true`, nothing will happen and no notification will be sent.\n     * - if `force` is set to `false, the transaction will revert.\n     *\n     * @param to The address to call the {universalReceiver} function on.\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param lsp1Data The data to be sent to the `to` address in the `universalReceiver(...)` call.\n     */\n    function _notifyTokenReceiver(\n        address to,\n        bool force,\n        bytes memory lsp1Data\n    ) internal virtual {\n        if (\n            ERC165Checker.supportsERC165InterfaceUnchecked(\n                to,\n                _INTERFACEID_LSP1\n            )\n        ) {\n            ILSP1(to).universalReceiver(_TYPEID_LSP8_TOKENSRECIPIENT, lsp1Data);\n        } else if (!force) {\n            if (to.code.length != 0) {\n                revert LSP8NotifyTokenReceiverContractMissingLSP1Interface(to);\n            } else {\n                revert LSP8NotifyTokenReceiverIsEOA(to);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165Checker {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(\n        address account,\n        bytes4[] memory interfaceIds\n    ) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     *\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\n     * should be exercised when using this function.\n     *\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/typingGae.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\";\n\ncontract TypingLeaderboardNFT is LSP8IdentifiableDigitalAsset {\n    enum Difficulty {\n        EASY,\n        NORMAL,\n        HARD\n    }\n    struct Leader {\n        address player;\n        uint256 score;\n    }\n\n    mapping(Difficulty => Leader) public topScorers;\n    mapping(address => mapping(Difficulty => bool)) public hasFirstPlaceNFT;\n    mapping(Difficulty => string) public difficultyMetadataURIs;\n\n    bytes32 private constant FIRST_PLACE_NFT = keccak256(\"FIRST_PLACE_NFT\");\n    bytes32 private secretHash;\n\n    event ScoreUpdated(Difficulty indexed difficulty, address indexed player, uint256 score);\n    event NFTRewarded(Difficulty indexed difficulty, address indexed player, bytes32 tokenId);\n    event NFTRevoked(Difficulty indexed difficulty, address indexed previousPlayer, bytes32 tokenId);\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address newOwner_,\n        uint256 lsp4TokenType_,\n        uint256 lsp8TokenIdFormat_,\n        string memory secretCode_,\n        string[] memory metadataURIs_\n    )\n        LSP8IdentifiableDigitalAsset(\n            name_,\n            symbol_,\n            newOwner_,\n            lsp4TokenType_,\n            lsp8TokenIdFormat_\n        )\n    {\n        require(metadataURIs_.length == 3, \"Must provide 3 metadata URIs\");\n        secretHash = keccak256(abi.encodePacked(secretCode_));\n\n        difficultyMetadataURIs[Difficulty.EASY] = metadataURIs_[0];\n        difficultyMetadataURIs[Difficulty.NORMAL] = metadataURIs_[1];\n        difficultyMetadataURIs[Difficulty.HARD] = metadataURIs_[2];\n\n        for (uint8 i = 0; i < 3; i++) {\n            Difficulty diff = Difficulty(i);\n            bytes32 tokenId = keccak256(abi.encodePacked(newOwner_, diff, FIRST_PLACE_NFT));\n            _mint(newOwner_, tokenId, true, \"Initial First Place NFT\");\n            _setTokenMetadata(tokenId, diff);\n            authorizeOperator(address(this), tokenId, \"\");\n            topScorers[diff] = Leader(newOwner_, 0);\n            hasFirstPlaceNFT[newOwner_][diff] = true;\n        }\n    }\n\n    function submitScore(\n        uint256 score,\n        Difficulty difficulty,\n        string memory secretCode\n    ) external {\n        require(\n            keccak256(abi.encodePacked(secretCode)) == secretHash,\n            \"Invalid secret code\"\n        );\n        Leader storage leader = topScorers[difficulty];\n        require(score > leader.score, \"Not the highest score\");\n\n        if (leader.player == msg.sender) {\n            leader.score = score;\n            emit ScoreUpdated(difficulty, msg.sender, score);\n            return;\n        } \n\n        if (leader.player != address(0) && hasFirstPlaceNFT[leader.player][difficulty]) {\n            bytes32 prevTokenId = keccak256(\n                abi.encodePacked(leader.player, difficulty, FIRST_PLACE_NFT)\n            );\n            _burn(prevTokenId, \"First Place NFT revoked\");\n            hasFirstPlaceNFT[leader.player][difficulty] = false;\n            emit NFTRevoked(difficulty, leader.player, prevTokenId);\n        }\n\n        bytes32 tokenId = keccak256(\n            abi.encodePacked(msg.sender, difficulty, FIRST_PLACE_NFT)\n        );\n        _mint(msg.sender, tokenId, true, \"First Place NFT\");\n        _setTokenMetadata(tokenId, difficulty);\n        authorizeOperator(address(this), tokenId, \"\");\n        hasFirstPlaceNFT[msg.sender][difficulty] = true;\n\n        leader.player = msg.sender;\n        leader.score = score;\n\n        emit ScoreUpdated(difficulty, msg.sender, score);\n        emit NFTRewarded(difficulty, msg.sender, tokenId);\n    }\n\n    function _setTokenMetadata(bytes32 tokenId, Difficulty difficulty) internal {\n        string memory uri = difficultyMetadataURIs[difficulty];\n        bytes memory metadata = abi.encodePacked(\n            hex\"0006\",\n            uri\n        );\n        _setData(tokenId, metadata);\n    }\n\n    function getTokenMetadata(bytes32 tokenId) external view returns (bytes memory) {\n        return _getData(tokenId);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) internal virtual override {\n        revert(\"First Place NFTs are non-transferable\");\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5740","formattedMessage":"Warning: Unreachable code.\n   --> @lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol:602:13:\n    |\n602 |             unchecked {\n    |             ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Unreachable code.","severity":"warning","sourceLocation":{"end":20051,"file":"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol","start":20005},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/typingGae.sol:119:9:\n    |\n119 |         address from,\n    |         ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4202,"file":"contracts/typingGae.sol","start":4190},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/typingGae.sol:120:9:\n    |\n120 |         address to,\n    |         ^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4222,"file":"contracts/typingGae.sol","start":4212},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/typingGae.sol:121:9:\n    |\n121 |         bytes32 tokenId,\n    |         ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4247,"file":"contracts/typingGae.sol","start":4232},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/typingGae.sol:122:9:\n    |\n122 |         bool force,\n    |         ^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4267,"file":"contracts/typingGae.sol","start":4257},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/typingGae.sol:123:9:\n    |\n123 |         bytes memory data\n    |         ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4294,"file":"contracts/typingGae.sol","start":4277},"type":"Warning"}],"sources":{"@erc725/smart-contracts-v8/contracts/ERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/ERC725Y.sol","exportedSymbols":{"ERC165":[3779],"ERC725Y":[269],"ERC725Y_DataKeysValuesEmptyArray":[333],"ERC725Y_DataKeysValuesLengthMismatch":[330],"ERC725Y_MsgValueDisallowed":[336],"IERC725Y":[386],"Ownable":[3725],"OwnableCannotSetZeroAddressAsOwner":[339],"_INTERFACEID_ERC725Y":[277]},"id":270,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:0"},{"absolutePath":"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol","file":"./interfaces/IERC725Y.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":387,"src":"78:51:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"86:8:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":3780,"src":"142:78:0","symbolAliases":[{"foreign":{"id":4,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"150:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":3726,"src":"221:67:0","symbolAliases":[{"foreign":{"id":6,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"229:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts-v8/contracts/constants.sol","file":"./constants.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":293,"src":"303:53:0","symbolAliases":[{"foreign":{"id":8,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"311:20:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts-v8/contracts/errors.sol","file":"./errors.sol","id":14,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":340,"src":"368:182:0","symbolAliases":[{"foreign":{"id":10,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"381:26:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":11,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"413:36:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":12,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"455:32:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":13,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"493:34:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":16,"name":"Ownable","nameLocations":["1029:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3725,"src":"1029:7:0"},"id":17,"nodeType":"InheritanceSpecifier","src":"1029:7:0"},{"baseName":{"id":18,"name":"ERC165","nameLocations":["1038:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3779,"src":"1038:6:0"},"id":19,"nodeType":"InheritanceSpecifier","src":"1038:6:0"},{"baseName":{"id":20,"name":"IERC725Y","nameLocations":["1046:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":386,"src":"1046:8:0"},"id":21,"nodeType":"InheritanceSpecifier","src":"1046:8:0"}],"canonicalName":"ERC725Y","contractDependencies":[],"contractKind":"contract","documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"552:456:0","text":" @title Deployable implementation with `constructor` of ERC725Y sub-standard, a generic data key/value store.\n @author Fabian Vogelsteller <fabian@lukso.network> and <CJ42>, <YamenMerhi>, <B00ste>, <SkimaHarvey>\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":true,"id":269,"linearizedBaseContracts":[269,386,3779,3985,3725,3755],"name":"ERC725Y","nameLocation":"1018:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1061:77:0","text":" @dev Map `bytes32` data keys to their `bytes` data values."},"id":26,"mutability":"mutable","name":"_store","nameLocation":"1178:6:0","nodeType":"VariableDeclaration","scope":269,"src":"1143:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":25,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1151:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1143:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"name":"bytes","nodeType":"ElementaryTypeName","src":"1162:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"body":{"id":49,"nodeType":"Block","src":"1599:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":32,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1613:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":35,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1637:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":34,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1629:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"1629:7:0","typeDescriptions":{}}},"id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1629:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1613:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":42,"nodeType":"IfStatement","src":"1609:100:0","trueBody":{"id":41,"nodeType":"Block","src":"1641:68:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":38,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1662:34:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":40,"nodeType":"RevertStatement","src":"1655:43:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1745:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":43,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"1718:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable_$3725_$","typeString":"type(contract Ownable)"}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:18:0","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"1718:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1718:40:0"}]},"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"1191:361:0","text":" @notice Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\n @dev Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\n @param initialOwner the owner of the contract.\n @custom:requirements\n - `initialOwner` CANNOT be the zero address."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"initialOwner","nameLocation":"1577:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1569:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1569:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1568:22:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"1599:0:0"},"scope":269,"src":"1557:208:0","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[357],"body":{"id":63,"nodeType":"Block","src":"1925:41:0","statements":[{"expression":{"arguments":[{"id":60,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1951:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":59,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1942:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1942:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":58,"id":62,"nodeType":"Return","src":"1935:24:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1771:39:0","text":" @inheritdoc IERC725Y"},"functionSelector":"54f6127f","id":64,"implemented":true,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1824:7:0","nodeType":"FunctionDefinition","overrides":{"id":55,"nodeType":"OverrideSpecifier","overrides":[],"src":"1883:8:0"},"parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"dataKey","nameLocation":"1849:7:0","nodeType":"VariableDeclaration","scope":64,"src":"1841:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1831:31:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"dataValue","nameLocation":"1914:9:0","nodeType":"VariableDeclaration","scope":64,"src":"1901:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1901:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1900:24:0"},"scope":269,"src":"1815:151:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[367],"body":{"id":110,"nodeType":"Block","src":"2144:330:0","statements":[{"expression":{"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":75,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"2154:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":79,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2179:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2188:6:0","memberName":"length","nodeType":"MemberAccess","src":"2179:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":78,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2167:11:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":76,"name":"bytes","nodeType":"ElementaryTypeName","src":"2171:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":77,"nodeType":"ArrayTypeName","src":"2171:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2167:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"2154:41:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":83,"nodeType":"ExpressionStatement","src":"2154:41:0"},{"body":{"id":106,"nodeType":"Block","src":"2249:191:0","statements":[{"expression":{"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":92,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"2263:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":94,"indexExpression":{"id":93,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2274:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2263:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":96,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2288:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":98,"indexExpression":{"id":97,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2297:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2288:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":95,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2279:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2279:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2263:37:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":101,"nodeType":"ExpressionStatement","src":"2263:37:0"},{"id":105,"nodeType":"UncheckedBlock","src":"2384:46:0","statements":[{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2412:3:0","subExpression":{"id":102,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2414:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":104,"nodeType":"ExpressionStatement","src":"2412:3:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":88,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2226:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":89,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2230:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:6:0","memberName":"length","nodeType":"MemberAccess","src":"2230:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2226:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":107,"initializationExpression":{"assignments":[85],"declarations":[{"constant":false,"id":85,"mutability":"mutable","name":"i","nameLocation":"2219:1:0","nodeType":"VariableDeclaration","scope":107,"src":"2211:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"2211:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":87,"initialValue":{"hexValue":"30","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2223:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2211:13:0"},"nodeType":"ForStatement","src":"2206:234:0"},{"expression":{"id":108,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"2457:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":74,"id":109,"nodeType":"Return","src":"2450:17:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"1972:39:0","text":" @inheritdoc IERC725Y"},"functionSelector":"dedff9c6","id":111,"implemented":true,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"2025:12:0","nodeType":"FunctionDefinition","overrides":{"id":70,"nodeType":"OverrideSpecifier","overrides":[],"src":"2099:8:0"},"parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68,"mutability":"mutable","name":"dataKeys","nameLocation":"2064:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2047:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":66,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2047:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":67,"nodeType":"ArrayTypeName","src":"2047:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2037:41:0"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"dataValues","nameLocation":"2132:10:0","nodeType":"VariableDeclaration","scope":111,"src":"2117:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":71,"name":"bytes","nodeType":"ElementaryTypeName","src":"2117:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":72,"nodeType":"ArrayTypeName","src":"2117:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2116:27:0"},"scope":269,"src":"2016:458:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[375],"body":{"id":135,"nodeType":"Block","src":"3198:110:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":122,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3212:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3216:5:0","memberName":"value","nodeType":"MemberAccess","src":"3212:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3212:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3208:55:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":126,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3235:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3235:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":128,"nodeType":"RevertStatement","src":"3228:35:0"}},{"expression":{"arguments":[{"id":131,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"3282:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":132,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"3291:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":130,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"3273:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3273:28:0"}]},"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"2480:591:0","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner}.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n @custom:events {DataChanged} event."},"functionSelector":"7f23690c","id":136,"implemented":true,"kind":"function","modifiers":[{"id":120,"kind":"modifierInvocation","modifierName":{"id":119,"name":"onlyOwner","nameLocations":["3188:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3644,"src":"3188:9:0"},"nodeType":"ModifierInvocation","src":"3188:9:0"}],"name":"setData","nameLocation":"3085:7:0","nodeType":"FunctionDefinition","overrides":{"id":118,"nodeType":"OverrideSpecifier","overrides":[],"src":"3179:8:0"},"parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"dataKey","nameLocation":"3110:7:0","nodeType":"VariableDeclaration","scope":136,"src":"3102:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"dataValue","nameLocation":"3140:9:0","nodeType":"VariableDeclaration","scope":136,"src":"3127:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":115,"name":"bytes","nodeType":"ElementaryTypeName","src":"3127:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3092:63:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"3198:0:0"},"scope":269,"src":"3076:232:0","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[385],"body":{"id":162,"nodeType":"Block","src":"4103:201:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":149,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4201:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4205:5:0","memberName":"value","nodeType":"MemberAccess","src":"4201:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4214:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4201:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"@dev do not allow to send value by default when setting data in ERC725Y","id":156,"nodeType":"IfStatement","src":"4197:55:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":153,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4224:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4224:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"RevertStatement","src":"4217:35:0"}},{"expression":{"arguments":[{"id":158,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"4276:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":159,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"4286:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"id":157,"name":"_setDataBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"4262:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32[] memory,bytes memory[] memory)"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":161,"nodeType":"ExpressionStatement","src":"4262:35:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3314:644:0","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner} of the contract.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n @custom:events {DataChanged} event **for each data key/value pair set**."},"functionSelector":"97902421","id":163,"implemented":true,"kind":"function","modifiers":[{"id":147,"kind":"modifierInvocation","modifierName":{"id":146,"name":"onlyOwner","nameLocations":["4093:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3644,"src":"4093:9:0"},"nodeType":"ModifierInvocation","src":"4093:9:0"}],"name":"setDataBatch","nameLocation":"3972:12:0","nodeType":"FunctionDefinition","overrides":{"id":145,"nodeType":"OverrideSpecifier","overrides":[],"src":"4084:8:0"},"parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"dataKeys","nameLocation":"4011:8:0","nodeType":"VariableDeclaration","scope":163,"src":"3994:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":139,"nodeType":"ArrayTypeName","src":"3994:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"dataValues","nameLocation":"4044:10:0","nodeType":"VariableDeclaration","scope":163,"src":"4029:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":141,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":142,"nodeType":"ArrayTypeName","src":"4029:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3984:76:0"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"4103:0:0"},"scope":269,"src":"3963:341:0","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"4903:39:0","statements":[{"expression":{"baseExpression":{"id":171,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"4920:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":173,"indexExpression":{"id":172,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"4927:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4920:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":170,"id":174,"nodeType":"Return","src":"4913:22:0"}]},"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"4310:484:0","text":" @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_getData","nameLocation":"4808:8:0","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"dataKey","nameLocation":"4834:7:0","nodeType":"VariableDeclaration","scope":176,"src":"4826:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4826:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4816:31:0"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"dataValue","nameLocation":"4892:9:0","nodeType":"VariableDeclaration","scope":176,"src":"4879:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":168,"name":"bytes","nodeType":"ElementaryTypeName","src":"4879:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4878:24:0"},"scope":269,"src":"4799:143:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":195,"nodeType":"Block","src":"5594:90:0","statements":[{"expression":{"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":184,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":186,"indexExpression":{"id":185,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"5611:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5604:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":187,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"5622:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5604:27:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":189,"nodeType":"ExpressionStatement","src":"5604:27:0"},{"eventCall":{"arguments":[{"id":191,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"5658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":192,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"5667:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":190,"name":"DataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5646:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":194,"nodeType":"EmitStatement","src":"5641:36:0"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"4948:543:0","text":" @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n @custom:events {DataChanged} event emitted after a successful `setData` call."},"id":196,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"5505:8:0","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"dataKey","nameLocation":"5531:7:0","nodeType":"VariableDeclaration","scope":196,"src":"5523:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5523:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"dataValue","nameLocation":"5561:9:0","nodeType":"VariableDeclaration","scope":196,"src":"5548:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":180,"name":"bytes","nodeType":"ElementaryTypeName","src":"5548:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5513:63:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5594:0:0"},"scope":269,"src":"5496:188:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":248,"nodeType":"Block","src":"6442:473:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":206,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6456:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6465:6:0","memberName":"length","nodeType":"MemberAccess","src":"6456:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":208,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"6475:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6486:6:0","memberName":"length","nodeType":"MemberAccess","src":"6475:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6456:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":215,"nodeType":"IfStatement","src":"6452:112:0","trueBody":{"id":214,"nodeType":"Block","src":"6494:70:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"6515:36:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6515:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"RevertStatement","src":"6508:45:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":216,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6578:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6587:6:0","memberName":"length","nodeType":"MemberAccess","src":"6578:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6578:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":224,"nodeType":"IfStatement","src":"6574:92:0","trueBody":{"id":223,"nodeType":"Block","src":"6600:66:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":220,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"6621:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6621:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"RevertStatement","src":"6614:41:0"}]}},{"body":{"id":246,"nodeType":"Block","src":"6719:190:0","statements":[{"expression":{"arguments":[{"baseExpression":{"id":234,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6742:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":236,"indexExpression":{"id":235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6751:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6742:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":237,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"6755:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":239,"indexExpression":{"id":238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6766:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6755:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":233,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"6733:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6733:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":241,"nodeType":"ExpressionStatement","src":"6733:36:0"},{"id":245,"nodeType":"UncheckedBlock","src":"6853:46:0","statements":[{"expression":{"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6881:3:0","subExpression":{"id":242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6883:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":244,"nodeType":"ExpressionStatement","src":"6881:3:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":229,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6696:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":230,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6700:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6709:6:0","memberName":"length","nodeType":"MemberAccess","src":"6700:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6696:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":247,"initializationExpression":{"assignments":[226],"declarations":[{"constant":false,"id":226,"mutability":"mutable","name":"i","nameLocation":"6689:1:0","nodeType":"VariableDeclaration","scope":247,"src":"6681:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"6681:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":228,"initialValue":{"hexValue":"30","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6693:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6681:13:0"},"nodeType":"ForStatement","src":"6676:233:0"}]},"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"5690:631:0","text":" @dev Write a set of `dataValues` to the underlying ERC725Y storage for each associated `dataKeys`. The ERC725Y storage is\n represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKeys A bytes32 array of data keys to write the associated `bytes` value to the store.\n @param dataValues The `bytes` values to associate with each given `dataKeys` in the ERC725Y storage.\n @custom:events {DataChanged} event emitted for each successful data key-value pairs set."},"id":249,"implemented":true,"kind":"function","modifiers":[],"name":"_setDataBatch","nameLocation":"6335:13:0","nodeType":"FunctionDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"dataKeys","nameLocation":"6375:8:0","nodeType":"VariableDeclaration","scope":249,"src":"6358:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6358:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":199,"nodeType":"ArrayTypeName","src":"6358:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"dataValues","nameLocation":"6408:10:0","nodeType":"VariableDeclaration","scope":249,"src":"6393:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":201,"name":"bytes","nodeType":"ElementaryTypeName","src":"6393:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":202,"nodeType":"ArrayTypeName","src":"6393:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6348:76:0"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"6442:0:0"},"scope":269,"src":"6326:589:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[3778],"body":{"id":267,"nodeType":"Block","src":"7068:123:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":258,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"7097:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":259,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"7112:20:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"7097:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":263,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"7172:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":261,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7148:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC725Y_$269_$","typeString":"type(contract super ERC725Y)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7154:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3778,"src":"7148:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7148:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7097:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":257,"id":266,"nodeType":"Return","src":"7078:106:0"}]},"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"6921:37:0","text":" @inheritdoc ERC165"},"functionSelector":"01ffc9a7","id":268,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"6972:17:0","nodeType":"FunctionDefinition","overrides":{"id":254,"nodeType":"OverrideSpecifier","overrides":[],"src":"7044:8:0"},"parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"interfaceId","nameLocation":"7006:11:0","nodeType":"VariableDeclaration","scope":268,"src":"6999:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":251,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6999:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"6989:34:0"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":268,"src":"7062:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":255,"name":"bool","nodeType":"ElementaryTypeName","src":"7062:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7061:6:0"},"scope":269,"src":"6963:228:0","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":270,"src":"1009:6184:0","usedErrors":[330,333,336,339]}],"src":"39:7155:0"},"id":0},"@erc725/smart-contracts-v8/contracts/constants.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/constants.sol","exportedSymbols":{"OPERATION_0_CALL":[280],"OPERATION_1_CREATE":[283],"OPERATION_2_CREATE2":[286],"OPERATION_3_STATICCALL":[289],"OPERATION_4_DELEGATECALL":[292],"_INTERFACEID_ERC725X":[274],"_INTERFACEID_ERC725Y":[277]},"id":293,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":271,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:1"},{"constant":true,"id":274,"mutability":"constant","name":"_INTERFACEID_ERC725X","nameLocation":"104:20:1","nodeType":"VariableDeclaration","scope":293,"src":"88:49:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":272,"name":"bytes4","nodeType":"ElementaryTypeName","src":"88:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783735343561636163","id":273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"127:10:1","typeDescriptions":{"typeIdentifier":"t_rational_1967500460_by_1","typeString":"int_const 1967500460"},"value":"0x7545acac"},"visibility":"internal"},{"constant":true,"id":277,"mutability":"constant","name":"_INTERFACEID_ERC725Y","nameLocation":"155:20:1","nodeType":"VariableDeclaration","scope":293,"src":"139:49:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":275,"name":"bytes4","nodeType":"ElementaryTypeName","src":"139:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783632396161363934","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"178:10:1","typeDescriptions":{"typeIdentifier":"t_rational_1654302356_by_1","typeString":"int_const 1654302356"},"value":"0x629aa694"},"visibility":"internal"},{"constant":true,"id":280,"mutability":"constant","name":"OPERATION_0_CALL","nameLocation":"235:16:1","nodeType":"VariableDeclaration","scope":293,"src":"218:37:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"218:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"254:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":283,"mutability":"constant","name":"OPERATION_1_CREATE","nameLocation":"274:18:1","nodeType":"VariableDeclaration","scope":293,"src":"257:39:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"257:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"295:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":286,"mutability":"constant","name":"OPERATION_2_CREATE2","nameLocation":"315:19:1","nodeType":"VariableDeclaration","scope":293,"src":"298:40:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"298:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"337:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":289,"mutability":"constant","name":"OPERATION_3_STATICCALL","nameLocation":"357:22:1","nodeType":"VariableDeclaration","scope":293,"src":"340:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"340:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"382:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":292,"mutability":"constant","name":"OPERATION_4_DELEGATECALL","nameLocation":"402:24:1","nodeType":"VariableDeclaration","scope":293,"src":"385:45:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"429:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"}],"src":"39:393:1"},"id":1},"@erc725/smart-contracts-v8/contracts/errors.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/errors.sol","exportedSymbols":{"ERC725X_ContractDeploymentFailed":[318],"ERC725X_CreateOperationsRequireEmptyRecipientAddress":[315],"ERC725X_ExecuteParametersEmptyArray":[327],"ERC725X_ExecuteParametersLengthMismatch":[324],"ERC725X_InsufficientBalance":[301],"ERC725X_MsgValueDisallowedInDelegateCall":[312],"ERC725X_MsgValueDisallowedInStaticCall":[309],"ERC725X_NoContractBytecodeProvided":[321],"ERC725X_UnknownOperationType":[306],"ERC725Y_DataKeysValuesEmptyArray":[333],"ERC725Y_DataKeysValuesLengthMismatch":[330],"ERC725Y_MsgValueDisallowed":[336],"OwnableCannotSetZeroAddressAsOwner":[339]},"id":340,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":294,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:2"},{"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"64:336:2","text":" @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n @param balance The balance of native tokens of the ERC725X smart contract.\n @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`."},"errorSelector":"0df9a8f8","id":301,"name":"ERC725X_InsufficientBalance","nameLocation":"407:27:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"balance","nameLocation":"443:7:2","nodeType":"VariableDeclaration","scope":301,"src":"435:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"value","nameLocation":"460:5:2","nodeType":"VariableDeclaration","scope":301,"src":"452:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"434:32:2"},"src":"401:66:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"469:314:2","text":" @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`."},"errorSelector":"7583b3bc","id":306,"name":"ERC725X_UnknownOperationType","nameLocation":"790:28:2","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"operationTypeProvided","nameLocation":"827:21:2","nodeType":"VariableDeclaration","scope":306,"src":"819:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:31:2"},"src":"784:66:2"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"852:282:2","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n Sending native tokens via `staticcall` is not allowed because it is a state changing operation."},"errorSelector":"72f2bc6a","id":309,"name":"ERC725X_MsgValueDisallowedInStaticCall","nameLocation":"1141:38:2","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"1179:2:2"},"src":"1135:47:2"},{"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"1184:277:2","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting."},"errorSelector":"5ac83135","id":312,"name":"ERC725X_MsgValueDisallowedInDelegateCall","nameLocation":"1468:40:2","nodeType":"ErrorDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"1508:2:2"},"src":"1462:49:2"},{"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"1513:246:2","text":" @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"3041824a","id":315,"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","nameLocation":"1766:52:2","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"1818:2:2"},"src":"1760:61:2"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"1823:181:2","text":" @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"0b07489b","id":318,"name":"ERC725X_ContractDeploymentFailed","nameLocation":"2011:32:2","nodeType":"ErrorDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[],"src":"2043:2:2"},"src":"2005:41:2"},{"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"2048:224:2","text":" @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"b81cd8d9","id":321,"name":"ERC725X_NoContractBytecodeProvided","nameLocation":"2279:34:2","nodeType":"ErrorDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[],"src":"2313:2:2"},"src":"2273:43:2"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"2318:208:2","text":" @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n array parameters provided when calling the {executeBatch} function."},"errorSelector":"3ff55f4d","id":324,"name":"ERC725X_ExecuteParametersLengthMismatch","nameLocation":"2533:39:2","nodeType":"ErrorDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"2572:2:2"},"src":"2527:48:2"},{"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"2577:114:2","text":" @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array."},"errorSelector":"e9ad2b5f","id":327,"name":"ERC725X_ExecuteParametersEmptyArray","nameLocation":"2698:35:2","nodeType":"ErrorDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"2733:2:2"},"src":"2692:44:2"},{"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"2738:175:2","text":" @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n array parameters provided when calling the {setDataBatch} function."},"errorSelector":"3bcc8979","id":330,"name":"ERC725Y_DataKeysValuesLengthMismatch","nameLocation":"2920:36:2","nodeType":"ErrorDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[],"src":"2956:2:2"},"src":"2914:45:2"},{"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"2961:110:2","text":" @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array."},"errorSelector":"97da5f95","id":333,"name":"ERC725Y_DataKeysValuesEmptyArray","nameLocation":"3078:32:2","nodeType":"ErrorDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"3110:2:2"},"src":"3072:41:2"},{"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"3115:87:2","text":" @dev Reverts when sending value to the {setData} or {setDataBatch} function."},"errorSelector":"f36ba737","id":336,"name":"ERC725Y_MsgValueDisallowed","nameLocation":"3209:26:2","nodeType":"ErrorDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"3235:2:2"},"src":"3203:35:2"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"3240:125:2","text":" @dev Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it."},"errorSelector":"1ad8836c","id":339,"name":"OwnableCannotSetZeroAddressAsOwner","nameLocation":"3372:34:2","nodeType":"ErrorDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"3406:2:2"},"src":"3366:43:2"}],"src":"39:3371:2"},"id":2},"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol","exportedSymbols":{"IERC725Y":[386]},"id":387,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":341,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"36:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC725Y","contractDependencies":[],"contractKind":"interface","documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"61:322:3","text":" @title The interface for ERC725Y sub-standard, a generic data key/value store.\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":false,"id":386,"linearizedBaseContracts":[386],"name":"IERC725Y","nameLocation":"394:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"409:373:3","text":" @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"eventSelector":"ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2","id":349,"name":"DataChanged","nameLocation":"793:11:3","nodeType":"EventDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"821:7:3","nodeType":"VariableDeclaration","scope":349,"src":"805:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"805:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":347,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"836:9:3","nodeType":"VariableDeclaration","scope":349,"src":"830:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":346,"name":"bytes","nodeType":"ElementaryTypeName","src":"830:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"804:42:3"},"src":"787:60:3"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"853:361:3","text":" @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n @param dataKey The data key for which to retrieve the value.\n @return dataValue The bytes value stored under the specified data key."},"functionSelector":"54f6127f","id":357,"implemented":false,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1228:7:3","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"dataKey","nameLocation":"1253:7:3","nodeType":"VariableDeclaration","scope":357,"src":"1245:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1245:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1235:31:3"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"dataValue","nameLocation":"1303:9:3","nodeType":"VariableDeclaration","scope":357,"src":"1290:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":354,"name":"bytes","nodeType":"ElementaryTypeName","src":"1290:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1289:24:3"},"scope":386,"src":"1219:95:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"1320:353:3","text":" @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n @param dataKeys The array of keys which values to retrieve\n @return dataValues The array of data stored at multiple keys"},"functionSelector":"dedff9c6","id":367,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1687:12:3","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"dataKeys","nameLocation":"1726:8:3","nodeType":"VariableDeclaration","scope":367,"src":"1709:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1709:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":360,"nodeType":"ArrayTypeName","src":"1709:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1699:41:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"dataValues","nameLocation":"1779:10:3","nodeType":"VariableDeclaration","scope":367,"src":"1764:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":363,"name":"bytes","nodeType":"ElementaryTypeName","src":"1764:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":364,"nodeType":"ArrayTypeName","src":"1764:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1763:27:3"},"scope":386,"src":"1678:113:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"1797:536:3","text":" @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n The function is marked as payable to enable flexibility on child contracts. For instance to implement\n a fee mechanism for setting specific data.\n @param dataKey The data key for which to set a new value.\n @param dataValue The new bytes value to set."},"functionSelector":"7f23690c","id":375,"implemented":false,"kind":"function","modifiers":[],"name":"setData","nameLocation":"2347:7:3","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"dataKey","nameLocation":"2363:7:3","nodeType":"VariableDeclaration","scope":375,"src":"2355:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2355:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"dataValue","nameLocation":"2385:9:3","nodeType":"VariableDeclaration","scope":375,"src":"2372:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":371,"name":"bytes","nodeType":"ElementaryTypeName","src":"2372:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2354:41:3"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"2412:0:3"},"scope":386,"src":"2338:75:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"2419:478:3","text":" @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n @param dataKeys An array of data keys to set bytes values for.\n @param dataValues An array of bytes values to set for each `dataKeys`."},"functionSelector":"97902421","id":385,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatch","nameLocation":"2911:12:3","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"dataKeys","nameLocation":"2950:8:3","nodeType":"VariableDeclaration","scope":385,"src":"2933:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2933:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":378,"nodeType":"ArrayTypeName","src":"2933:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"dataValues","nameLocation":"2983:10:3","nodeType":"VariableDeclaration","scope":385,"src":"2968:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":380,"name":"bytes","nodeType":"ElementaryTypeName","src":"2968:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":381,"nodeType":"ArrayTypeName","src":"2968:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2923:76:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"3016:0:3"},"scope":386,"src":"2902:115:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":387,"src":"384:2635:3","usedErrors":[]}],"src":"36:2984:3"},"id":3},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","exportedSymbols":{"IERC165":[3985],"IERC725Y":[437]},"id":438,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":388,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"36:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":438,"sourceUnit":3986,"src":"75:80:4","symbolAliases":[{"foreign":{"id":389,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"83:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":392,"name":"IERC165","nameLocations":["502:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3985,"src":"502:7:4"},"id":393,"nodeType":"InheritanceSpecifier","src":"502:7:4"}],"canonicalName":"IERC725Y","contractDependencies":[],"contractKind":"interface","documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"157:322:4","text":" @title The interface for ERC725Y sub-standard, a generic data key/value store.\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":false,"id":437,"linearizedBaseContracts":[437,3985],"name":"IERC725Y","nameLocation":"490:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"516:373:4","text":" @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"eventSelector":"ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2","id":400,"name":"DataChanged","nameLocation":"900:11:4","nodeType":"EventDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"928:7:4","nodeType":"VariableDeclaration","scope":400,"src":"912:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"912:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":398,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"943:9:4","nodeType":"VariableDeclaration","scope":400,"src":"937:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":397,"name":"bytes","nodeType":"ElementaryTypeName","src":"937:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"911:42:4"},"src":"894:60:4"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"960:361:4","text":" @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n @param dataKey The data key for which to retrieve the value.\n @return dataValue The bytes value stored under the specified data key."},"functionSelector":"54f6127f","id":408,"implemented":false,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1335:7:4","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"dataKey","nameLocation":"1360:7:4","nodeType":"VariableDeclaration","scope":408,"src":"1352:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1352:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1342:31:4"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"dataValue","nameLocation":"1410:9:4","nodeType":"VariableDeclaration","scope":408,"src":"1397:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":405,"name":"bytes","nodeType":"ElementaryTypeName","src":"1397:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1396:24:4"},"scope":437,"src":"1326:95:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"1427:353:4","text":" @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n @param dataKeys The array of keys which values to retrieve\n @return dataValues The array of data stored at multiple keys"},"functionSelector":"dedff9c6","id":418,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1794:12:4","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"dataKeys","nameLocation":"1833:8:4","nodeType":"VariableDeclaration","scope":418,"src":"1816:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1816:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":411,"nodeType":"ArrayTypeName","src":"1816:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1806:41:4"},"returnParameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"dataValues","nameLocation":"1886:10:4","nodeType":"VariableDeclaration","scope":418,"src":"1871:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":414,"name":"bytes","nodeType":"ElementaryTypeName","src":"1871:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":415,"nodeType":"ArrayTypeName","src":"1871:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1870:27:4"},"scope":437,"src":"1785:113:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"1904:536:4","text":" @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n The function is marked as payable to enable flexibility on child contracts. For instance to implement\n a fee mechanism for setting specific data.\n @param dataKey The data key for which to set a new value.\n @param dataValue The new bytes value to set."},"functionSelector":"7f23690c","id":426,"implemented":false,"kind":"function","modifiers":[],"name":"setData","nameLocation":"2454:7:4","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"dataKey","nameLocation":"2470:7:4","nodeType":"VariableDeclaration","scope":426,"src":"2462:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2462:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"dataValue","nameLocation":"2492:9:4","nodeType":"VariableDeclaration","scope":426,"src":"2479:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":422,"name":"bytes","nodeType":"ElementaryTypeName","src":"2479:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2461:41:4"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"2519:0:4"},"scope":437,"src":"2445:75:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2526:478:4","text":" @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n @param dataKeys An array of data keys to set bytes values for.\n @param dataValues An array of bytes values to set for each `dataKeys`."},"functionSelector":"97902421","id":436,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatch","nameLocation":"3018:12:4","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"dataKeys","nameLocation":"3057:8:4","nodeType":"VariableDeclaration","scope":436,"src":"3040:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3040:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":429,"nodeType":"ArrayTypeName","src":"3040:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"dataValues","nameLocation":"3090:10:4","nodeType":"VariableDeclaration","scope":436,"src":"3075:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":431,"name":"bytes","nodeType":"ElementaryTypeName","src":"3075:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":432,"nodeType":"ArrayTypeName","src":"3075:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3030:76:4"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"3123:0:4"},"scope":437,"src":"3009:115:4","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":438,"src":"480:2646:4","usedErrors":[]}],"src":"36:3091:4"},"id":4},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol","exportedSymbols":{"ERC165Checker":[3973],"ERC725Y":[269],"EnumerableSet":[4598],"ILSP1":[467],"ILSP8IdentifiableDigitalAsset":[1841],"InvalidExtensionAddress":[594],"InvalidFunctionSelector":[589],"LSP17Extendable":[728],"LSP1Utils":[566],"LSP2Utils":[1465],"LSP4DigitalAssetMetadata":[1617],"LSP8BatchCallFailed":[1981],"LSP8CannotSendToAddressZero":[1936],"LSP8CannotUseAddressZeroAsOperator":[1933],"LSP8IdentifiableDigitalAsset":[3612],"LSP8InvalidTransferBatch":[1951],"LSP8NonExistentTokenId":[1907],"LSP8NonExistingOperator":[1943],"LSP8NotTokenOperator":[1923],"LSP8NotTokenOwner":[1916],"LSP8NotifyTokenReceiverContractMissingLSP1Interface":[1956],"LSP8NotifyTokenReceiverIsEOA":[1961],"LSP8OperatorAlreadyAuthorized":[1930],"LSP8RevokeOperatorNotAuthorized":[1999],"LSP8TokenContractCannotHoldValue":[1967],"LSP8TokenIdAlreadyMinted":[1948],"LSP8TokenIdFormatNotEditable":[1970],"LSP8TokenIdsDataEmptyArray":[1976],"LSP8TokenIdsDataLengthMismatch":[1973],"LSP8TokenOwnerCannotBeOperator":[1964],"LSP8TokenOwnerChanged":[1990],"NoExtensionFoundForFunctionSelector":[584],"_INTERFACEID_LSP1":[472],"_INTERFACEID_LSP8":[1846],"_LSP17_EXTENSION_PREFIX":[577],"_LSP8_TOKENID_FORMAT_KEY":[1855],"_TYPEID_LSP8_TOKENOPERATOR":[1870],"_TYPEID_LSP8_TOKENSRECIPIENT":[1867],"_TYPEID_LSP8_TOKENSSENDER":[1864]},"id":441,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":439,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"39:24:5"},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol","file":"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol","id":440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":441,"sourceUnit":3613,"src":"65:74:5","symbolAliases":[],"unitAlias":""}],"src":"39:101:5"},"id":5},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","exportedSymbols":{"ILSP1UniversalReceiver":[467]},"id":468,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":442,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP1UniversalReceiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"64:257:6","text":" @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received."},"fullyImplemented":false,"id":467,"linearizedBaseContracts":[467],"name":"ILSP1UniversalReceiver","nameLocation":"332:22:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"361:893:6","text":" @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n @param value The amount sent to the {universalReceiver(...)} function.\n @param typeId A `bytes32` unique identifier (= _\"hook\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n @param returnedValue The value returned by the {universalReceiver(...)} function."},"eventSelector":"9c3ba68eb5742b8e3961aea0afc7371a71bf433c8a67a831803b64c064a178c2","id":456,"name":"UniversalReceiver","nameLocation":"1265:17:6","nodeType":"EventDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1308:4:6","nodeType":"VariableDeclaration","scope":456,"src":"1292:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"1292:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":448,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"1338:5:6","nodeType":"VariableDeclaration","scope":456,"src":"1322:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":450,"indexed":true,"mutability":"mutable","name":"typeId","nameLocation":"1369:6:6","nodeType":"VariableDeclaration","scope":456,"src":"1353:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1353:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":452,"indexed":false,"mutability":"mutable","name":"receivedData","nameLocation":"1391:12:6","nodeType":"VariableDeclaration","scope":456,"src":"1385:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":451,"name":"bytes","nodeType":"ElementaryTypeName","src":"1385:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":454,"indexed":false,"mutability":"mutable","name":"returnedValue","nameLocation":"1419:13:6","nodeType":"VariableDeclaration","scope":456,"src":"1413:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"1413:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1282:156:6"},"src":"1259:180:6"},{"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"1445:517:6","text":" @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n @notice Reacted on received notification with `typeId` & `data`.\n @param typeId The hash of a specific standard or a hook.\n @param data The arbitrary data received with the call.\n @custom:events {UniversalReceiver} event."},"functionSelector":"6bb56a14","id":466,"implemented":false,"kind":"function","modifiers":[],"name":"universalReceiver","nameLocation":"1976:17:6","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"typeId","nameLocation":"2011:6:6","nodeType":"VariableDeclaration","scope":466,"src":"2003:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"data","nameLocation":"2042:4:6","nodeType":"VariableDeclaration","scope":466,"src":"2027:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":460,"name":"bytes","nodeType":"ElementaryTypeName","src":"2027:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1993:59:6"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":466,"src":"2079:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":463,"name":"bytes","nodeType":"ElementaryTypeName","src":"2079:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2078:14:6"},"scope":467,"src":"1967:126:6","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":468,"src":"322:1773:6","usedErrors":[]}],"src":"39:2057:6"},"id":6},"@lukso/lsp1-contracts/contracts/LSP1Constants.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","exportedSymbols":{"_INTERFACEID_LSP1":[472],"_INTERFACEID_LSP1_DELEGATE":[475],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[481],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[478]},"id":482,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":469,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:7"},{"constant":true,"id":472,"mutability":"constant","name":"_INTERFACEID_LSP1","nameLocation":"108:17:7","nodeType":"VariableDeclaration","scope":482,"src":"92:46:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":470,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783662623536613134","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:7","typeDescriptions":{"typeIdentifier":"t_rational_1807051284_by_1","typeString":"int_const 1807051284"},"value":"0x6bb56a14"},"visibility":"internal"},{"constant":true,"id":475,"mutability":"constant","name":"_INTERFACEID_LSP1_DELEGATE","nameLocation":"156:26:7","nodeType":"VariableDeclaration","scope":482,"src":"140:55:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":473,"name":"bytes4","nodeType":"ElementaryTypeName","src":"140:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786132343562626461","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"185:10:7","typeDescriptions":{"typeIdentifier":"t_rational_2722479066_by_1","typeString":"int_const 2722479066"},"value":"0xa245bbda"},"visibility":"internal"},{"constant":true,"id":478,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nameLocation":"296:40:7","nodeType":"VariableDeclaration","scope":482,"src":"279:82:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":476,"name":"bytes10","nodeType":"ElementaryTypeName","src":"279:7:7","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783063666335316165633337633535613464306231","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"339:22:7","typeDescriptions":{"typeIdentifier":"t_rational_61322863157712349614257_by_1","typeString":"int_const 61322863157712349614257"},"value":"0x0cfc51aec37c55a4d0b1"},"visibility":"internal"},{"constant":true,"id":481,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nameLocation":"427:37:7","nodeType":"VariableDeclaration","scope":482,"src":"410:123:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"410:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830636663353161656333376335356134643062316136356336323535633462663266626466363237376633636330373330633435623832386236646238623437","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"467:66:7","typeDescriptions":{"typeIdentifier":"t_rational_5873563396395204772354203425660447968463963513255343663932314865640255753031_by_1","typeString":"int_const 5873...(68 digits omitted)...3031"},"value":"0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47"},"visibility":"internal"}],"src":"39:496:7"},"id":7},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","exportedSymbols":{"ERC165Checker":[3973],"ILSP1":[467],"LSP1Utils":[566],"LSP2Utils":[1465],"_INTERFACEID_LSP1":[472],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[481],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[478]},"id":567,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":483,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":567,"sourceUnit":3974,"src":"77:98:8","symbolAliases":[{"foreign":{"id":484,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"90:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","file":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","id":487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":567,"sourceUnit":1466,"src":"176:72:8","symbolAliases":[{"foreign":{"id":486,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"184:9:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","file":"./ILSP1UniversalReceiver.sol","id":489,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":567,"sourceUnit":468,"src":"263:77:8","symbolAliases":[{"foreign":{"id":488,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"271:22:8","typeDescriptions":{}},"local":"ILSP1","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","file":"./LSP1Constants.sol","id":493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":567,"sourceUnit":482,"src":"355:149:8","symbolAliases":[{"foreign":{"id":490,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"368:17:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":491,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"391:37:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":492,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"434:40:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP1Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":494,"nodeType":"StructuredDocumentation","src":"506:370:8","text":" @title LSP1 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n that implements LSP1 and retrieve informations related to LSP1 `typeId`.\n Based on LSP1 Universal Receiver standard."},"fullyImplemented":true,"id":566,"linearizedBaseContracts":[566],"name":"LSP1Utils","nameLocation":"885:9:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":497,"libraryName":{"id":495,"name":"ERC165Checker","nameLocations":["907:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":3973,"src":"907:13:8"},"nodeType":"UsingForDirective","src":"901:32:8","typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":521,"nodeType":"Block","src":"1487:226:8","statements":[{"condition":{"arguments":[{"id":509,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"1583:17:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":507,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1514:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1533:32:8","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":3972,"src":"1514:51:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1514:100:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":520,"nodeType":"IfStatement","src":"1497:210:8","trueBody":{"id":519,"nodeType":"Block","src":"1625:82:8","statements":[{"expression":{"arguments":[{"id":515,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"1683:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":516,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"1691:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":512,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1645:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":511,"name":"ILSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"1639:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$467_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiver_$467","typeString":"contract ILSP1UniversalReceiver"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1665:17:8","memberName":"universalReceiver","nodeType":"MemberAccess","referencedDeclaration":466,"src":"1639:43:8","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) payable external returns (bytes memory)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":518,"nodeType":"ExpressionStatement","src":"1639:57:8"}]}}]},"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"939:408:8","text":" @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n supports the LSP1 interface.\n @param lsp1Implementation The address of the contract to notify.\n @param typeId A `bytes32` typeId.\n @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address."},"id":522,"implemented":true,"kind":"function","modifiers":[],"name":"notifyUniversalReceiver","nameLocation":"1361:23:8","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"lsp1Implementation","nameLocation":"1402:18:8","nodeType":"VariableDeclaration","scope":522,"src":"1394:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"1394:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":502,"mutability":"mutable","name":"typeId","nameLocation":"1438:6:8","nodeType":"VariableDeclaration","scope":522,"src":"1430:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1430:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"data","nameLocation":"1467:4:8","nodeType":"VariableDeclaration","scope":522,"src":"1454:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":503,"name":"bytes","nodeType":"ElementaryTypeName","src":"1454:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1384:93:8"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"1487:0:8"},"scope":566,"src":"1352:361:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":536,"nodeType":"Block","src":"2326:77:8","statements":[{"expression":{"baseExpression":{"id":532,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2343:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":534,"indexExpression":{"id":533,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2358:37:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2343:53:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":531,"id":535,"nodeType":"Return","src":"2336:60:8"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"1719:471:8","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate` data key.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key."},"id":537,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValue","nameLocation":"2204:20:8","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"erc725YStorage","nameLocation":"2268:14:8","nodeType":"VariableDeclaration","scope":537,"src":"2234:48:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":526,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2242:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2234:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":525,"name":"bytes","nodeType":"ElementaryTypeName","src":"2253:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"}],"src":"2224:64:8"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"2312:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":529,"name":"bytes","nodeType":"ElementaryTypeName","src":"2312:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2311:14:8"},"scope":566,"src":"2195:208:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":564,"nodeType":"Block","src":"3178:216:8","statements":[{"assignments":[550],"declarations":[{"constant":false,"id":550,"mutability":"mutable","name":"lsp1TypeIdDataKey","nameLocation":"3196:17:8","nodeType":"VariableDeclaration","scope":564,"src":"3188:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3188:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":559,"initialValue":{"arguments":[{"id":553,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"3258:40:8","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"id":556,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3320:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3312:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":554,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3312:7:8","typeDescriptions":{}}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3312:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":551,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"3216:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1465_$","typeString":"type(library LSP2Utils)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3226:18:8","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":955,"src":"3216:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3216:121:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3188:149:8"},{"expression":{"baseExpression":{"id":560,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3354:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":562,"indexExpression":{"id":561,"name":"lsp1TypeIdDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"3369:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3354:33:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":548,"id":563,"nodeType":"Return","src":"3347:40:8"}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"2409:600:8","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @param typeId A bytes32 LSP1 `typeId`;\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key."},"id":565,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValueForTypeId","nameLocation":"3023:29:8","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"erc725YStorage","nameLocation":"3096:14:8","nodeType":"VariableDeclaration","scope":565,"src":"3062:48:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":541,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3070:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3062:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":540,"name":"bytes","nodeType":"ElementaryTypeName","src":"3081:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"typeId","nameLocation":"3128:6:8","nodeType":"VariableDeclaration","scope":565,"src":"3120:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3120:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3052:88:8"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"3164:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":546,"name":"bytes","nodeType":"ElementaryTypeName","src":"3164:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3163:14:8"},"scope":566,"src":"3014:380:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":567,"src":"877:2519:8","usedErrors":[]}],"src":"39:3358:8"},"id":8},"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","exportedSymbols":{"_INTERFACEID_LSP17_EXTENDABLE":[571],"_INTERFACEID_LSP17_EXTENSION":[574],"_LSP17_EXTENSION_PREFIX":[577]},"id":578,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":568,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:9"},{"constant":true,"id":571,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENDABLE","nameLocation":"150:29:9","nodeType":"VariableDeclaration","scope":578,"src":"134:58:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":569,"name":"bytes4","nodeType":"ElementaryTypeName","src":"134:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786139313866613662","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"182:10:9","typeDescriptions":{"typeIdentifier":"t_rational_2836986475_by_1","typeString":"int_const 2836986475"},"value":"0xa918fa6b"},"visibility":"internal"},{"constant":true,"id":574,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENSION","nameLocation":"251:28:9","nodeType":"VariableDeclaration","scope":578,"src":"235:57:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":572,"name":"bytes4","nodeType":"ElementaryTypeName","src":"235:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786365653738623430","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"282:10:9","typeDescriptions":{"typeIdentifier":"t_rational_3471280960_by_1","typeString":"int_const 3471280960"},"value":"0xcee78b40"},"visibility":"internal"},{"constant":true,"id":577,"mutability":"constant","name":"_LSP17_EXTENSION_PREFIX","nameLocation":"407:23:9","nodeType":"VariableDeclaration","scope":578,"src":"390:65:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":575,"name":"bytes10","nodeType":"ElementaryTypeName","src":"390:7:9","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30786365653738623430393464613836303131303936","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"433:22:9","typeDescriptions":{"typeIdentifier":"t_rational_977078727535809873907862_by_1","typeString":"int_const 977078727535809873907862"},"value":"0xcee78b4094da86011096"},"visibility":"internal"}],"src":"39:418:9"},"id":9},"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","exportedSymbols":{"InvalidExtensionAddress":[594],"InvalidFunctionSelector":[589],"NoExtensionFoundForFunctionSelector":[584]},"id":595,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":579,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:10"},{"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"64:94:10","text":" @dev reverts when there is no extension for the function selector being called with"},"errorSelector":"bb370b2b","id":584,"name":"NoExtensionFoundForFunctionSelector","nameLocation":"165:35:10","nodeType":"ErrorDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"functionSelector","nameLocation":"208:16:10","nodeType":"VariableDeclaration","scope":584,"src":"201:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":581,"name":"bytes4","nodeType":"ElementaryTypeName","src":"201:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"200:25:10"},"src":"159:67:10"},{"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"228:114:10","text":" @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)"},"errorSelector":"e5099ee3","id":589,"name":"InvalidFunctionSelector","nameLocation":"349:23:10","nodeType":"ErrorDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"data","nameLocation":"379:4:10","nodeType":"VariableDeclaration","scope":589,"src":"373:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":586,"name":"bytes","nodeType":"ElementaryTypeName","src":"373:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"372:12:10"},"src":"343:42:10"},{"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"387:110:10","text":" @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)"},"errorSelector":"42bfe79f","id":594,"name":"InvalidExtensionAddress","nameLocation":"504:23:10","nodeType":"ErrorDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"storedData","nameLocation":"534:10:10","nodeType":"VariableDeclaration","scope":594,"src":"528:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":591,"name":"bytes","nodeType":"ElementaryTypeName","src":"528:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"527:18:10"},"src":"498:48:10"}],"src":"39:508:10"},"id":10},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","exportedSymbols":{"ERC165":[3779],"ERC165Checker":[3973],"LSP17Extendable":[728],"NoExtensionFoundForFunctionSelector":[584],"_INTERFACEID_LSP17_EXTENDABLE":[571]},"id":729,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":596,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":598,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":729,"sourceUnit":3780,"src":"75:78:11","symbolAliases":[{"foreign":{"id":597,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"83:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":600,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":729,"sourceUnit":3974,"src":"154:98:11","symbolAliases":[{"foreign":{"id":599,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"167:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","file":"./LSP17Constants.sol","id":602,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":729,"sourceUnit":578,"src":"267:67:11","symbolAliases":[{"foreign":{"id":601,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"275:29:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","file":"./LSP17Errors.sol","id":604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":729,"sourceUnit":595,"src":"346:70:11","symbolAliases":[{"foreign":{"id":603,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"354:35:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":606,"name":"ERC165","nameLocations":["924:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":3779,"src":"924:6:11"},"id":607,"nodeType":"InheritanceSpecifier","src":"924:6:11"}],"canonicalName":"LSP17Extendable","contractDependencies":[],"contractKind":"contract","documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"418:468:11","text":" @title Module to add more functionalities to a contract using extensions.\n @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n This module can be inherited to extend the functionality of the parent contract when\n calling a function that doesn't exist on the parent contract via forwarding the call\n to an extension mapped to the function selector being called, set originally by the parent contract"},"fullyImplemented":false,"id":728,"linearizedBaseContracts":[728,3779,3985],"name":"LSP17Extendable","nameLocation":"905:15:11","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3778],"body":{"id":625,"nodeType":"Block","src":"1103:132:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"1132:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":617,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"1147:29:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1132:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":621,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"1216:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":619,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1192:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP17Extendable_$728_$","typeString":"type(contract super LSP17Extendable)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1198:17:11","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3778,"src":"1192:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1192:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1132:96:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":615,"id":624,"nodeType":"Return","src":"1113:115:11"}]},"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"937:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":626,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1007:17:11","nodeType":"FunctionDefinition","overrides":{"id":612,"nodeType":"OverrideSpecifier","overrides":[],"src":"1079:8:11"},"parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"interfaceId","nameLocation":"1041:11:11","nodeType":"VariableDeclaration","scope":626,"src":"1034:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":609,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1034:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1024:34:11"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":626,"src":"1097:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":613,"name":"bool","nodeType":"ElementaryTypeName","src":"1097:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1096:6:11"},"scope":728,"src":"998:237:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":657,"nodeType":"Block","src":"1774:341:11","statements":[{"assignments":[635,null],"declarations":[{"constant":false,"id":635,"mutability":"mutable","name":"erc165Extension","nameLocation":"1793:15:11","nodeType":"VariableDeclaration","scope":657,"src":"1785:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":641,"initialValue":{"arguments":[{"expression":{"expression":{"id":637,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"1856:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165_$3779_$","typeString":"type(contract ERC165)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1863:17:11","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3778,"src":"1856:24:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1881:8:11","memberName":"selector","nodeType":"MemberAccess","src":"1856:33:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":636,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1814:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1814:85:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"1784:115:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":642,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"1913:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1940:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1932:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:11","typeDescriptions":{}}},"id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1913:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":650,"nodeType":"IfStatement","src":"1909:47:11","trueBody":{"expression":{"hexValue":"66616c7365","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1951:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":633,"id":649,"nodeType":"Return","src":"1944:12:11"}},{"expression":{"arguments":[{"id":653,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"2050:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":654,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"2083:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":651,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"1986:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$3973_$","typeString":"type(library ERC165Checker)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2000:32:11","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":3972,"src":"1986:46:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1986:122:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":633,"id":656,"nodeType":"Return","src":"1967:141:11"}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"1241:412:11","text":" @dev Returns whether the interfaceId being checked is supported in the extension of the\n {supportsInterface} selector.\n To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n extension if the extension is set, if not it returns false."},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_supportsInterfaceInERC165Extension","nameLocation":"1667:35:11","nodeType":"FunctionDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"interfaceId","nameLocation":"1719:11:11","nodeType":"VariableDeclaration","scope":658,"src":"1712:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":628,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1712:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1702:34:11"},"returnParameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"1768:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":631,"name":"bool","nodeType":"ElementaryTypeName","src":"1768:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1767:6:11"},"scope":728,"src":"1658:457:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"2121:255:11","text":" @dev Returns the extension mapped to a specific function selector\n If no extension was found, return the address(0)\n To be overridden.\n Up to the implementer contract to return an extension based on a function selector"},"id":668,"implemented":false,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"2390:28:11","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"functionSelector","nameLocation":"2435:16:11","nodeType":"VariableDeclaration","scope":668,"src":"2428:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":660,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2428:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2418:39:11"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":668,"src":"2489:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"2489:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":668,"src":"2498:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":665,"name":"bool","nodeType":"ElementaryTypeName","src":"2498:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2488:15:11"},"scope":728,"src":"2381:123:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":726,"nodeType":"Block","src":"3788:991:11","statements":[{"assignments":[677,679],"declarations":[{"constant":false,"id":677,"mutability":"mutable","name":"extension","nameLocation":"3863:9:11","nodeType":"VariableDeclaration","scope":726,"src":"3855:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"3855:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"shouldForwardValue","nameLocation":"3891:18:11","nodeType":"VariableDeclaration","scope":726,"src":"3886:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":678,"name":"bool","nodeType":"ElementaryTypeName","src":"3886:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":684,"initialValue":{"arguments":[{"expression":{"id":681,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3951:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3955:3:11","memberName":"sig","nodeType":"MemberAccess","src":"3951:7:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":680,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"3922:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3922:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3841:118:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":685,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"4019:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4040:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4032:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"4032:7:11","typeDescriptions":{}}},"id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4019:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":696,"nodeType":"IfStatement","src":"4015:92:11","trueBody":{"errorCall":{"arguments":[{"expression":{"id":692,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4099:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4103:3:11","memberName":"sig","nodeType":"MemberAccess","src":"4099:7:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":691,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4063:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"RevertStatement","src":"4056:51:11"}},{"assignments":[698,700],"declarations":[{"constant":false,"id":698,"mutability":"mutable","name":"success","nameLocation":"4124:7:11","nodeType":"VariableDeclaration","scope":726,"src":"4119:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":697,"name":"bool","nodeType":"ElementaryTypeName","src":"4119:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"result","nameLocation":"4146:6:11","nodeType":"VariableDeclaration","scope":726,"src":"4133:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":699,"name":"bytes","nodeType":"ElementaryTypeName","src":"4133:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":718,"initialValue":{"arguments":[{"arguments":[{"id":711,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"4253:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":712,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4263:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4267:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4263:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":714,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4275:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4279:5:11","memberName":"value","nodeType":"MemberAccess","src":"4275:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":709,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4236:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4240:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"4236:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4236:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":701,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"4156:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4166:4:11","memberName":"call","nodeType":"MemberAccess","src":"4156:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"condition":{"id":703,"name":"shouldForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"4191:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4224:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4191:34:11","trueExpression":{"expression":{"id":704,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4212:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4216:5:11","memberName":"value","nodeType":"MemberAccess","src":"4212:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4156:79:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4156:130:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4118:168:11"},{"condition":{"id":719,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"4301:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":724,"nodeType":"Block","src":"4354:419:11","statements":[{"AST":{"nodeType":"YulBlock","src":"4638:125:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4656:36:11","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4685:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4679:5:11"},"nodeType":"YulFunctionCall","src":"4679:13:11"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"4660:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4720:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4728:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4716:3:11"},"nodeType":"YulFunctionCall","src":"4716:15:11"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"4733:15:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4709:6:11"},"nodeType":"YulFunctionCall","src":"4709:40:11"},"nodeType":"YulExpressionStatement","src":"4709:40:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":700,"isOffset":false,"isSlot":false,"src":"4685:6:11","valueSize":1},{"declaration":700,"isOffset":false,"isSlot":false,"src":"4720:6:11","valueSize":1}],"id":723,"nodeType":"InlineAssembly","src":"4629:134:11"}]},"id":725,"nodeType":"IfStatement","src":"4297:476:11","trueBody":{"id":722,"nodeType":"Block","src":"4310:38:11","statements":[{"expression":{"id":720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"4331:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":675,"id":721,"nodeType":"Return","src":"4324:13:11"}]}}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"2510:1160:11","text":" @dev Forwards the call to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the `address(0)` will be returned.\n Forwards the value if the extension is payable.\n Reverts if there is no extension for the function being called.\n If there is an extension for the function selector being called, it calls the extension with the\n `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n ```solidity\n (bool success, bytes memory result) = extension.call{value: msg.value}(\n     abi.encodePacked(callData, msg.sender, msg.value)\n );\n ```"},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"3684:24:11","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"callData","nameLocation":"3733:8:11","nodeType":"VariableDeclaration","scope":727,"src":"3718:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":670,"name":"bytes","nodeType":"ElementaryTypeName","src":"3718:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3708:39:11"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":727,"src":"3774:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":673,"name":"bytes","nodeType":"ElementaryTypeName","src":"3774:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3773:14:11"},"scope":728,"src":"3675:1104:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":729,"src":"887:3894:11","usedErrors":[]}],"src":"39:4743:11"},"id":11},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"ast":{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","exportedSymbols":{"IERC725Y":[437],"LSP2Utils":[1465]},"id":1466,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":730,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:12"},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","file":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","id":732,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1466,"sourceUnit":438,"src":"78:89:12","symbolAliases":[{"foreign":{"id":731,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"91:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP2Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"169:312:12","text":" @title LSP2 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n defined on the LSP2 standard.\n Based on LSP2 ERC725Y JSON Schema standard."},"fullyImplemented":true,"id":1465,"linearizedBaseContracts":[1465],"name":"LSP2Utils","nameLocation":"490:9:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":748,"nodeType":"Block","src":"929:49:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":744,"name":"keyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"962:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"956:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":742,"name":"bytes","nodeType":"ElementaryTypeName","src":"956:5:12","typeDescriptions":{}}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"956:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":741,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"946:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"946:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":740,"id":747,"nodeType":"Return","src":"939:32:12"}]},"documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"506:319:12","text":" @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n ```\n keccak256(\"keyName\")\n ```\n @param keyName The string to hash to generate a Singleton data key.\n @return The generated `bytes32` data key of key type Singleton."},"id":749,"implemented":true,"kind":"function","modifiers":[],"name":"generateSingletonKey","nameLocation":"839:20:12","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"keyName","nameLocation":"883:7:12","nodeType":"VariableDeclaration","scope":749,"src":"869:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":735,"name":"string","nodeType":"ElementaryTypeName","src":"869:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"859:37:12"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":749,"src":"920:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"920:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"919:9:12"},"scope":1465,"src":"830:148:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"1548:415:12","statements":[{"assignments":[758],"declarations":[{"constant":false,"id":758,"mutability":"mutable","name":"dataKey","nameLocation":"1571:7:12","nodeType":"VariableDeclaration","scope":797,"src":"1558:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"1558:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":763,"initialValue":{"arguments":[{"id":761,"name":"arrayKeyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1587:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1581:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":759,"name":"bytes","nodeType":"ElementaryTypeName","src":"1581:5:12","typeDescriptions":{}}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1558:42:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":765,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1618:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1626:6:12","memberName":"length","nodeType":"MemberAccess","src":"1618:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1636:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1618:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d555354206265206c6f6e676572207468616e20322063686172616374657273","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1639:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""},"value":"MUST be longer than 2 characters"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""}],"id":764,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1610:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1610:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"ExpressionStatement","src":"1610:64:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":773,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1705:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":778,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":774,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1713:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:6:12","memberName":"length","nodeType":"MemberAccess","src":"1713:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1730:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1713:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1705:27:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783562","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1736:4:12","typeDescriptions":{"typeIdentifier":"t_rational_91_by_1","typeString":"int_const 91"},"value":"0x5b"},"src":"1705:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":781,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1783:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":786,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":782,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:6:12","memberName":"length","nodeType":"MemberAccess","src":"1791:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1791:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1783:27:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783564","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1814:4:12","typeDescriptions":{"typeIdentifier":"t_rational_93_by_1","typeString":"int_const 93"},"value":"0x5d"},"src":"1783:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1705:113:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696e6720656d7074792073717561726520627261636b65747320275b5d272061742074686520656e64206f6620746865206b6579206e616d65","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:63:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""},"value":"Missing empty square brackets '[]' at the end of the key name"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""}],"id":772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1684:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1684:236:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"1684:236:12"},{"expression":{"arguments":[{"id":794,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1948:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":793,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1938:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":756,"id":796,"nodeType":"Return","src":"1931:25:12"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"984:459:12","text":" @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n ```\n keccak256(\"arrayKeyName[]\")\n ```\n @param arrayKeyName The string that will be used to generate a data key of key type Array.\n @return The generated `bytes32` data key of key type Array.\n @custom:requirements\n - The `keyName` must include at the end of the string the square brackets `\"[]\"`."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayKey","nameLocation":"1457:16:12","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"arrayKeyName","nameLocation":"1497:12:12","nodeType":"VariableDeclaration","scope":798,"src":"1483:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":751,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1473:42:12"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":798,"src":"1539:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1539:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1538:9:12"},"scope":1465,"src":"1448:515:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":828,"nodeType":"Block","src":"2592:168:12","statements":[{"assignments":[809],"declarations":[{"constant":false,"id":809,"mutability":"mutable","name":"elementInArray","nameLocation":"2615:14:12","nodeType":"VariableDeclaration","scope":828,"src":"2602:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":808,"name":"bytes","nodeType":"ElementaryTypeName","src":"2602:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":822,"initialValue":{"arguments":[{"arguments":[{"id":815,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"2666:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2658:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":813,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2658:7:12","typeDescriptions":{}}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2658:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},{"arguments":[{"id":819,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"2697:5:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2689:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":817,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2689:7:12","typeDescriptions":{}}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"},{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"expression":{"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2632:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":810,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:12","typeDescriptions":{}}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2638:6:12","memberName":"concat","nodeType":"MemberAccess","src":"2632:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2632:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2602:111:12"},{"expression":{"arguments":[{"id":825,"name":"elementInArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"2738:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2730:7:12","typeDescriptions":{}}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":807,"id":827,"nodeType":"Return","src":"2723:30:12"}]},"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"1969:491:12","text":" @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n with the 16 bytes of `index`. As:\n ```\n arrayKey[index]\n ```\n @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n @param index The index number in the `arrayKey`.\n @return The generated `bytes32` data key of key type Array at a specific `index`."},"id":829,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayElementKeyAtIndex","nameLocation":"2474:30:12","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"arrayKey","nameLocation":"2522:8:12","nodeType":"VariableDeclaration","scope":829,"src":"2514:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2514:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"index","nameLocation":"2548:5:12","nodeType":"VariableDeclaration","scope":829,"src":"2540:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":802,"name":"uint128","nodeType":"ElementaryTypeName","src":"2540:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2504:55:12"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"2583:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2583:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2582:9:12"},"scope":1465,"src":"2465:295:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":881,"nodeType":"Block","src":"3444:325:12","statements":[{"assignments":[840],"declarations":[{"constant":false,"id":840,"mutability":"mutable","name":"firstWordHash","nameLocation":"3462:13:12","nodeType":"VariableDeclaration","scope":881,"src":"3454:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3454:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":847,"initialValue":{"arguments":[{"arguments":[{"id":844,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"3494:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3488:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":842,"name":"bytes","nodeType":"ElementaryTypeName","src":"3488:5:12","typeDescriptions":{}}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":841,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3478:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3478:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3454:51:12"},{"assignments":[849],"declarations":[{"constant":false,"id":849,"mutability":"mutable","name":"lastWordHash","nameLocation":"3523:12:12","nodeType":"VariableDeclaration","scope":881,"src":"3515:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":856,"initialValue":{"arguments":[{"arguments":[{"id":853,"name":"lastWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"3554:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3548:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":851,"name":"bytes","nodeType":"ElementaryTypeName","src":"3548:5:12","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":850,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3538:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3515:49:12"},{"assignments":[858],"declarations":[{"constant":false,"id":858,"mutability":"mutable","name":"temporaryBytes","nameLocation":"3588:14:12","nodeType":"VariableDeclaration","scope":881,"src":"3575:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":857,"name":"bytes","nodeType":"ElementaryTypeName","src":"3575:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":875,"initialValue":{"arguments":[{"arguments":[{"id":864,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"3639:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3631:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":862,"name":"bytes10","nodeType":"ElementaryTypeName","src":"3631:7:12","typeDescriptions":{}}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3631:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3674:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3667:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":866,"name":"bytes2","nodeType":"ElementaryTypeName","src":"3667:6:12","typeDescriptions":{}}},"id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3667:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":872,"name":"lastWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"3698:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3690:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":870,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3690:7:12","typeDescriptions":{}}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3690:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3605:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":859,"name":"bytes","nodeType":"ElementaryTypeName","src":"3605:5:12","typeDescriptions":{}}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3611:6:12","memberName":"concat","nodeType":"MemberAccess","src":"3605:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3605:116:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3575:146:12"},{"expression":{"arguments":[{"id":878,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"3747:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3739:7:12","typeDescriptions":{}}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":838,"id":880,"nodeType":"Return","src":"3732:30:12"}]},"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"2766:542:12","text":" @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n ```\n bytes10(firstWordHash):0000:bytes20(lastWordHash)\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param lastWord The word to retrieve the first 10 bytes of its hash.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`."},"id":882,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"3322:18:12","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"firstWord","nameLocation":"3364:9:12","nodeType":"VariableDeclaration","scope":882,"src":"3350:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":831,"name":"string","nodeType":"ElementaryTypeName","src":"3350:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"lastWord","nameLocation":"3397:8:12","nodeType":"VariableDeclaration","scope":882,"src":"3383:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":833,"name":"string","nodeType":"ElementaryTypeName","src":"3383:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3340:71:12"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":882,"src":"3435:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3435:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3434:9:12"},"scope":1465,"src":"3313:456:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":925,"nodeType":"Block","src":"4458:258:12","statements":[{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"firstWordHash","nameLocation":"4476:13:12","nodeType":"VariableDeclaration","scope":925,"src":"4468:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":900,"initialValue":{"arguments":[{"arguments":[{"id":897,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"4508:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4502:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":895,"name":"bytes","nodeType":"ElementaryTypeName","src":"4502:5:12","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":894,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4492:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4468:51:12"},{"assignments":[902],"declarations":[{"constant":false,"id":902,"mutability":"mutable","name":"temporaryBytes","nameLocation":"4543:14:12","nodeType":"VariableDeclaration","scope":925,"src":"4530:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":901,"name":"bytes","nodeType":"ElementaryTypeName","src":"4530:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":919,"initialValue":{"arguments":[{"arguments":[{"id":908,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"4594:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":906,"name":"bytes10","nodeType":"ElementaryTypeName","src":"4586:7:12","typeDescriptions":{}}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4629:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4622:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":910,"name":"bytes2","nodeType":"ElementaryTypeName","src":"4622:6:12","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4622:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":916,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"4653:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4645:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":914,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4645:7:12","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4645:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4560:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":903,"name":"bytes","nodeType":"ElementaryTypeName","src":"4560:5:12","typeDescriptions":{}}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4566:6:12","memberName":"concat","nodeType":"MemberAccess","src":"4560:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4560:108:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4530:138:12"},{"expression":{"arguments":[{"id":922,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"4694:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4686:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4686:7:12","typeDescriptions":{}}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4686:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":891,"id":924,"nodeType":"Return","src":"4679:30:12"}]},"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"3775:557:12","text":" @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n ```\n bytes10(firstWordHash):0000:<address>\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param addr An address to map `firstWord` to.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`."},"id":926,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"4346:18:12","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"firstWord","nameLocation":"4388:9:12","nodeType":"VariableDeclaration","scope":926,"src":"4374:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":884,"name":"string","nodeType":"ElementaryTypeName","src":"4374:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"addr","nameLocation":"4415:4:12","nodeType":"VariableDeclaration","scope":926,"src":"4407:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"4407:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4364:61:12"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"4449:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4449:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4448:9:12"},"scope":1465,"src":"4337:379:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":954,"nodeType":"Block","src":"5320:177:12","statements":[{"assignments":[937],"declarations":[{"constant":false,"id":937,"mutability":"mutable","name":"generatedKey","nameLocation":"5343:12:12","nodeType":"VariableDeclaration","scope":954,"src":"5330:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":936,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":948,"initialValue":{"arguments":[{"id":941,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"5384:9:12","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5414:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5407:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":942,"name":"bytes2","nodeType":"ElementaryTypeName","src":"5407:6:12","typeDescriptions":{}}},"id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":946,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"5430:12:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5358:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":938,"name":"bytes","nodeType":"ElementaryTypeName","src":"5358:5:12","typeDescriptions":{}}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5364:6:12","memberName":"concat","nodeType":"MemberAccess","src":"5358:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5358:94:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5330:122:12"},{"expression":{"arguments":[{"id":951,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"5477:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5469:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":949,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5469:7:12","typeDescriptions":{}}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5469:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":935,"id":953,"nodeType":"Return","src":"5462:28:12"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"4722:470:12","text":" @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n ```\n keyPrefix:bytes20Value\n ```\n @param keyPrefix The first part of the data key of key type Mapping.\n @param bytes20Value The second part of the data key of key type Mapping.\n @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`."},"id":955,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"5206:18:12","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"keyPrefix","nameLocation":"5242:9:12","nodeType":"VariableDeclaration","scope":955,"src":"5234:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":928,"name":"bytes10","nodeType":"ElementaryTypeName","src":"5234:7:12","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"bytes20Value","nameLocation":"5269:12:12","nodeType":"VariableDeclaration","scope":955,"src":"5261:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":930,"name":"bytes20","nodeType":"ElementaryTypeName","src":"5261:7:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"5224:63:12"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":955,"src":"5311:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5311:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5310:9:12"},"scope":1465,"src":"5197:300:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"6379:356:12","statements":[{"assignments":[968],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"firstWordHash","nameLocation":"6397:13:12","nodeType":"VariableDeclaration","scope":1013,"src":"6389:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6389:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":975,"initialValue":{"arguments":[{"arguments":[{"id":972,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6429:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6423:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"6423:5:12","typeDescriptions":{}}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6423:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":969,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6413:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6413:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6389:51:12"},{"assignments":[977],"declarations":[{"constant":false,"id":977,"mutability":"mutable","name":"secondWordHash","nameLocation":"6458:14:12","nodeType":"VariableDeclaration","scope":1013,"src":"6450:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6450:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":984,"initialValue":{"arguments":[{"arguments":[{"id":981,"name":"secondWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"6491:10:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6485:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":979,"name":"bytes","nodeType":"ElementaryTypeName","src":"6485:5:12","typeDescriptions":{}}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6485:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":978,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6475:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6475:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6450:53:12"},{"assignments":[986],"declarations":[{"constant":false,"id":986,"mutability":"mutable","name":"temporaryBytes","nameLocation":"6527:14:12","nodeType":"VariableDeclaration","scope":1013,"src":"6514:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":985,"name":"bytes","nodeType":"ElementaryTypeName","src":"6514:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1007,"initialValue":{"arguments":[{"arguments":[{"id":992,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"6577:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6570:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes6_$","typeString":"type(bytes6)"},"typeName":{"id":990,"name":"bytes6","nodeType":"ElementaryTypeName","src":"6570:6:12","typeDescriptions":{}}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6570:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"arguments":[{"id":996,"name":"secondWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"6612:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6605:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":994,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6605:6:12","typeDescriptions":{}}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6605:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6648:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6641:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":998,"name":"bytes2","nodeType":"ElementaryTypeName","src":"6641:6:12","typeDescriptions":{}}},"id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6641:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":1004,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"6672:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6664:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1002,"name":"bytes20","nodeType":"ElementaryTypeName","src":"6664:7:12","typeDescriptions":{}}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6664:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6544:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":987,"name":"bytes","nodeType":"ElementaryTypeName","src":"6544:5:12","typeDescriptions":{}}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6550:6:12","memberName":"concat","nodeType":"MemberAccess","src":"6544:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6544:143:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6514:173:12"},{"expression":{"arguments":[{"id":1010,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"6713:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6705:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6705:7:12","typeDescriptions":{}}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6705:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":966,"id":1012,"nodeType":"Return","src":"6698:30:12"}]},"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"5503:704:12","text":" @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n ```\n bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n ```\n @param firstWord The word to retrieve the first 6 bytes of its hash.\n @param secondWord The word to retrieve the first 4 bytes of its hash.\n @param addr The address that makes the last part of the MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"6221:30:12","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"firstWord","nameLocation":"6275:9:12","nodeType":"VariableDeclaration","scope":1014,"src":"6261:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":957,"name":"string","nodeType":"ElementaryTypeName","src":"6261:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"secondWord","nameLocation":"6308:10:12","nodeType":"VariableDeclaration","scope":1014,"src":"6294:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":959,"name":"string","nodeType":"ElementaryTypeName","src":"6294:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"addr","nameLocation":"6336:4:12","nodeType":"VariableDeclaration","scope":1014,"src":"6328:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"6328:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6251:95:12"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"6370:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6369:9:12"},"scope":1465,"src":"6212:523:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"7579:197:12","statements":[{"assignments":[1027],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"generatedKey","nameLocation":"7602:12:12","nodeType":"VariableDeclaration","scope":1045,"src":"7589:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1026,"name":"bytes","nodeType":"ElementaryTypeName","src":"7589:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1039,"initialValue":{"arguments":[{"id":1031,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"7643:9:12","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"id":1032,"name":"mapPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7666:9:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7696:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7689:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1033,"name":"bytes2","nodeType":"ElementaryTypeName","src":"7689:6:12","typeDescriptions":{}}},"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7689:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1037,"name":"subMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7712:9:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7617:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1028,"name":"bytes","nodeType":"ElementaryTypeName","src":"7617:5:12","typeDescriptions":{}}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7623:6:12","memberName":"concat","nodeType":"MemberAccess","src":"7617:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7617:114:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7589:142:12"},{"expression":{"arguments":[{"id":1042,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"7756:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7748:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7748:7:12","typeDescriptions":{}}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7748:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1025,"id":1044,"nodeType":"Return","src":"7741:28:12"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"6741:676:12","text":" @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n ```\n keyPrefix:mapPrefix:0000:subMapKey\n ```\n @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"7431:30:12","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"keyPrefix","nameLocation":"7478:9:12","nodeType":"VariableDeclaration","scope":1046,"src":"7471:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"typeName":{"id":1016,"name":"bytes6","nodeType":"ElementaryTypeName","src":"7471:6:12","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"mapPrefix","nameLocation":"7504:9:12","nodeType":"VariableDeclaration","scope":1046,"src":"7497:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1018,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7497:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"subMapKey","nameLocation":"7531:9:12","nodeType":"VariableDeclaration","scope":1046,"src":"7523:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1020,"name":"bytes20","nodeType":"ElementaryTypeName","src":"7523:7:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"7461:85:12"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1046,"src":"7570:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7570:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7569:9:12"},"scope":1465,"src":"7422:354:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1074,"nodeType":"Block","src":"8434:177:12","statements":[{"assignments":[1057],"declarations":[{"constant":false,"id":1057,"mutability":"mutable","name":"generatedKey","nameLocation":"8457:12:12","nodeType":"VariableDeclaration","scope":1074,"src":"8444:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1056,"name":"bytes","nodeType":"ElementaryTypeName","src":"8444:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1068,"initialValue":{"arguments":[{"id":1061,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"8498:9:12","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8528:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8521:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1062,"name":"bytes2","nodeType":"ElementaryTypeName","src":"8521:6:12","typeDescriptions":{}}},"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1066,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"8544:12:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8472:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1058,"name":"bytes","nodeType":"ElementaryTypeName","src":"8472:5:12","typeDescriptions":{}}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8478:6:12","memberName":"concat","nodeType":"MemberAccess","src":"8472:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8472:94:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8444:122:12"},{"expression":{"arguments":[{"id":1071,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"8591:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8583:7:12","typeDescriptions":{}}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1055,"id":1073,"nodeType":"Return","src":"8576:28:12"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"7782:512:12","text":" @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n (containing the first and second mapped word) to a specific `bytes20Value`."},"id":1075,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"8308:30:12","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"keyPrefix","nameLocation":"8356:9:12","nodeType":"VariableDeclaration","scope":1075,"src":"8348:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1048,"name":"bytes10","nodeType":"ElementaryTypeName","src":"8348:7:12","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"bytes20Value","nameLocation":"8383:12:12","nodeType":"VariableDeclaration","scope":1075,"src":"8375:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1050,"name":"bytes20","nodeType":"ElementaryTypeName","src":"8375:7:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"8338:63:12"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1075,"src":"8425:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8425:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8424:9:12"},"scope":1465,"src":"8299:312:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1115,"nodeType":"Block","src":"9017:208:12","statements":[{"assignments":[1088],"declarations":[{"constant":false,"id":1088,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9035:18:12","nodeType":"VariableDeclaration","scope":1115,"src":"9027:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9027:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1095,"initialValue":{"arguments":[{"arguments":[{"id":1092,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"9072:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1090,"name":"bytes","nodeType":"ElementaryTypeName","src":"9066:5:12","typeDescriptions":{}}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1089,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9056:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9056:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9027:59:12"},{"assignments":[1097],"declarations":[{"constant":false,"id":1097,"mutability":"mutable","name":"jsonDigest","nameLocation":"9104:10:12","nodeType":"VariableDeclaration","scope":1115,"src":"9096:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9096:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1104,"initialValue":{"arguments":[{"arguments":[{"id":1101,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"9133:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9127:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1099,"name":"bytes","nodeType":"ElementaryTypeName","src":"9127:5:12","typeDescriptions":{}}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9127:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1098,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9117:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9117:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9096:43:12"},{"expression":{"arguments":[{"arguments":[{"id":1109,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"9181:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9174:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1107,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9174:6:12","typeDescriptions":{}}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9174:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1111,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"9202:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1112,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9214:3:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1105,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9157:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9161:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"9157:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1086,"id":1114,"nodeType":"Return","src":"9150:68:12"}]},"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"8617:231:12","text":" @dev Generate a JSONURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param json Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted."},"id":1116,"implemented":true,"kind":"function","modifiers":[],"name":"generateJSONURLValue","nameLocation":"8862:20:12","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"hashFunction","nameLocation":"8906:12:12","nodeType":"VariableDeclaration","scope":1116,"src":"8892:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1077,"name":"string","nodeType":"ElementaryTypeName","src":"8892:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"json","nameLocation":"8942:4:12","nodeType":"VariableDeclaration","scope":1116,"src":"8928:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1079,"name":"string","nodeType":"ElementaryTypeName","src":"8928:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"url","nameLocation":"8970:3:12","nodeType":"VariableDeclaration","scope":1116,"src":"8956:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1081,"name":"string","nodeType":"ElementaryTypeName","src":"8956:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8882:97:12"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1116,"src":"9003:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1084,"name":"bytes","nodeType":"ElementaryTypeName","src":"9003:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9002:14:12"},"scope":1465,"src":"8853:372:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1156,"nodeType":"Block","src":"9710:214:12","statements":[{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9728:18:12","nodeType":"VariableDeclaration","scope":1156,"src":"9720:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9720:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1136,"initialValue":{"arguments":[{"arguments":[{"id":1133,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"9765:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9759:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1131,"name":"bytes","nodeType":"ElementaryTypeName","src":"9759:5:12","typeDescriptions":{}}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1130,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9749:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9749:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9720:59:12"},{"assignments":[1138],"declarations":[{"constant":false,"id":1138,"mutability":"mutable","name":"jsonDigest","nameLocation":"9797:10:12","nodeType":"VariableDeclaration","scope":1156,"src":"9789:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9789:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1145,"initialValue":{"arguments":[{"arguments":[{"id":1142,"name":"assetBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"9826:10:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9820:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1140,"name":"bytes","nodeType":"ElementaryTypeName","src":"9820:5:12","typeDescriptions":{}}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9820:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1139,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9810:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9810:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9789:49:12"},{"expression":{"arguments":[{"arguments":[{"id":1150,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"9880:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9873:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1148,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9873:6:12","typeDescriptions":{}}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9873:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1152,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"9901:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1153,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"9913:3:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1146,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9856:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9860:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"9856:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1127,"id":1155,"nodeType":"Return","src":"9849:68:12"}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"9231:303:12","text":" @dev Generate a ASSETURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param assetBytes Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted.\n @return The encoded value as an `ASSETURL`."},"id":1157,"implemented":true,"kind":"function","modifiers":[],"name":"generateASSETURLValue","nameLocation":"9548:21:12","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"hashFunction","nameLocation":"9593:12:12","nodeType":"VariableDeclaration","scope":1157,"src":"9579:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1118,"name":"string","nodeType":"ElementaryTypeName","src":"9579:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"assetBytes","nameLocation":"9629:10:12","nodeType":"VariableDeclaration","scope":1157,"src":"9615:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1120,"name":"string","nodeType":"ElementaryTypeName","src":"9615:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"url","nameLocation":"9663:3:12","nodeType":"VariableDeclaration","scope":1157,"src":"9649:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1122,"name":"string","nodeType":"ElementaryTypeName","src":"9649:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9569:103:12"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1157,"src":"9696:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1125,"name":"bytes","nodeType":"ElementaryTypeName","src":"9696:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9695:14:12"},"scope":1465,"src":"9539:385:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1220,"nodeType":"Block","src":"10373:1273:12","statements":[{"assignments":[1167],"declarations":[{"constant":false,"id":1167,"mutability":"mutable","name":"pointer","nameLocation":"10870:7:12","nodeType":"VariableDeclaration","scope":1220,"src":"10862:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"10862:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":" Pointer will always land on these values:\n ↓↓↓↓\n 0003 a00000\n 0005 fff83a0011\n 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n 0012 bb000000000000000000000000000000beef\n 0019 cc00000000000000000000000000000000000000000000deed\n ↑↑↑↑\n The pointer can only land on the length of the following bytes value.","id":1169,"initialValue":{"hexValue":"30","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10880:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10862:19:12"},{"body":{"id":1209,"nodeType":"Block","src":"11164:392:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"11182:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11192:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11182:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1177,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"11197:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11215:6:12","memberName":"length","nodeType":"MemberAccess","src":"11197:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1182,"nodeType":"IfStatement","src":"11178:57:12","trueBody":{"expression":{"hexValue":"66616c7365","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11230:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1164,"id":1181,"nodeType":"Return","src":"11223:12:12"}},{"assignments":[1184],"declarations":[{"constant":false,"id":1184,"mutability":"mutable","name":"elementLength","nameLocation":"11257:13:12","nodeType":"VariableDeclaration","scope":1209,"src":"11249:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"11249:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1202,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"baseExpression":{"id":1191,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"11367:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1193,"indexExpression":{"id":1192,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"11385:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11367:26:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"baseExpression":{"id":1194,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"11419:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1198,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1195,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"11437:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11437:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11419:30:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"id":1189,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11325:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11329:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"11325:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11325:146:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11297:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1187,"name":"bytes2","nodeType":"ElementaryTypeName","src":"11297:6:12","typeDescriptions":{}}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:192:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes2","typeString":"bytes2"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11273:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1185,"name":"uint16","nodeType":"ElementaryTypeName","src":"11273:6:12","typeDescriptions":{}}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11273:230:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"11249:254:12"},{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1203,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"11517:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"elementLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"11528:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11544:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11528:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11517:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"nodeType":"ExpressionStatement","src":"11517:28:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1170,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"11128:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1171,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"11138:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11156:6:12","memberName":"length","nodeType":"MemberAccess","src":"11138:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11128:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Check each length byte and make sure that when you reach the last length byte.\n Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.","id":1210,"nodeType":"WhileStatement","src":"11121:435:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1211,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"11569:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1212,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"11580:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11598:6:12","memberName":"length","nodeType":"MemberAccess","src":"11580:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11569:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1217,"nodeType":"IfStatement","src":"11565:52:12","trueBody":{"expression":{"hexValue":"74727565","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11613:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1164,"id":1216,"nodeType":"Return","src":"11606:11:12"}},{"expression":{"hexValue":"66616c7365","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11634:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1164,"id":1219,"nodeType":"Return","src":"11627:12:12"}]},"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"9930:334:12","text":" @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n @param compactBytesArray The bytes value to verify.\n @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise."},"id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"isCompactBytesArray","nameLocation":"10278:19:12","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"compactBytesArray","nameLocation":"10320:17:12","nodeType":"VariableDeclaration","scope":1221,"src":"10307:30:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1159,"name":"bytes","nodeType":"ElementaryTypeName","src":"10307:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10297:46:12"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1221,"src":"10367:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1162,"name":"bool","nodeType":"ElementaryTypeName","src":"10367:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10366:6:12"},"scope":1465,"src":"10269:1377:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1239,"nodeType":"Block","src":"12056:104:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1229,"name":"arrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"12070:11:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12082:6:12","memberName":"length","nodeType":"MemberAccess","src":"12070:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3136","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12092:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12070:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1236,"nodeType":"IfStatement","src":"12066:66:12","trueBody":{"id":1235,"nodeType":"Block","src":"12096:36:12","statements":[{"expression":{"hexValue":"74727565","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12117:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1228,"id":1234,"nodeType":"Return","src":"12110:11:12"}]}},{"expression":{"hexValue":"66616c7365","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12148:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1228,"id":1238,"nodeType":"Return","src":"12141:12:12"}]},"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"11652:293:12","text":" @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n @param arrayLength Plain bytes that should be validated.\n @return `true` if the value is 16 bytes long, `false` otherwise."},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"isValidLSP2ArrayLengthValue","nameLocation":"11959:27:12","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"arrayLength","nameLocation":"12009:11:12","nodeType":"VariableDeclaration","scope":1240,"src":"11996:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1223,"name":"bytes","nodeType":"ElementaryTypeName","src":"11996:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11986:40:12"},"returnParameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1240,"src":"12050:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1226,"name":"bool","nodeType":"ElementaryTypeName","src":"12050:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12049:6:12"},"scope":1465,"src":"11950:210:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"12894:512:12","statements":[{"expression":{"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1258,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"12904:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12929:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12915:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12919:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1260,"nodeType":"ArrayTypeName","src":"12919:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12915:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"12904:27:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1265,"nodeType":"ExpressionStatement","src":"12904:27:12"},{"expression":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1266,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"12941:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12954:11:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":1267,"name":"bytes","nodeType":"ElementaryTypeName","src":"12958:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1268,"nodeType":"ArrayTypeName","src":"12958:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12954:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"12941:27:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1273,"nodeType":"ExpressionStatement","src":"12941:27:12"},{"expression":{"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1274,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13043:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1276,"indexExpression":{"hexValue":"30","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13052:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13043:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1277,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"13057:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13043:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1279,"nodeType":"ExpressionStatement","src":"13043:22:12"},{"expression":{"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1280,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"13075:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1282,"indexExpression":{"hexValue":"30","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13086:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13075:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1285,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"13108:14:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1283,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13091:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13095:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"13091:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13091:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"13075:48:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1288,"nodeType":"ExpressionStatement","src":"13075:48:12"},{"expression":{"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1289,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13198:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1291,"indexExpression":{"hexValue":"31","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13207:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13198:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1292,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"13212:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13198:34:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1294,"nodeType":"ExpressionStatement","src":"13198:34:12"},{"expression":{"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1295,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"13242:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1297,"indexExpression":{"hexValue":"31","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13253:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13242:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13258:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13242:18:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1300,"nodeType":"ExpressionStatement","src":"13242:18:12"},{"expression":{"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1301,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13335:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1303,"indexExpression":{"hexValue":"32","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13344:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13335:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1304,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"13349:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13335:36:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1306,"nodeType":"ExpressionStatement","src":"13335:36:12"},{"expression":{"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1307,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"13381:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1309,"indexExpression":{"hexValue":"32","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13392:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13381:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13397:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13381:18:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1312,"nodeType":"ExpressionStatement","src":"13381:18:12"}]},"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"12166:434:12","text":" @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"removeLastElementFromArrayAndMap","nameLocation":"12614:32:12","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"arrayKey","nameLocation":"12664:8:12","nodeType":"VariableDeclaration","scope":1314,"src":"12656:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12656:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"newArrayLength","nameLocation":"12690:14:12","nodeType":"VariableDeclaration","scope":1314,"src":"12682:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1244,"name":"uint128","nodeType":"ElementaryTypeName","src":"12682:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"12722:22:12","nodeType":"VariableDeclaration","scope":1314,"src":"12714:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12714:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"12762:20:12","nodeType":"VariableDeclaration","scope":1314,"src":"12754:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12754:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12646:142:12"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"dataKeys","nameLocation":"12853:8:12","nodeType":"VariableDeclaration","scope":1314,"src":"12836:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12836:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1252,"nodeType":"ArrayTypeName","src":"12836:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"dataValues","nameLocation":"12878:10:12","nodeType":"VariableDeclaration","scope":1314,"src":"12863:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1254,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1255,"nodeType":"ArrayTypeName","src":"12863:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12835:54:12"},"scope":1465,"src":"12605:801:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1463,"nodeType":"Block","src":"14506:1736:12","statements":[{"expression":{"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1337,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"14516:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14541:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14527:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14531:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1339,"nodeType":"ArrayTypeName","src":"14531:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14527:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"14516:27:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1344,"nodeType":"ExpressionStatement","src":"14516:27:12"},{"expression":{"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1345,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"14553:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14578:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14566:11:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":1346,"name":"bytes","nodeType":"ElementaryTypeName","src":"14570:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1347,"nodeType":"ArrayTypeName","src":"14570:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"14553:27:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1352,"nodeType":"ExpressionStatement","src":"14553:27:12"},{"expression":{"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1353,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"14655:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1355,"indexExpression":{"hexValue":"30","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14664:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14655:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1356,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"14669:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14655:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1358,"nodeType":"ExpressionStatement","src":"14655:22:12"},{"expression":{"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1359,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"14687:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1361,"indexExpression":{"hexValue":"30","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14698:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14687:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1364,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"14720:14:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1362,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14703:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14707:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"14703:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14703:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"14687:48:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1367,"nodeType":"ExpressionStatement","src":"14687:48:12"},{"expression":{"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1368,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"14810:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1370,"indexExpression":{"hexValue":"31","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14819:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14810:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1371,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"14824:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14810:34:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1373,"nodeType":"ExpressionStatement","src":"14810:34:12"},{"expression":{"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1374,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"14854:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1376,"indexExpression":{"hexValue":"31","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14865:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14854:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14870:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"14854:18:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1379,"nodeType":"ExpressionStatement","src":"14854:18:12"},{"assignments":[1381],"declarations":[{"constant":false,"id":1381,"mutability":"mutable","name":"lastElementIndexKey","nameLocation":"14952:19:12","nodeType":"VariableDeclaration","scope":1463,"src":"14944:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14944:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1387,"initialValue":{"arguments":[{"id":1384,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"15028:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1385,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"15050:14:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1382,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"14974:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1465_$","typeString":"type(library LSP2Utils)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14984:30:12","memberName":"generateArrayElementKeyAtIndex","nodeType":"MemberAccess","referencedDeclaration":829,"src":"14974:40:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint128_$returns$_t_bytes32_$","typeString":"function (bytes32,uint128) pure returns (bytes32)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14974:100:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14944:130:12"},{"assignments":[1389],"declarations":[{"constant":false,"id":1389,"mutability":"mutable","name":"lastElementIndexValue","nameLocation":"15169:21:12","nodeType":"VariableDeclaration","scope":1463,"src":"15161:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1388,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15161:7:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"id":1397,"initialValue":{"arguments":[{"arguments":[{"id":1394,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"15238:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1392,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"15214:15:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15230:7:12","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":408,"src":"15214:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15214:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15193:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1390,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15193:7:12","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15193:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"nodeType":"VariableDeclarationStatement","src":"15161:107:12"},{"expression":{"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1398,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"15384:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1400,"indexExpression":{"hexValue":"32","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15393:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15384:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1401,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"15398:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15384:36:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1403,"nodeType":"ExpressionStatement","src":"15384:36:12"},{"expression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1404,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"15430:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1406,"indexExpression":{"hexValue":"32","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15441:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15430:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1410,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"15459:21:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15446:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1407,"name":"bytes","nodeType":"ElementaryTypeName","src":"15446:5:12","typeDescriptions":{}}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15452:6:12","memberName":"concat","nodeType":"MemberAccess","src":"15446:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15446:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"15430:51:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1413,"nodeType":"ExpressionStatement","src":"15430:51:12"},{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1414,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"15555:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1416,"indexExpression":{"hexValue":"33","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15564:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15555:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1417,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"15569:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15555:33:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1419,"nodeType":"ExpressionStatement","src":"15555:33:12"},{"expression":{"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1420,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"15598:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1422,"indexExpression":{"hexValue":"33","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15598:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15614:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"15598:18:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1425,"nodeType":"ExpressionStatement","src":"15598:18:12"},{"assignments":[1427],"declarations":[{"constant":false,"id":1427,"mutability":"mutable","name":"lastElementMapKey","nameLocation":"15697:17:12","nodeType":"VariableDeclaration","scope":1463,"src":"15689:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15689:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1436,"initialValue":{"arguments":[{"arguments":[{"id":1432,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"15767:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15759:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":1430,"name":"bytes10","nodeType":"ElementaryTypeName","src":"15759:7:12","typeDescriptions":{}}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15759:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":1434,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"15802:21:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1428,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"15717:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1465_$","typeString":"type(library LSP2Utils)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15727:18:12","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":955,"src":"15717:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15717:116:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15689:144:12"},{"assignments":[1438],"declarations":[{"constant":false,"id":1438,"mutability":"mutable","name":"lastElementMapValue","nameLocation":"15925:19:12","nodeType":"VariableDeclaration","scope":1463,"src":"15912:32:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1437,"name":"bytes","nodeType":"ElementaryTypeName","src":"15912:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1450,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1445,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"16008:17:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1443,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"15984:15:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16000:7:12","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":408,"src":"15984:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15977:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1441,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15977:6:12","typeDescriptions":{}}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15977:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1448,"name":"removedElementIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"16041:19:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1439,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15947:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15951:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"15947:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15947:123:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15912:158:12"},{"expression":{"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1451,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"16159:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1453,"indexExpression":{"hexValue":"34","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16168:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16159:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1454,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"16173:17:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16159:31:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1456,"nodeType":"ExpressionStatement","src":"16159:31:12"},{"expression":{"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1457,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"16200:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1459,"indexExpression":{"hexValue":"34","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16211:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16200:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1460,"name":"lastElementMapValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"16216:19:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16200:35:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1462,"nodeType":"ExpressionStatement","src":"16200:35:12"}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"13412:733:12","text":" @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n @param erc725YContract The ERC725Y contract.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementIndex the index of the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":1464,"implemented":true,"kind":"function","modifiers":[],"name":"removeElementFromArrayAndMap","nameLocation":"14159:28:12","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"erc725YContract","nameLocation":"14206:15:12","nodeType":"VariableDeclaration","scope":1464,"src":"14197:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"},"typeName":{"id":1317,"nodeType":"UserDefinedTypeName","pathNode":{"id":1316,"name":"IERC725Y","nameLocations":["14197:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"14197:8:12"},"referencedDeclaration":437,"src":"14197:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"arrayKey","nameLocation":"14239:8:12","nodeType":"VariableDeclaration","scope":1464,"src":"14231:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14231:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"newArrayLength","nameLocation":"14265:14:12","nodeType":"VariableDeclaration","scope":1464,"src":"14257:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1321,"name":"uint128","nodeType":"ElementaryTypeName","src":"14257:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"14297:22:12","nodeType":"VariableDeclaration","scope":1464,"src":"14289:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14289:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"removedElementIndex","nameLocation":"14337:19:12","nodeType":"VariableDeclaration","scope":1464,"src":"14329:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1325,"name":"uint128","nodeType":"ElementaryTypeName","src":"14329:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"14374:20:12","nodeType":"VariableDeclaration","scope":1464,"src":"14366:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14366:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14187:213:12"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"dataKeys","nameLocation":"14465:8:12","nodeType":"VariableDeclaration","scope":1464,"src":"14448:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14448:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1331,"nodeType":"ArrayTypeName","src":"14448:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"dataValues","nameLocation":"14490:10:12","nodeType":"VariableDeclaration","scope":1464,"src":"14475:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1333,"name":"bytes","nodeType":"ElementaryTypeName","src":"14475:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1334,"nodeType":"ArrayTypeName","src":"14475:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14447:54:12"},"scope":1465,"src":"14150:2092:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1466,"src":"482:15762:12","usedErrors":[]}],"src":"39:16206:12"},"id":12},"@lukso/lsp4-contracts/contracts/LSP4Constants.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","exportedSymbols":{"_LSP4_CREATORS_ARRAY_KEY":[1494],"_LSP4_CREATORS_MAP_KEY_PREFIX":[1497],"_LSP4_METADATA_KEY":[1500],"_LSP4_SUPPORTED_STANDARDS_KEY":[1479],"_LSP4_SUPPORTED_STANDARDS_VALUE":[1482],"_LSP4_TOKEN_NAME_KEY":[1485],"_LSP4_TOKEN_SYMBOL_KEY":[1488],"_LSP4_TOKEN_TYPE_COLLECTION":[1476],"_LSP4_TOKEN_TYPE_KEY":[1491],"_LSP4_TOKEN_TYPE_NFT":[1473],"_LSP4_TOKEN_TYPE_TOKEN":[1470]},"id":1501,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1467,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:13"},{"constant":true,"id":1470,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_TOKEN","nameLocation":"96:22:13","nodeType":"VariableDeclaration","scope":1501,"src":"79:43:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"79:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":1473,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_NFT","nameLocation":"141:20:13","nodeType":"VariableDeclaration","scope":1501,"src":"124:41:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"124:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"164:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":1476,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_COLLECTION","nameLocation":"184:27:13","nodeType":"VariableDeclaration","scope":1501,"src":"167:48:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"167:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"214:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":1479,"mutability":"constant","name":"_LSP4_SUPPORTED_STANDARDS_KEY","nameLocation":"356:29:13","nodeType":"VariableDeclaration","scope":1501,"src":"339:115:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"339:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865616665633464383966613936313938383462363030303061346439363632346133386637616332643864396136303465636630376331326337376534383063","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"388:66:13","typeDescriptions":{"typeIdentifier":"t_rational_106291344305384829327323777171026204092068863755428044681309751323096797562892_by_1","typeString":"int_const 1062...(70 digits omitted)...2892"},"value":"0xeafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c"},"visibility":"internal"},{"constant":true,"id":1482,"mutability":"constant","name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nameLocation":"513:31:13","nodeType":"VariableDeclaration","scope":1501,"src":"498:62:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1480,"name":"bytes","nodeType":"ElementaryTypeName","src":"498:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"a4d96624","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"547:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8031d7c868dca389fb4e96c3f4df5650d21c8966ab67d753610d01e72b8a0278","typeString":"literal_string hex\"a4d96624\""}},"visibility":"internal"},{"constant":true,"id":1485,"mutability":"constant","name":"_LSP4_TOKEN_NAME_KEY","nameLocation":"610:20:13","nodeType":"VariableDeclaration","scope":1501,"src":"593:106:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864656261316532393266386261383832333865313061623363376638386264346265346661633536636164353139346236656363656166363533343638616631","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:66:13","typeDescriptions":{"typeIdentifier":"t_rational_100742294102289264549068743044138917200237013684961480918773254279156963117809_by_1","typeString":"int_const 1007...(70 digits omitted)...7809"},"value":"0xdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1"},"visibility":"internal"},{"constant":true,"id":1488,"mutability":"constant","name":"_LSP4_TOKEN_SYMBOL_KEY","nameLocation":"751:22:13","nodeType":"VariableDeclaration","scope":1501,"src":"734:108:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"734:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307832663061363861623037373638653031393433613539396537333336326130653137613633613732653934646432653338346432633164346462393332373536","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"776:66:13","typeDescriptions":{"typeIdentifier":"t_rational_21277094746618207019470167271284656117398221945515764204453433194201650243414_by_1","typeString":"int_const 2127...(69 digits omitted)...3414"},"value":"0x2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756"},"visibility":"internal"},{"constant":true,"id":1491,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_KEY","nameLocation":"892:20:13","nodeType":"VariableDeclaration","scope":1501,"src":"875:106:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"875:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865303236316661393564623265623362353433396264303333636461363664353662393666393266323433613832323866643837353530656437626466646233","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"915:66:13","typeDescriptions":{"typeIdentifier":"t_rational_101385436791348632936915532486413845551797772917774025249609027894947960716723_by_1","typeString":"int_const 1013...(70 digits omitted)...6723"},"value":"0xe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3"},"visibility":"internal"},{"constant":true,"id":1494,"mutability":"constant","name":"_LSP4_CREATORS_ARRAY_KEY","nameLocation":"1032:24:13","nodeType":"VariableDeclaration","scope":1501,"src":"1015:110:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1015:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307831313462643033623361343664343837353936383064383165626232623431346664613764303330613731303561383531383637616363663163323335326537","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1059:66:13","typeDescriptions":{"typeIdentifier":"t_rational_7823269115788143993216587392684831921119603420524855766908370213719800763111_by_1","typeString":"int_const 7823...(68 digits omitted)...3111"},"value":"0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7"},"visibility":"internal"},{"constant":true,"id":1497,"mutability":"constant","name":"_LSP4_CREATORS_MAP_KEY_PREFIX","nameLocation":"1186:29:13","nodeType":"VariableDeclaration","scope":1501,"src":"1169:71:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1495,"name":"bytes10","nodeType":"ElementaryTypeName","src":"1169:7:13","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783664653835656166356439383262346535646130","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1218:22:13","typeDescriptions":{"typeIdentifier":"t_rational_519024414032760576826784_by_1","typeString":"int_const 519024414032760576826784"},"value":"0x6de85eaf5d982b4e5da0"},"visibility":"internal"},{"constant":true,"id":1500,"mutability":"constant","name":"_LSP4_METADATA_KEY","nameLocation":"1289:18:13","nodeType":"VariableDeclaration","scope":1501,"src":"1272:104:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1272:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839616662393563616363396639353835386563343461613863336236383535313130303265333061653534343135383233663430363132386238356232333865","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1310:66:13","typeDescriptions":{"typeIdentifier":"t_rational_70100691122746653413313834938425876827577001362390431744658469452576166978446_by_1","typeString":"int_const 7010...(69 digits omitted)...8446"},"value":"0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e"},"visibility":"internal"}],"src":"39:1339:13"},"id":13},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","exportedSymbols":{"ERC725Y":[269],"LSP4DigitalAssetMetadata":[1617],"LSP4TokenNameNotEditable":[1622],"LSP4TokenSymbolNotEditable":[1625],"LSP4TokenTypeNotEditable":[1628],"_LSP4_SUPPORTED_STANDARDS_KEY":[1479],"_LSP4_SUPPORTED_STANDARDS_VALUE":[1482],"_LSP4_TOKEN_NAME_KEY":[1485],"_LSP4_TOKEN_SYMBOL_KEY":[1488],"_LSP4_TOKEN_TYPE_KEY":[1491]},"id":1618,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1502,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:14"},{"absolutePath":"@erc725/smart-contracts-v8/contracts/ERC725Y.sol","file":"@erc725/smart-contracts-v8/contracts/ERC725Y.sol","id":1504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1618,"sourceUnit":270,"src":"75:73:14","symbolAliases":[{"foreign":{"id":1503,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"83:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","file":"./LSP4Constants.sol","id":1510,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1618,"sourceUnit":1501,"src":"163:189:14","symbolAliases":[{"foreign":{"id":1505,"name":"_LSP4_SUPPORTED_STANDARDS_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"176:29:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1506,"name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"211:31:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1507,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"248:20:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1508,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"274:22:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1509,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"302:20:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Errors.sol","file":"./LSP4Errors.sol","id":1514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1618,"sourceUnit":1629,"src":"364:126:14","symbolAliases":[{"foreign":{"id":1511,"name":"LSP4TokenNameNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"377:24:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1512,"name":"LSP4TokenSymbolNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"407:26:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1513,"name":"LSP4TokenTypeNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"439:24:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1516,"name":"ERC725Y","nameLocations":["793:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"793:7:14"},"id":1517,"nodeType":"InheritanceSpecifier","src":"793:7:14"}],"canonicalName":"LSP4DigitalAssetMetadata","contractDependencies":[],"contractKind":"contract","documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"492:254:14","text":" @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n @author Matthew Stevens\n @dev Standard Implementation of the LSP4 standard."},"fullyImplemented":true,"id":1617,"linearizedBaseContracts":[1617,269,386,3779,3985,3725,3755],"name":"LSP4DigitalAssetMetadata","nameLocation":"765:24:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":1569,"nodeType":"Block","src":"1351:396:14","statements":[{"expression":{"arguments":[{"id":1535,"name":"_LSP4_SUPPORTED_STANDARDS_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"1451:29:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1536,"name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1494:31:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1532,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1421:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1429:8:14","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1421:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1421:114:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1538,"nodeType":"ExpressionStatement","src":"1421:114:14"},{"expression":{"arguments":[{"id":1542,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1563:20:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1545,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1591:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1585:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1543,"name":"bytes","nodeType":"ElementaryTypeName","src":"1585:5:14","typeDescriptions":{}}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1585:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1539,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1546:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1554:8:14","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1546:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1546:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1548,"nodeType":"ExpressionStatement","src":"1546:52:14"},{"expression":{"arguments":[{"id":1552,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"1625:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1555,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1655:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1649:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1553,"name":"bytes","nodeType":"ElementaryTypeName","src":"1649:5:14","typeDescriptions":{}}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1549,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1608:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1616:8:14","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1608:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1608:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1558,"nodeType":"ExpressionStatement","src":"1608:56:14"},{"expression":{"arguments":[{"id":1562,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"1691:20:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1565,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1724:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1563,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1713:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1717:6:14","memberName":"encode","nodeType":"MemberAccess","src":"1713:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1559,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1674:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:8:14","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1674:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1674:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"1674:66:14"}]},"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"807:375:14","text":" @notice Deploying a digital asset `name_` with the `symbol_` symbol.\n @param name_ The name of the token.\n @param symbol_ The symbol of the token.\n @param initialOwner_ The owner of the token contract.\n @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection)."},"id":1570,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1529,"name":"initialOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"1336:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1530,"kind":"baseConstructorSpecifier","modifierName":{"id":1528,"name":"ERC725Y","nameLocations":["1328:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"1328:7:14"},"nodeType":"ModifierInvocation","src":"1328:22:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"name_","nameLocation":"1222:5:14","nodeType":"VariableDeclaration","scope":1570,"src":"1208:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1519,"name":"string","nodeType":"ElementaryTypeName","src":"1208:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"symbol_","nameLocation":"1251:7:14","nodeType":"VariableDeclaration","scope":1570,"src":"1237:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1521,"name":"string","nodeType":"ElementaryTypeName","src":"1237:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1524,"mutability":"mutable","name":"initialOwner_","nameLocation":"1276:13:14","nodeType":"VariableDeclaration","scope":1570,"src":"1268:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"1268:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1526,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"1307:14:14","nodeType":"VariableDeclaration","scope":1570,"src":"1299:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1198:129:14"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[],"src":"1351:0:14"},"scope":1617,"src":"1187:560:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[196],"body":{"id":1615,"nodeType":"Block","src":"2042:426:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1579,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2056:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1580,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"2067:20:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2056:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1586,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2157:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1587,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2168:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2157:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1593,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2262:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1594,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"2273:20:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2262:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1611,"nodeType":"Block","src":"2359:103:14","statements":[{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1600,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2373:6:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":1602,"indexExpression":{"id":1601,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2380:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2373:15:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1603,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"2391:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2373:27:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1605,"nodeType":"ExpressionStatement","src":"2373:27:14"},{"eventCall":{"arguments":[{"id":1607,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2432:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1608,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"2441:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1606,"name":"DataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"2420:11:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1610,"nodeType":"EmitStatement","src":"2415:36:14"}]},"id":1612,"nodeType":"IfStatement","src":"2258:204:14","trueBody":{"id":1599,"nodeType":"Block","src":"2295:58:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1596,"name":"LSP4TokenTypeNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"2316:24:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"RevertStatement","src":"2309:33:14"}]}},"id":1613,"nodeType":"IfStatement","src":"2153:309:14","trueBody":{"id":1592,"nodeType":"Block","src":"2192:60:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1589,"name":"LSP4TokenSymbolNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"2213:26:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2213:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1591,"nodeType":"RevertStatement","src":"2206:35:14"}]}},"id":1614,"nodeType":"IfStatement","src":"2052:410:14","trueBody":{"id":1585,"nodeType":"Block","src":"2089:58:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1582,"name":"LSP4TokenNameNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2110:24:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1584,"nodeType":"RevertStatement","src":"2103:33:14"}]}}]},"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"1753:177:14","text":" @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n via this function once the digital asset contract has been deployed."},"id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"1944:8:14","nodeType":"FunctionDefinition","overrides":{"id":1577,"nodeType":"OverrideSpecifier","overrides":[],"src":"2033:8:14"},"parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"dataKey","nameLocation":"1970:7:14","nodeType":"VariableDeclaration","scope":1616,"src":"1962:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1962:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"dataValue","nameLocation":"2000:9:14","nodeType":"VariableDeclaration","scope":1616,"src":"1987:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1574,"name":"bytes","nodeType":"ElementaryTypeName","src":"1987:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1952:63:14"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[],"src":"2042:0:14"},"scope":1617,"src":"1935:533:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1618,"src":"747:1723:14","usedErrors":[330,333,336,339,1622,1625,1628]}],"src":"39:2432:14"},"id":14},"@lukso/lsp4-contracts/contracts/LSP4Errors.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Errors.sol","exportedSymbols":{"LSP4TokenNameNotEditable":[1622],"LSP4TokenSymbolNotEditable":[1625],"LSP4TokenTypeNotEditable":[1628]},"id":1629,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1619,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:15"},{"documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"64:379:15","text":" @dev Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"85c169bd","id":1622,"name":"LSP4TokenNameNotEditable","nameLocation":"450:24:15","nodeType":"ErrorDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[],"src":"474:2:15"},"src":"444:33:15"},{"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"479:383:15","text":" @dev Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"76755b38","id":1625,"name":"LSP4TokenSymbolNotEditable","nameLocation":"869:26:15","nodeType":"ErrorDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[],"src":"895:2:15"},"src":"863:35:15"},{"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"900:381:15","text":" @dev Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"4ef6d7fb","id":1628,"name":"LSP4TokenTypeNotEditable","nameLocation":"1288:24:15","nodeType":"ErrorDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[],"src":"1312:2:15"},"src":"1282:33:15"}],"src":"39:1277:15"},"id":15},"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol","exportedSymbols":{"ILSP8IdentifiableDigitalAsset":[1841]},"id":1842,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1630,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP8IdentifiableDigitalAsset","contractDependencies":[],"contractKind":"interface","documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"64:108:16","text":" @title Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset."},"fullyImplemented":false,"id":1841,"linearizedBaseContracts":[1841],"name":"ILSP8IdentifiableDigitalAsset","nameLocation":"183:29:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"238:616:16","text":" @dev Emitted when `tokenId` token is transferred from the `from` to the `to` address.\n @param operator The address of operator that sent the `tokenId`\n @param from The previous owner of the `tokenId`\n @param to The new owner of `tokenId`\n @param tokenId The tokenId that was transferred\n @param force If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\n @param data Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses."},"eventSelector":"b333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf","id":1646,"name":"Transfer","nameLocation":"865:8:16","nodeType":"EventDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"indexed":false,"mutability":"mutable","name":"operator","nameLocation":"891:8:16","nodeType":"VariableDeclaration","scope":1646,"src":"883:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"883:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1636,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"925:4:16","nodeType":"VariableDeclaration","scope":1646,"src":"909:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1638,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"955:2:16","nodeType":"VariableDeclaration","scope":1646,"src":"939:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"983:7:16","nodeType":"VariableDeclaration","scope":1646,"src":"967:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"967:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1642,"indexed":false,"mutability":"mutable","name":"force","nameLocation":"1005:5:16","nodeType":"VariableDeclaration","scope":1646,"src":"1000:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1641,"name":"bool","nodeType":"ElementaryTypeName","src":"1000:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1644,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1026:4:16","nodeType":"VariableDeclaration","scope":1646,"src":"1020:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1643,"name":"bytes","nodeType":"ElementaryTypeName","src":"1020:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"873:163:16"},"src":"859:178:16"},{"anonymous":false,"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"1043:396:16","text":" @dev Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\n @param operator The address authorized as an operator.\n @param tokenOwner The owner of the `tokenId`.\n @param tokenId The tokenId `operator` address has access on behalf of `tokenOwner`.\n @param operatorNotificationData The data to notify the operator about via LSP1."},"eventSelector":"1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc236671215","id":1657,"name":"OperatorAuthorizationChanged","nameLocation":"1450:28:16","nodeType":"EventDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1504:8:16","nodeType":"VariableDeclaration","scope":1657,"src":"1488:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1648,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1651,"indexed":true,"mutability":"mutable","name":"tokenOwner","nameLocation":"1538:10:16","nodeType":"VariableDeclaration","scope":1657,"src":"1522:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"1522:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1653,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1574:7:16","nodeType":"VariableDeclaration","scope":1657,"src":"1558:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1558:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1655,"indexed":false,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"1597:24:16","nodeType":"VariableDeclaration","scope":1657,"src":"1591:30:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1654,"name":"bytes","nodeType":"ElementaryTypeName","src":"1591:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1478:149:16"},"src":"1444:184:16"},{"anonymous":false,"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"1634:501:16","text":" @dev Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\n @param operator The address revoked from the operator array ({getOperatorsOf}).\n @param tokenOwner The owner of the `tokenId`.\n @param tokenId The tokenId `operator` is revoked from operating on.\n @param notified Bool indicating whether the operator has been notified or not\n @param operatorNotificationData The data to notify the operator about via LSP1."},"eventSelector":"c78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c","id":1670,"name":"OperatorRevoked","nameLocation":"2146:15:16","nodeType":"EventDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"2187:8:16","nodeType":"VariableDeclaration","scope":1670,"src":"2171:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"2171:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1662,"indexed":true,"mutability":"mutable","name":"tokenOwner","nameLocation":"2221:10:16","nodeType":"VariableDeclaration","scope":1670,"src":"2205:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1661,"name":"address","nodeType":"ElementaryTypeName","src":"2205:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1664,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2257:7:16","nodeType":"VariableDeclaration","scope":1670,"src":"2241:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2241:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1666,"indexed":false,"mutability":"mutable","name":"notified","nameLocation":"2279:8:16","nodeType":"VariableDeclaration","scope":1670,"src":"2274:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1665,"name":"bool","nodeType":"ElementaryTypeName","src":"2274:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1668,"indexed":false,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"2303:24:16","nodeType":"VariableDeclaration","scope":1670,"src":"2297:30:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1667,"name":"bytes","nodeType":"ElementaryTypeName","src":"2297:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2161:172:16"},"src":"2140:194:16"},{"anonymous":false,"documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"2340:253:16","text":" @dev Emitted when setting data for `tokenId`.\n @param tokenId The tokenId which data is set for.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"eventSelector":"a6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb","id":1679,"name":"TokenIdDataChanged","nameLocation":"2604:18:16","nodeType":"EventDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2648:7:16","nodeType":"VariableDeclaration","scope":1679,"src":"2632:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2632:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1675,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"2681:7:16","nodeType":"VariableDeclaration","scope":1679,"src":"2665:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2665:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1677,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"2704:9:16","nodeType":"VariableDeclaration","scope":1679,"src":"2698:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1676,"name":"bytes","nodeType":"ElementaryTypeName","src":"2698:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2622:97:16"},"src":"2598:122:16"},{"documentation":{"id":1680,"nodeType":"StructuredDocumentation","src":"2752:147:16","text":" @dev Returns the number of existing tokens that have been minted in this contract.\n @return The number of existing tokens."},"functionSelector":"18160ddd","id":1685,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2913:11:16","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"2924:2:16"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1685,"src":"2950:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"2950:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2949:9:16"},"scope":1841,"src":"2904:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"2997:196:16","text":" @dev Get the number of token IDs owned by `tokenOwner`.\n @param tokenOwner The address to query     *\n @return The total number of token IDs that `tokenOwner` owns."},"functionSelector":"70a08231","id":1693,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3207:9:16","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"tokenOwner","nameLocation":"3225:10:16","nodeType":"VariableDeclaration","scope":1693,"src":"3217:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"3217:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3216:20:16"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1693,"src":"3260:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3259:9:16"},"scope":1841,"src":"3198:71:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"3275:360:16","text":" @dev Returns the address that owns a given `tokenId`.\n @param tokenId The token ID to query the owner for.\n @return The owner address of the given `tokenId`.\n @custom:requirements `tokenId` must exist.\n @custom:info if the `tokenId` is not owned by any address, the returned address will be `address(0)`"},"functionSelector":"217b2270","id":1701,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOwnerOf","nameLocation":"3649:12:16","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"tokenId","nameLocation":"3670:7:16","nodeType":"VariableDeclaration","scope":1701,"src":"3662:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3662:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3661:17:16"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1701,"src":"3702:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"3702:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3701:9:16"},"scope":1841,"src":"3640:71:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1702,"nodeType":"StructuredDocumentation","src":"3717:244:16","text":" @dev Returns the list of token IDs that the `tokenOwner` address owns.\n @param tokenOwner The address that we want to get the list of token IDs for.\n @return An array of `bytes32[] tokenIds` owned by `tokenOwner`."},"functionSelector":"a3b261f2","id":1710,"implemented":false,"kind":"function","modifiers":[],"name":"tokenIdsOf","nameLocation":"3975:10:16","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"tokenOwner","nameLocation":"4003:10:16","nodeType":"VariableDeclaration","scope":1710,"src":"3995:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3985:34:16"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1710,"src":"4043:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4043:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1707,"nodeType":"ArrayTypeName","src":"4043:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4042:18:16"},"scope":1841,"src":"3966:95:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"4110:286:16","text":" @notice Retrieves data for a specific `tokenId` and `dataKey`.\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to retrieve.\n @return dataValues The data value associated with the given `tokenId` and `dataKey`."},"functionSelector":"16e023b3","id":1720,"implemented":false,"kind":"function","modifiers":[],"name":"getDataForTokenId","nameLocation":"4410:17:16","nodeType":"FunctionDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"tokenId","nameLocation":"4445:7:16","nodeType":"VariableDeclaration","scope":1720,"src":"4437:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4437:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"dataKey","nameLocation":"4470:7:16","nodeType":"VariableDeclaration","scope":1720,"src":"4462:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4462:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4427:56:16"},"returnParameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"dataValues","nameLocation":"4515:10:16","nodeType":"VariableDeclaration","scope":1720,"src":"4502:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1717,"name":"bytes","nodeType":"ElementaryTypeName","src":"4502:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4501:25:16"},"scope":1841,"src":"4401:126:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"4533:309:16","text":" @notice Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\n @param tokenIds An array of token IDs.\n @param dataKeys An array of data keys corresponding to the token IDs.\n @return dataValues An array of data values for each pair of `tokenId` and `dataKey`."},"functionSelector":"1d26fce6","id":1733,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatchForTokenIds","nameLocation":"4856:23:16","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"tokenIds","nameLocation":"4906:8:16","nodeType":"VariableDeclaration","scope":1733,"src":"4889:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4889:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1723,"nodeType":"ArrayTypeName","src":"4889:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1727,"mutability":"mutable","name":"dataKeys","nameLocation":"4941:8:16","nodeType":"VariableDeclaration","scope":1733,"src":"4924:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4924:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1726,"nodeType":"ArrayTypeName","src":"4924:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4879:76:16"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"dataValues","nameLocation":"4989:10:16","nodeType":"VariableDeclaration","scope":1733,"src":"4974:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1729,"name":"bytes","nodeType":"ElementaryTypeName","src":"4974:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1730,"nodeType":"ArrayTypeName","src":"4974:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4973:27:16"},"scope":1841,"src":"4847:154:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"5007:299:16","text":" @notice Sets data for a specific `tokenId` and `dataKey`.\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to set.\n @param dataValue The value to set for the given data key.\n @custom:events {TokenIdDataChanged} event."},"functionSelector":"d6c1407c","id":1743,"implemented":false,"kind":"function","modifiers":[],"name":"setDataForTokenId","nameLocation":"5320:17:16","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"tokenId","nameLocation":"5355:7:16","nodeType":"VariableDeclaration","scope":1743,"src":"5347:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5347:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"dataKey","nameLocation":"5380:7:16","nodeType":"VariableDeclaration","scope":1743,"src":"5372:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5372:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"dataValue","nameLocation":"5410:9:16","nodeType":"VariableDeclaration","scope":1743,"src":"5397:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1739,"name":"bytes","nodeType":"ElementaryTypeName","src":"5397:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5337:88:16"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"5434:0:16"},"scope":1841,"src":"5311:124:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"5441:352:16","text":" @notice Sets data in batch for multiple `tokenId` and `dataKey` pairs.\n @param tokenIds An array of token IDs.\n @param dataKeys An array of data keys corresponding to the token IDs.\n @param dataValues An array of values to set for the given data keys.\n @custom:events {TokenIdDataChanged} event for each pair."},"functionSelector":"be9f0e6f","id":1756,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatchForTokenIds","nameLocation":"5807:23:16","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"tokenIds","nameLocation":"5857:8:16","nodeType":"VariableDeclaration","scope":1756,"src":"5840:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5840:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1746,"nodeType":"ArrayTypeName","src":"5840:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"dataKeys","nameLocation":"5892:8:16","nodeType":"VariableDeclaration","scope":1756,"src":"5875:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5875:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1749,"nodeType":"ArrayTypeName","src":"5875:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"dataValues","nameLocation":"5925:10:16","nodeType":"VariableDeclaration","scope":1756,"src":"5910:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1751,"name":"bytes","nodeType":"ElementaryTypeName","src":"5910:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1752,"nodeType":"ArrayTypeName","src":"5910:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5830:111:16"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[],"src":"5950:0:16"},"scope":1841,"src":"5798:153:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"5992:782:16","text":" @dev Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @param operator The address to authorize as an operator.\n @param tokenId The token ID operator has access to.\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - `tokenId` must exist.\n - caller MUST be the {tokenOwnerOf} `tokenId`.\n - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address).\n - `operator` cannot be the zero address.\n @custom:events {OperatorAuthorizationChanged} event."},"functionSelector":"86a10ddd","id":1766,"implemented":false,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"6788:17:16","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"operator","nameLocation":"6823:8:16","nodeType":"VariableDeclaration","scope":1766,"src":"6815:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"6815:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"tokenId","nameLocation":"6849:7:16","nodeType":"VariableDeclaration","scope":1766,"src":"6841:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6841:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"6879:24:16","nodeType":"VariableDeclaration","scope":1766,"src":"6866:37:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1762,"name":"bytes","nodeType":"ElementaryTypeName","src":"6866:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6805:104:16"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[],"src":"6918:0:16"},"scope":1841,"src":"6779:140:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"6925:893:16","text":" @dev Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner.\n See also {isOperatorFor}.\n @param operator The address to revoke as an operator.\n @param tokenId The tokenId `operator` is revoked from operating on.\n @param notify Boolean indicating whether to notify the operator or not\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - `tokenId` must exist.\n - caller must be the {tokenOwnerOf} `tokenId`.\n - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address).\n - `operator` cannot be the zero address.\n @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token owner).."},"functionSelector":"db8c9663","id":1778,"implemented":false,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"7832:14:16","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"operator","nameLocation":"7864:8:16","nodeType":"VariableDeclaration","scope":1778,"src":"7856:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"tokenId","nameLocation":"7890:7:16","nodeType":"VariableDeclaration","scope":1778,"src":"7882:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7882:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"notify","nameLocation":"7912:6:16","nodeType":"VariableDeclaration","scope":1778,"src":"7907:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1772,"name":"bool","nodeType":"ElementaryTypeName","src":"7907:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"7941:24:16","nodeType":"VariableDeclaration","scope":1778,"src":"7928:37:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1774,"name":"bytes","nodeType":"ElementaryTypeName","src":"7928:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7846:125:16"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[],"src":"7980:0:16"},"scope":1841,"src":"7823:158:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"7987:535:16","text":" @dev Returns whether `operator` address is an operator for a given `tokenId`.\n @param operator The address to query operator status for.\n @param tokenId The token ID to check if `operator` is allowed to operate on.\n @return `true` if `operator` is an operator for `tokenId`, `false` otherwise.\n @custom:requirements\n - `tokenId` must exist.\n - caller must be the current {tokenOwnerOf} `tokenId`.\n @custom:info The tokenOwner is its own operator."},"functionSelector":"2a3654a4","id":1788,"implemented":false,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"8536:13:16","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"operator","nameLocation":"8567:8:16","nodeType":"VariableDeclaration","scope":1788,"src":"8559:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"8559:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"tokenId","nameLocation":"8593:7:16","nodeType":"VariableDeclaration","scope":1788,"src":"8585:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8585:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8549:57:16"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1788,"src":"8630:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1785,"name":"bool","nodeType":"ElementaryTypeName","src":"8630:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8629:6:16"},"scope":1841,"src":"8527:109:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"8642:351:16","text":" @dev Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\n @param tokenId The token ID to get the operators for.\n @return An array of operators allowed to transfer or burn a specific `tokenId`.\n Requirements\n - `tokenId` must exist."},"functionSelector":"49a6078d","id":1797,"implemented":false,"kind":"function","modifiers":[],"name":"getOperatorsOf","nameLocation":"9007:14:16","nodeType":"FunctionDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"tokenId","nameLocation":"9039:7:16","nodeType":"VariableDeclaration","scope":1797,"src":"9031:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9031:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9021:31:16"},"returnParameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1797,"src":"9076:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"9076:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1794,"nodeType":"ArrayTypeName","src":"9076:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9075:18:16"},"scope":1841,"src":"8998:96:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"9135:2076:16","text":" @dev Transfer a given `tokenId` token from the `from` address to the `to` address.\n If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred.\n The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs)\n or contracts that do not implement the LSP1 standard.\n @param from The address that owns the given `tokenId`.\n @param to The address that will receive the `tokenId`.\n @param tokenId The token ID to transfer.\n @param force When set to `true`, the `to` address CAN be any address.\n When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n @custom:requirements\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself).\n - `from` must own the given `tokenId`.\n - If the caller is not `from`, it must be an operator for the `tokenId`.\n @custom:events\n - {Transfer} event when the `tokenId` is successfully transferred.\n @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n This even if the `force` was set to `true`."},"functionSelector":"511b6952","id":1811,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"11225:8:16","nodeType":"FunctionDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"from","nameLocation":"11251:4:16","nodeType":"VariableDeclaration","scope":1811,"src":"11243:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"11243:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"to","nameLocation":"11273:2:16","nodeType":"VariableDeclaration","scope":1811,"src":"11265:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1801,"name":"address","nodeType":"ElementaryTypeName","src":"11265:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"tokenId","nameLocation":"11293:7:16","nodeType":"VariableDeclaration","scope":1811,"src":"11285:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11285:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"force","nameLocation":"11315:5:16","nodeType":"VariableDeclaration","scope":1811,"src":"11310:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1805,"name":"bool","nodeType":"ElementaryTypeName","src":"11310:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"data","nameLocation":"11343:4:16","nodeType":"VariableDeclaration","scope":1811,"src":"11330:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1807,"name":"bytes","nodeType":"ElementaryTypeName","src":"11330:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11233:120:16"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[],"src":"11362:0:16"},"scope":1841,"src":"11216:147:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1812,"nodeType":"StructuredDocumentation","src":"11369:1189:16","text":" @dev Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`.\n If any transfer fails, the whole call will revert.\n @param from An array of sending addresses.\n @param to An array of recipient addresses.\n @param tokenId An array of token IDs to transfer.\n @param force When set to `true`, `to` may be any address.\n When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\n @custom:requirements\n - The arrays of `from`, `to` and `tokenId` must have the same length.\n - no values in the `from` array can be the zero address.\n - no values in the `to` array can be the zero address.\n - `from` and `to` cannot be the same address at the same index on each arrays.\n - each `tokenId` must be owned by `from`.\n - If the caller is not `from`, it must be an operator of each `tokenId`.\n @custom:events\n - {Transfer} events on each successful token transfer."},"functionSelector":"7e87632c","id":1830,"implemented":false,"kind":"function","modifiers":[],"name":"transferBatch","nameLocation":"12572:13:16","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"from","nameLocation":"12612:4:16","nodeType":"VariableDeclaration","scope":1830,"src":"12595:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"12595:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1814,"nodeType":"ArrayTypeName","src":"12595:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"to","nameLocation":"12643:2:16","nodeType":"VariableDeclaration","scope":1830,"src":"12626:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"12626:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1817,"nodeType":"ArrayTypeName","src":"12626:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"tokenId","nameLocation":"12672:7:16","nodeType":"VariableDeclaration","scope":1830,"src":"12655:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12655:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1820,"nodeType":"ArrayTypeName","src":"12655:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"force","nameLocation":"12703:5:16","nodeType":"VariableDeclaration","scope":1830,"src":"12689:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1822,"name":"bool","nodeType":"ElementaryTypeName","src":"12689:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1823,"nodeType":"ArrayTypeName","src":"12689:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"data","nameLocation":"12733:4:16","nodeType":"VariableDeclaration","scope":1830,"src":"12718:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1825,"name":"bytes","nodeType":"ElementaryTypeName","src":"12718:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1826,"nodeType":"ArrayTypeName","src":"12718:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12585:158:16"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[],"src":"12752:0:16"},"scope":1841,"src":"12563:190:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"12759:460:16","text":" @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n @param data An array of ABI encoded function calls to be called on the contract.\n @return results An array of abi-encoded data returned by the functions executed."},"functionSelector":"6963d438","id":1840,"implemented":false,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"13233:10:16","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"data","nameLocation":"13270:4:16","nodeType":"VariableDeclaration","scope":1840,"src":"13253:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1832,"name":"bytes","nodeType":"ElementaryTypeName","src":"13253:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1833,"nodeType":"ArrayTypeName","src":"13253:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13243:37:16"},"returnParameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"results","nameLocation":"13314:7:16","nodeType":"VariableDeclaration","scope":1840,"src":"13299:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1836,"name":"bytes","nodeType":"ElementaryTypeName","src":"13299:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1837,"nodeType":"ArrayTypeName","src":"13299:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13298:24:16"},"scope":1841,"src":"13224:99:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1842,"src":"173:13152:16","usedErrors":[]}],"src":"39:13287:16"},"id":16},"@lukso/lsp8-contracts/contracts/LSP8Constants.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Constants.sol","exportedSymbols":{"_INTERFACEID_LSP8":[1846],"_INTERFACEID_LSP8_V0_12_0":[1849],"_INTERFACEID_LSP8_V0_14_0":[1852],"_LSP8_REFERENCE_CONTRACT":[1861],"_LSP8_TOKENID_FORMAT_ADDRESS":[1879],"_LSP8_TOKENID_FORMAT_HASH":[1885],"_LSP8_TOKENID_FORMAT_KEY":[1855],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS":[1894],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH":[1900],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER":[1888],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING":[1891],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID":[1897],"_LSP8_TOKENID_FORMAT_NUMBER":[1873],"_LSP8_TOKENID_FORMAT_STRING":[1876],"_LSP8_TOKENID_FORMAT_UNIQUE_ID":[1882],"_LSP8_TOKEN_METADATA_BASE_URI":[1858],"_TYPEID_LSP8_TOKENOPERATOR":[1870],"_TYPEID_LSP8_TOKENSRECIPIENT":[1867],"_TYPEID_LSP8_TOKENSSENDER":[1864]},"id":1901,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1843,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:17"},{"constant":true,"id":1846,"mutability":"constant","name":"_INTERFACEID_LSP8","nameLocation":"108:17:17","nodeType":"VariableDeclaration","scope":1901,"src":"92:46:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1844,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783361323731373036","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:17","typeDescriptions":{"typeIdentifier":"t_rational_975640326_by_1","typeString":"int_const 975640326"},"value":"0x3a271706"},"visibility":"internal"},{"constant":true,"id":1849,"mutability":"constant","name":"_INTERFACEID_LSP8_V0_12_0","nameLocation":"157:25:17","nodeType":"VariableDeclaration","scope":1901,"src":"141:54:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1847,"name":"bytes4","nodeType":"ElementaryTypeName","src":"141:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783330646335323738","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"185:10:17","typeDescriptions":{"typeIdentifier":"t_rational_819745400_by_1","typeString":"int_const 819745400"},"value":"0x30dc5278"},"visibility":"internal"},{"constant":true,"id":1852,"mutability":"constant","name":"_INTERFACEID_LSP8_V0_14_0","nameLocation":"214:25:17","nodeType":"VariableDeclaration","scope":1901,"src":"198:54:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1850,"name":"bytes4","nodeType":"ElementaryTypeName","src":"198:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786563616439663735","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242:10:17","typeDescriptions":{"typeIdentifier":"t_rational_3970801525_by_1","typeString":"int_const 3970801525"},"value":"0xecad9f75"},"visibility":"internal"},{"constant":true,"id":1855,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_KEY","nameLocation":"332:24:17","nodeType":"VariableDeclaration","scope":1901,"src":"315:110:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"315:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866363735653933363161663163313636346331383638636661336562393736373264366231613531336161356238316465633334633965653333306538313864","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"359:66:17","typeDescriptions":{"typeIdentifier":"t_rational_111477291423636096748029871472748476558390830835668367522651640064380322611597_by_1","typeString":"int_const 1114...(70 digits omitted)...1597"},"value":"0xf675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d"},"visibility":"internal"},{"constant":true,"id":1858,"mutability":"constant","name":"_LSP8_TOKEN_METADATA_BASE_URI","nameLocation":"486:29:17","nodeType":"VariableDeclaration","scope":1901,"src":"469:115:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"469:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307831613736323836303063336261633731303166353336393766343864663338316464633336623930313565376437633963353633336431323532616132383433","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:66:17","typeDescriptions":{"typeIdentifier":"t_rational_11968900676105822912557464315324495329565190357858734522371517867650361993283_by_1","typeString":"int_const 1196...(69 digits omitted)...3283"},"value":"0x1a7628600c3bac7101f53697f48df381ddc36b9015e7d7c9c5633d1252aa2843"},"visibility":"internal"},{"constant":true,"id":1861,"mutability":"constant","name":"_LSP8_REFERENCE_CONTRACT","nameLocation":"642:24:17","nodeType":"VariableDeclaration","scope":1901,"src":"625:110:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"625:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307837303865376238383137393566326536623663323735323130386331373765633839323438343538646533626636396430643433343830623365353033346536","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"669:66:17","typeDescriptions":{"typeIdentifier":"t_rational_50910783908361636124804393116408259141598108534342564848859926123218144867558_by_1","typeString":"int_const 5091...(69 digits omitted)...7558"},"value":"0x708e7b881795f2e6b6c2752108c177ec89248458de3bf69d0d43480b3e5034e6"},"visibility":"internal"},{"constant":true,"id":1864,"mutability":"constant","name":"_TYPEID_LSP8_TOKENSSENDER","nameLocation":"821:25:17","nodeType":"VariableDeclaration","scope":1901,"src":"804:111:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"804:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862323365616537653664313536346232393562346333653362653430326439613266303737366335376264663336353930333439366636666134383161623030","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"849:66:17","typeDescriptions":{"typeIdentifier":"t_rational_80622435878143139083563480449382184796258105498148027923970953027117195045632_by_1","typeString":"int_const 8062...(69 digits omitted)...5632"},"value":"0xb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00"},"visibility":"internal"},{"constant":true,"id":1867,"mutability":"constant","name":"_TYPEID_LSP8_TOKENSRECIPIENT","nameLocation":"984:28:17","nodeType":"VariableDeclaration","scope":1901,"src":"967:114:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"967:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830623038346135356562663730666433633036666437353532363964616332323132633464336630663464303930373937383062666135306331623239383464","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1015:66:17","typeDescriptions":{"typeIdentifier":"t_rational_4990089156609310438051076814138656340767597687526420738174868187457831213133_by_1","typeString":"int_const 4990...(68 digits omitted)...3133"},"value":"0x0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d"},"visibility":"internal"},{"constant":true,"id":1870,"mutability":"constant","name":"_TYPEID_LSP8_TOKENOPERATOR","nameLocation":"1149:26:17","nodeType":"VariableDeclaration","scope":1901,"src":"1132:112:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1132:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838613163313561383739396637316235343765303865326263623265383532353765383162306130376565653263653637313235343965656631663030393730","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1178:66:17","typeDescriptions":{"typeIdentifier":"t_rational_62468794301057257859859864036220190757926884000171377020854266712521628977520_by_1","typeString":"int_const 6246...(69 digits omitted)...7520"},"value":"0x8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f00970"},"visibility":"internal"},{"constant":true,"id":1873,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_NUMBER","nameLocation":"1289:27:17","nodeType":"VariableDeclaration","scope":1901,"src":"1272:48:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1319:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":1876,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_STRING","nameLocation":"1339:27:17","nodeType":"VariableDeclaration","scope":1901,"src":"1322:48:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1369:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":1879,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_ADDRESS","nameLocation":"1389:28:17","nodeType":"VariableDeclaration","scope":1901,"src":"1372:49:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":1882,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_UNIQUE_ID","nameLocation":"1440:30:17","nodeType":"VariableDeclaration","scope":1901,"src":"1423:51:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1473:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":1885,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_HASH","nameLocation":"1493:25:17","nodeType":"VariableDeclaration","scope":1901,"src":"1476:46:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1521:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"},{"constant":true,"id":1888,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER","nameLocation":"1542:41:17","nodeType":"VariableDeclaration","scope":1901,"src":"1525:64:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1586:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":true,"id":1891,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING","nameLocation":"1608:41:17","nodeType":"VariableDeclaration","scope":1901,"src":"1591:64:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1591:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313031","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1652:3:17","typeDescriptions":{"typeIdentifier":"t_rational_101_by_1","typeString":"int_const 101"},"value":"101"},"visibility":"internal"},{"constant":true,"id":1894,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS","nameLocation":"1674:42:17","nodeType":"VariableDeclaration","scope":1901,"src":"1657:65:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1657:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313032","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1719:3:17","typeDescriptions":{"typeIdentifier":"t_rational_102_by_1","typeString":"int_const 102"},"value":"102"},"visibility":"internal"},{"constant":true,"id":1897,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID","nameLocation":"1741:44:17","nodeType":"VariableDeclaration","scope":1901,"src":"1724:67:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313033","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:17","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"visibility":"internal"},{"constant":true,"id":1900,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH","nameLocation":"1810:39:17","nodeType":"VariableDeclaration","scope":1901,"src":"1793:62:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1793:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313034","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1852:3:17","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},"visibility":"internal"}],"src":"39:1818:17"},"id":17},"@lukso/lsp8-contracts/contracts/LSP8Errors.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Errors.sol","exportedSymbols":{"LSP8BatchCallFailed":[1981],"LSP8CannotSendToAddressZero":[1936],"LSP8CannotUseAddressZeroAsOperator":[1933],"LSP8InvalidTransferBatch":[1951],"LSP8NonExistentTokenId":[1907],"LSP8NonExistingOperator":[1943],"LSP8NotTokenOperator":[1923],"LSP8NotTokenOwner":[1916],"LSP8NotifyTokenReceiverContractMissingLSP1Interface":[1956],"LSP8NotifyTokenReceiverIsEOA":[1961],"LSP8OperatorAlreadyAuthorized":[1930],"LSP8RevokeOperatorNotAuthorized":[1999],"LSP8TokenContractCannotHoldValue":[1967],"LSP8TokenIdAlreadyMinted":[1948],"LSP8TokenIdFormatNotEditable":[1970],"LSP8TokenIdsDataEmptyArray":[1976],"LSP8TokenIdsDataLengthMismatch":[1973],"LSP8TokenOwnerCannotBeOperator":[1964],"LSP8TokenOwnerChanged":[1990]},"id":2000,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1902,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:18"},{"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"79:59:18","text":" @dev Reverts when `tokenId` has not been minted."},"errorSelector":"ae8f9a36","id":1907,"name":"LSP8NonExistentTokenId","nameLocation":"145:22:18","nodeType":"ErrorDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"tokenId","nameLocation":"176:7:18","nodeType":"VariableDeclaration","scope":1907,"src":"168:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"168:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"167:17:18"},"src":"139:46:18"},{"documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"187:79:18","text":" @dev Reverts when `caller` is not the `tokenOwner` of the `tokenId`."},"errorSelector":"5b271ea2","id":1916,"name":"LSP8NotTokenOwner","nameLocation":"273:17:18","nodeType":"ErrorDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"tokenOwner","nameLocation":"299:10:18","nodeType":"VariableDeclaration","scope":1916,"src":"291:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1909,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"tokenId","nameLocation":"319:7:18","nodeType":"VariableDeclaration","scope":1916,"src":"311:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"311:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"caller","nameLocation":"336:6:18","nodeType":"VariableDeclaration","scope":1916,"src":"328:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:53:18"},"src":"267:77:18"},{"documentation":{"id":1917,"nodeType":"StructuredDocumentation","src":"346:79:18","text":" @dev Reverts when `caller` is not an allowed operator for `tokenId`."},"errorSelector":"1294d2a9","id":1923,"name":"LSP8NotTokenOperator","nameLocation":"432:20:18","nodeType":"ErrorDefinition","parameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"tokenId","nameLocation":"461:7:18","nodeType":"VariableDeclaration","scope":1923,"src":"453:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"453:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1921,"mutability":"mutable","name":"caller","nameLocation":"478:6:18","nodeType":"VariableDeclaration","scope":1923,"src":"470:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"452:33:18"},"src":"426:60:18"},{"documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"488:80:18","text":" @dev Reverts when `operator` is already authorized for the `tokenId`."},"errorSelector":"a7626b68","id":1930,"name":"LSP8OperatorAlreadyAuthorized","nameLocation":"575:29:18","nodeType":"ErrorDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"operator","nameLocation":"613:8:18","nodeType":"VariableDeclaration","scope":1930,"src":"605:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1925,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"tokenId","nameLocation":"631:7:18","nodeType":"VariableDeclaration","scope":1930,"src":"623:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"623:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"604:35:18"},"src":"569:71:18"},{"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"642:75:18","text":" @dev Reverts when trying to set the zero address as an operator."},"errorSelector":"9577b8b3","id":1933,"name":"LSP8CannotUseAddressZeroAsOperator","nameLocation":"724:34:18","nodeType":"ErrorDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[],"src":"758:2:18"},"src":"718:43:18"},{"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"763:70:18","text":" @dev Reverts when trying to send token to the zero address."},"errorSelector":"24ecef4d","id":1936,"name":"LSP8CannotSendToAddressZero","nameLocation":"840:27:18","nodeType":"ErrorDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[],"src":"867:2:18"},"src":"834:36:18"},{"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"872:77:18","text":" @dev Reverts when `operator` is not an operator for the `tokenId`."},"errorSelector":"4aa31a8c","id":1943,"name":"LSP8NonExistingOperator","nameLocation":"956:23:18","nodeType":"ErrorDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"operator","nameLocation":"988:8:18","nodeType":"VariableDeclaration","scope":1943,"src":"980:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:18","nodeType":"VariableDeclaration","scope":1943,"src":"998:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"998:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"979:35:18"},"src":"950:65:18"},{"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"1017:63:18","text":" @dev Reverts when `tokenId` has already been minted."},"errorSelector":"34c7b511","id":1948,"name":"LSP8TokenIdAlreadyMinted","nameLocation":"1087:24:18","nodeType":"ErrorDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"tokenId","nameLocation":"1120:7:18","nodeType":"VariableDeclaration","scope":1948,"src":"1112:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1112:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1111:17:18"},"src":"1081:48:18"},{"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"1131:92:18","text":" @dev Reverts when the parameters used for `transferBatch` have different lengths."},"errorSelector":"93a83119","id":1951,"name":"LSP8InvalidTransferBatch","nameLocation":"1230:24:18","nodeType":"ErrorDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[],"src":"1254:2:18"},"src":"1224:33:18"},{"documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"1259:143:18","text":" @dev Reverts if the `tokenReceiver` does not implement LSP1\n when minting or transferring tokens with `bool force` set as `false`."},"errorSelector":"4349776d","id":1956,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nameLocation":"1409:51:18","nodeType":"ErrorDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"tokenReceiver","nameLocation":"1474:13:18","nodeType":"VariableDeclaration","scope":1956,"src":"1466:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"1466:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1460:29:18"},"src":"1403:87:18"},{"documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"1492:129:18","text":" @dev Reverts if the `tokenReceiver` is an EOA\n when minting or transferring tokens with `bool force` set as `false`."},"errorSelector":"03173137","id":1961,"name":"LSP8NotifyTokenReceiverIsEOA","nameLocation":"1628:28:18","nodeType":"ErrorDefinition","parameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"tokenReceiver","nameLocation":"1665:13:18","nodeType":"VariableDeclaration","scope":1961,"src":"1657:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1656:23:18"},"src":"1622:58:18"},{"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"1682:92:18","text":" @dev Reverts when trying to authorize or revoke the token's owner as an operator."},"errorSelector":"89fdad62","id":1964,"name":"LSP8TokenOwnerCannotBeOperator","nameLocation":"1781:30:18","nodeType":"ErrorDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"1811:2:18"},"src":"1775:39:18"},{"documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"1816:255:18","text":" @dev Error occurs when sending native tokens to the LSP8 contract without sending any data.\n E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\n @notice LSP8 contract cannot receive native tokens."},"errorSelector":"61f49442","id":1967,"name":"LSP8TokenContractCannotHoldValue","nameLocation":"2078:32:18","nodeType":"ErrorDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[],"src":"2110:2:18"},"src":"2072:41:18"},{"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"2115:398:18","text":" @dev Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed.\n The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract.\n It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed."},"errorSelector":"3664800a","id":1970,"name":"LSP8TokenIdFormatNotEditable","nameLocation":"2520:28:18","nodeType":"ErrorDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[],"src":"2548:2:18"},"src":"2514:37:18"},{"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"2553:81:18","text":" @dev Reverts when the length of the token IDs data arrays is not equal"},"errorSelector":"2fa71dfe","id":1973,"name":"LSP8TokenIdsDataLengthMismatch","nameLocation":"2641:30:18","nodeType":"ErrorDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[],"src":"2671:2:18"},"src":"2635:39:18"},{"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"2676:67:18","text":" @dev Reverts when empty arrays is passed to the function"},"errorSelector":"80c98305","id":1976,"name":"LSP8TokenIdsDataEmptyArray","nameLocation":"2750:26:18","nodeType":"ErrorDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[],"src":"2776:2:18"},"src":"2744:35:18"},{"documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"2781:79:18","text":" @dev Reverts when a batch call failed.\n @notice Batch call failed."},"errorSelector":"234eb819","id":1981,"name":"LSP8BatchCallFailed","nameLocation":"2867:19:18","nodeType":"ErrorDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"callIndex","nameLocation":"2895:9:18","nodeType":"VariableDeclaration","scope":1981,"src":"2887:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"2887:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2886:19:18"},"src":"2861:45:18"},{"documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"2908:92:18","text":" @dev Reverts when the token owner changed inside the {_beforeTokenTransfer} hook."},"errorSelector":"5a9c31d3","id":1990,"name":"LSP8TokenOwnerChanged","nameLocation":"3007:21:18","nodeType":"ErrorDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"tokenId","nameLocation":"3042:7:18","nodeType":"VariableDeclaration","scope":1990,"src":"3034:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3034:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"oldOwner","nameLocation":"3063:8:18","nodeType":"VariableDeclaration","scope":1990,"src":"3055:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1985,"name":"address","nodeType":"ElementaryTypeName","src":"3055:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"newOwner","nameLocation":"3085:8:18","nodeType":"VariableDeclaration","scope":1990,"src":"3077:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"3077:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3028:67:18"},"src":"3001:95:18"},{"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"3098:75:18","text":" @dev Reverts when the call to revoke operator is not authorized."},"errorSelector":"760b5acd","id":1999,"name":"LSP8RevokeOperatorNotAuthorized","nameLocation":"3180:31:18","nodeType":"ErrorDefinition","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"caller","nameLocation":"3225:6:18","nodeType":"VariableDeclaration","scope":1999,"src":"3217:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1992,"name":"address","nodeType":"ElementaryTypeName","src":"3217:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"tokenOwner","nameLocation":"3245:10:18","nodeType":"VariableDeclaration","scope":1999,"src":"3237:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1997,"mutability":"mutable","name":"tokenId","nameLocation":"3269:7:18","nodeType":"VariableDeclaration","scope":1999,"src":"3261:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3261:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3211:67:18"},"src":"3174:105:18"}],"src":"39:3241:18"},"id":18},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol","exportedSymbols":{"ERC165Checker":[3973],"ERC725Y":[269],"EnumerableSet":[4598],"ILSP1":[467],"ILSP8IdentifiableDigitalAsset":[1841],"InvalidExtensionAddress":[594],"InvalidFunctionSelector":[589],"LSP17Extendable":[728],"LSP1Utils":[566],"LSP2Utils":[1465],"LSP4DigitalAssetMetadata":[1617],"LSP8BatchCallFailed":[1981],"LSP8CannotSendToAddressZero":[1936],"LSP8CannotUseAddressZeroAsOperator":[1933],"LSP8IdentifiableDigitalAsset":[3612],"LSP8InvalidTransferBatch":[1951],"LSP8NonExistentTokenId":[1907],"LSP8NonExistingOperator":[1943],"LSP8NotTokenOperator":[1923],"LSP8NotTokenOwner":[1916],"LSP8NotifyTokenReceiverContractMissingLSP1Interface":[1956],"LSP8NotifyTokenReceiverIsEOA":[1961],"LSP8OperatorAlreadyAuthorized":[1930],"LSP8RevokeOperatorNotAuthorized":[1999],"LSP8TokenContractCannotHoldValue":[1967],"LSP8TokenIdAlreadyMinted":[1948],"LSP8TokenIdFormatNotEditable":[1970],"LSP8TokenIdsDataEmptyArray":[1976],"LSP8TokenIdsDataLengthMismatch":[1973],"LSP8TokenOwnerCannotBeOperator":[1964],"LSP8TokenOwnerChanged":[1990],"NoExtensionFoundForFunctionSelector":[584],"_INTERFACEID_LSP1":[472],"_INTERFACEID_LSP8":[1846],"_LSP17_EXTENSION_PREFIX":[577],"_LSP8_TOKENID_FORMAT_KEY":[1855],"_TYPEID_LSP8_TOKENOPERATOR":[1870],"_TYPEID_LSP8_TOKENSRECIPIENT":[1867],"_TYPEID_LSP8_TOKENSSENDER":[1864]},"id":3613,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2001,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"39:24:19"},{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","file":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","id":2003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":468,"src":"79:113:19","symbolAliases":[{"foreign":{"id":2002,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"92:22:19","typeDescriptions":{}},"local":"ILSP1","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol","file":"./ILSP8IdentifiableDigitalAsset.sol","id":2005,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":1842,"src":"193:88:19","symbolAliases":[{"foreign":{"id":2004,"name":"ILSP8IdentifiableDigitalAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"206:29:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","file":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","id":2008,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":1618,"src":"294:121:19","symbolAliases":[{"foreign":{"id":2006,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"307:24:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2007,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"337:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","id":2010,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":729,"src":"417:108:19","symbolAliases":[{"foreign":{"id":2009,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"430:15:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":2012,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":4599,"src":"540:92:19","symbolAliases":[{"foreign":{"id":2011,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"553:13:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":2014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":3974,"src":"633:98:19","symbolAliases":[{"foreign":{"id":2013,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"646:13:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","file":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","id":2016,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":567,"src":"732:72:19","symbolAliases":[{"foreign":{"id":2015,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"740:9:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","file":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","id":2018,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":1466,"src":"805:72:19","symbolAliases":[{"foreign":{"id":2017,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"813:9:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","file":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","id":2020,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":482,"src":"892:90:19","symbolAliases":[{"foreign":{"id":2019,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"905:17:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","id":2022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":578,"src":"983:115:19","symbolAliases":[{"foreign":{"id":2021,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"996:23:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Constants.sol","file":"./LSP8Constants.sol","id":2028,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":1901,"src":"1099:187:19","symbolAliases":[{"foreign":{"id":2023,"name":"_INTERFACEID_LSP8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"1112:17:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2024,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"1135:24:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2025,"name":"_TYPEID_LSP8_TOKENOPERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"1165:26:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2026,"name":"_TYPEID_LSP8_TOKENSSENDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"1197:25:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2027,"name":"_TYPEID_LSP8_TOKENSRECIPIENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"1228:28:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","id":2032,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":595,"src":"1298:182:19","symbolAliases":[{"foreign":{"id":2029,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"1311:35:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2030,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1352:23:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2031,"name":"InvalidExtensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"1381:23:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Errors.sol","file":"./LSP8Errors.sol","id":2052,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3613,"sourceUnit":2000,"src":"1481:664:19","symbolAliases":[{"foreign":{"id":2033,"name":"LSP8TokenContractCannotHoldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"1494:32:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2034,"name":"LSP8TokenIdFormatNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"1532:28:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2035,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"1566:22:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2036,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"1594:17:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2037,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"1617:34:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2038,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1657:30:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2039,"name":"LSP8OperatorAlreadyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1693:29:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2040,"name":"LSP8NotTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"1728:20:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2041,"name":"LSP8InvalidTransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"1754:24:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2042,"name":"LSP8NonExistingOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"1784:23:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2043,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"1813:27:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2044,"name":"LSP8TokenIdAlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"1846:24:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2045,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"1876:51:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2046,"name":"LSP8NotifyTokenReceiverIsEOA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"1933:28:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2047,"name":"LSP8TokenIdsDataLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"1967:30:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2048,"name":"LSP8TokenIdsDataEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"2003:26:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2049,"name":"LSP8BatchCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"2035:19:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2050,"name":"LSP8TokenOwnerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2060:21:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2051,"name":"LSP8RevokeOperatorNotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2087:31:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2054,"name":"ILSP8IdentifiableDigitalAsset","nameLocations":["2675:29:19"],"nodeType":"IdentifierPath","referencedDeclaration":1841,"src":"2675:29:19"},"id":2055,"nodeType":"InheritanceSpecifier","src":"2675:29:19"},{"baseName":{"id":2056,"name":"LSP4DigitalAssetMetadata","nameLocations":["2710:24:19"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"2710:24:19"},"id":2057,"nodeType":"InheritanceSpecifier","src":"2710:24:19"},{"baseName":{"id":2058,"name":"LSP17Extendable","nameLocations":["2740:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"2740:15:19"},"id":2059,"nodeType":"InheritanceSpecifier","src":"2740:15:19"}],"canonicalName":"LSP8IdentifiableDigitalAsset","contractDependencies":[],"contractKind":"contract","documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"2147:473:19","text":" @title Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\n @author Matthew Stevens\n @dev Standard implementation contract of the LSP8 standard.\n Minting and transferring are done by providing a unique `tokenId`.\n This implementation is agnostic to the way tokens are created.\n A supply mechanism has to be added in a derived contract using {_mint}\n For a generic mechanism, see {LSP7Mintable}."},"fullyImplemented":true,"id":3612,"linearizedBaseContracts":[3612,728,1617,269,386,3779,3985,3725,3755,1841],"name":"LSP8IdentifiableDigitalAsset","nameLocation":"2639:28:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2063,"libraryName":{"id":2060,"name":"EnumerableSet","nameLocations":["2768:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":4598,"src":"2768:13:19"},"nodeType":"UsingForDirective","src":"2762:49:19","typeName":{"id":2062,"nodeType":"UserDefinedTypeName","pathNode":{"id":2061,"name":"EnumerableSet.AddressSet","nameLocations":["2786:13:19","2800:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"2786:24:19"},"referencedDeclaration":4311,"src":"2786:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"global":false,"id":2067,"libraryName":{"id":2064,"name":"EnumerableSet","nameLocations":["2822:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":4598,"src":"2822:13:19"},"nodeType":"UsingForDirective","src":"2816:49:19","typeName":{"id":2066,"nodeType":"UserDefinedTypeName","pathNode":{"id":2065,"name":"EnumerableSet.Bytes32Set","nameLocations":["2840:13:19","2854:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":4190,"src":"2840:24:19"},"referencedDeclaration":4190,"src":"2840:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"constant":false,"id":2069,"mutability":"mutable","name":"_existingTokens","nameLocation":"2908:15:19","nodeType":"VariableDeclaration","scope":3612,"src":"2891:32:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"2891:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"_tokenOwners","nameLocation":"3013:12:19","nodeType":"VariableDeclaration","scope":3612,"src":"2976:49:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":2072,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2984:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2976:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"2995:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"_ownedTokens","nameLocation":"3132:12:19","nodeType":"VariableDeclaration","scope":3612,"src":"3078:66:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4190_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"typeName":{"id":2077,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3078:44:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4190_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2076,"nodeType":"UserDefinedTypeName","pathNode":{"id":2075,"name":"EnumerableSet.Bytes32Set","nameLocations":["3097:13:19","3111:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":4190,"src":"3097:24:19"},"referencedDeclaration":4190,"src":"3097:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},"visibility":"internal"},{"constant":false,"id":2083,"mutability":"mutable","name":"_operators","nameLocation":"3270:10:19","nodeType":"VariableDeclaration","scope":3612,"src":"3216:64:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4311_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":2082,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3224:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3216:44:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4311_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2081,"nodeType":"UserDefinedTypeName","pathNode":{"id":2080,"name":"EnumerableSet.AddressSet","nameLocations":["3235:13:19","3249:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"3235:24:19"},"referencedDeclaration":4311,"src":"3235:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"internal"},{"body":{"id":2113,"nodeType":"Block","src":"4572:142:19","statements":[{"expression":{"arguments":[{"id":2106,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"4629:24:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2109,"name":"lsp8TokenIdFormat_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"4678:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2107,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4667:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4671:6:19","memberName":"encode","nodeType":"MemberAccess","src":"4667:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4667:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2103,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4582:24:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadata_$1617_$","typeString":"type(contract LSP4DigitalAssetMetadata)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4607:8:19","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"4582:33:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:125:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2112,"nodeType":"ExpressionStatement","src":"4582:125:19"}]},"documentation":{"id":2084,"nodeType":"StructuredDocumentation","src":"3287:1039:19","text":" @notice Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_`\n with tokenId format `lsp8TokenIdFormat_`.\n @dev Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract.\n This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\n @param name_ The name of the token\n @param symbol_ The symbol of the token\n @param newOwner_ The owner of the the token-Metadata\n @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n @param lsp8TokenIdFormat_ The format of tokenIds (= NFTs) that this contract will create.\n @custom:warning Make sure the tokenId format provided on deployment is correct, as it can only be set once\n and cannot be changed in the ERC725Y storage after the contract has been deployed."},"id":2114,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2097,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"4529:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2098,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"4536:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2099,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"4545:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2100,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"4556:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2101,"kind":"baseConstructorSpecifier","modifierName":{"id":2096,"name":"LSP4DigitalAssetMetadata","nameLocations":["4504:24:19"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"4504:24:19"},"nodeType":"ModifierInvocation","src":"4504:67:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"name_","nameLocation":"4366:5:19","nodeType":"VariableDeclaration","scope":2114,"src":"4352:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2085,"name":"string","nodeType":"ElementaryTypeName","src":"4352:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"symbol_","nameLocation":"4395:7:19","nodeType":"VariableDeclaration","scope":2114,"src":"4381:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2087,"name":"string","nodeType":"ElementaryTypeName","src":"4381:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"newOwner_","nameLocation":"4420:9:19","nodeType":"VariableDeclaration","scope":2114,"src":"4412:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2089,"name":"address","nodeType":"ElementaryTypeName","src":"4412:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"4447:14:19","nodeType":"VariableDeclaration","scope":2114,"src":"4439:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"4439:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"lsp8TokenIdFormat_","nameLocation":"4479:18:19","nodeType":"VariableDeclaration","scope":2114,"src":"4471:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"4471:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4342:161:19"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[],"src":"4572:0:19"},"scope":3612,"src":"4331:383:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2137,"nodeType":"Block","src":"6548:157:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2122,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6562:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6566:4:19","memberName":"data","nodeType":"MemberAccess","src":"6562:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6571:6:19","memberName":"length","nodeType":"MemberAccess","src":"6562:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"34","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6580:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"6562:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2132,"nodeType":"IfStatement","src":"6558:90:19","trueBody":{"id":2131,"nodeType":"Block","src":"6583:65:19","statements":[{"errorCall":{"arguments":[{"id":2128,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"6628:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2127,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6604:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6604:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2130,"nodeType":"RevertStatement","src":"6597:40:19"}]}},{"expression":{"arguments":[{"id":2134,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"6689:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2133,"name":"_fallbackLSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[2211],"referencedDeclaration":2211,"src":"6664:24:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes calldata) returns (bytes memory)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6664:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2121,"id":2136,"nodeType":"Return","src":"6657:41:19"}]},"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"4747:1647:19","text":" @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n forwarding the function call to the extension address mapped to the function being called.\n This function is executed when:\n    - Sending data of length less than 4 bytes to the contract.\n    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n    - Receiving native tokens\n 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n 2. If the data sent to this function is of length less than 4 bytes (not a function selector), revert."},"id":2138,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"callData","nameLocation":"6485:8:19","nodeType":"VariableDeclaration","scope":2138,"src":"6470:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2116,"name":"bytes","nodeType":"ElementaryTypeName","src":"6470:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6460:39:19"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2138,"src":"6534:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2119,"name":"bytes","nodeType":"ElementaryTypeName","src":"6534:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6533:14:19"},"scope":3612,"src":"6452:253:19","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":2155,"nodeType":"Block","src":"6959:205:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7020:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7024:5:19","memberName":"value","nodeType":"MemberAccess","src":"7020:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7033:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7020:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2151,"nodeType":"IfStatement","src":"7016:90:19","trueBody":{"id":2150,"nodeType":"Block","src":"7036:70:19","statements":[{"errorCall":{"arguments":[{"hexValue":"00000000","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"7081:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","typeString":"literal_string hex\"00000000\""},"value":"\u0000\u0000\u0000\u0000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","typeString":"literal_string hex\"00000000\""}],"id":2146,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7057:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7057:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2149,"nodeType":"RevertStatement","src":"7050:45:19"}]}},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2152,"name":"LSP8TokenContractCannotHoldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"7123:32:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7123:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2154,"nodeType":"RevertStatement","src":"7116:41:19"}]},"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"6711:155:19","text":" @dev Reverts whenever someone tries to send native tokens to a LSP8 contract.\n @notice LSP8 contract cannot receive native tokens."},"id":2156,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2140,"nodeType":"ParameterList","parameters":[],"src":"6931:2:19"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[],"src":"6959:0:19"},"scope":3612,"src":"6924:240:19","stateMutability":"payable","virtual":true,"visibility":"external"},{"baseFunctions":[727],"body":{"id":2210,"nodeType":"Block","src":"8281:909:19","statements":[{"assignments":[2166,null],"declarations":[{"constant":false,"id":2166,"mutability":"mutable","name":"extension","nameLocation":"8343:9:19","nodeType":"VariableDeclaration","scope":2210,"src":"8335:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2165,"name":"address","nodeType":"ElementaryTypeName","src":"8335:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":2171,"initialValue":{"arguments":[{"expression":{"id":2168,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8387:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8391:3:19","memberName":"sig","nodeType":"MemberAccess","src":"8387:7:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2167,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[2261],"referencedDeclaration":2261,"src":"8358:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8358:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"8334:61:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2172,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"8455:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8476:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8468:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"8468:7:19","typeDescriptions":{}}},"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8468:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8455:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"8451:92:19","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2179,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8535:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8539:3:19","memberName":"sig","nodeType":"MemberAccess","src":"8535:7:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2178,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"8499:35:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8499:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2182,"nodeType":"RevertStatement","src":"8492:51:19"}},{"assignments":[2185,2187],"declarations":[{"constant":false,"id":2185,"mutability":"mutable","name":"success","nameLocation":"8560:7:19","nodeType":"VariableDeclaration","scope":2210,"src":"8555:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2184,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"result","nameLocation":"8582:6:19","nodeType":"VariableDeclaration","scope":2210,"src":"8569:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2186,"name":"bytes","nodeType":"ElementaryTypeName","src":"8569:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2202,"initialValue":{"arguments":[{"arguments":[{"id":2195,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8655:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":2196,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8665:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8669:6:19","memberName":"sender","nodeType":"MemberAccess","src":"8665:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8677:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8681:5:19","memberName":"value","nodeType":"MemberAccess","src":"8677:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2193,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8638:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8642:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"8638:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8638:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2188,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"8592:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8602:4:19","memberName":"call","nodeType":"MemberAccess","src":"8592:14:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2190,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8614:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8618:5:19","memberName":"value","nodeType":"MemberAccess","src":"8614:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8592:32:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8592:105:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8554:143:19"},{"condition":{"id":2203,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"8712:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2208,"nodeType":"Block","src":"8765:419:19","statements":[{"AST":{"nodeType":"YulBlock","src":"9049:125:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9067:36:19","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"9096:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9090:5:19"},"nodeType":"YulFunctionCall","src":"9090:13:19"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"9071:15:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"9131:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9139:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9127:3:19"},"nodeType":"YulFunctionCall","src":"9127:15:19"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"9144:15:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9120:6:19"},"nodeType":"YulFunctionCall","src":"9120:40:19"},"nodeType":"YulExpressionStatement","src":"9120:40:19"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2187,"isOffset":false,"isSlot":false,"src":"9096:6:19","valueSize":1},{"declaration":2187,"isOffset":false,"isSlot":false,"src":"9131:6:19","valueSize":1}],"id":2207,"nodeType":"InlineAssembly","src":"9040:134:19"}]},"id":2209,"nodeType":"IfStatement","src":"8708:476:19","trueBody":{"id":2206,"nodeType":"Block","src":"8721:38:19","statements":[{"expression":{"id":2204,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"8742:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2164,"id":2205,"nodeType":"Return","src":"8735:13:19"}]}}]},"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"7170:984:19","text":" @dev Forwards the call with the received value to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the address(0) will be returned.\n We will always forward the value to the extension, as the LSP8 contract is not supposed to hold any native tokens.\n Reverts if there is no extension for the function being called.\n If there is an extension for the function selector being called, it calls the extension with the\n CALL opcode, passing the {msg.data} appended with the 20 bytes of the {msg.sender} and\n 32 bytes of the {msg.value}\n @custom:info The LSP8 Token contract should not hold any native tokens. Any native tokens received by the contract\n will be forwarded to the extension address mapped to the selector from `msg.sig`."},"id":2211,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"8168:24:19","nodeType":"FunctionDefinition","overrides":{"id":2161,"nodeType":"OverrideSpecifier","overrides":[],"src":"8249:8:19"},"parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"callData","nameLocation":"8217:8:19","nodeType":"VariableDeclaration","scope":2211,"src":"8202:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2158,"name":"bytes","nodeType":"ElementaryTypeName","src":"8202:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8192:39:19"},"returnParameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2211,"src":"8267:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2162,"name":"bytes","nodeType":"ElementaryTypeName","src":"8267:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8266:14:19"},"scope":3612,"src":"8159:1031:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[668],"body":{"id":2260,"nodeType":"Block","src":"9591:585:19","statements":[{"assignments":[2223],"declarations":[{"constant":false,"id":2223,"mutability":"mutable","name":"mappedExtensionDataKey","nameLocation":"9689:22:19","nodeType":"VariableDeclaration","scope":2260,"src":"9681:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9681:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2229,"initialValue":{"arguments":[{"id":2226,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"9756:23:19","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":2227,"name":"functionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"9793:16:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2224,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"9714:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1465_$","typeString":"type(library LSP2Utils)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9724:18:19","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":955,"src":"9714:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9714:105:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9681:138:19"},{"assignments":[2231],"declarations":[{"constant":false,"id":2231,"mutability":"mutable","name":"extensionAddress","nameLocation":"9921:16:19","nodeType":"VariableDeclaration","scope":2260,"src":"9908:29:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2230,"name":"bytes","nodeType":"ElementaryTypeName","src":"9908:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2235,"initialValue":{"arguments":[{"id":2233,"name":"mappedExtensionDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"9949:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2232,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"9940:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9940:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9908:64:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2236,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9986:16:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10003:6:19","memberName":"length","nodeType":"MemberAccess","src":"9986:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3230","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10013:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"9986:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2240,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"10019:16:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10036:6:19","memberName":"length","nodeType":"MemberAccess","src":"10019:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10046:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10019:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9986:61:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2249,"nodeType":"IfStatement","src":"9982:127:19","trueBody":{"errorCall":{"arguments":[{"id":2246,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"10092:16:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2245,"name":"InvalidExtensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"10068:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10068:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2248,"nodeType":"RevertStatement","src":"10061:48:19"}},{"expression":{"components":[{"arguments":[{"arguments":[{"id":2254,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"10144:16:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10136:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":2252,"name":"bytes20","nodeType":"ElementaryTypeName","src":"10136:7:19","typeDescriptions":{}}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10136:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10128:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2250,"name":"address","nodeType":"ElementaryTypeName","src":"10128:7:19","typeDescriptions":{}}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10128:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10164:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":2258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10127:42:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"functionReturnParameters":2221,"id":2259,"nodeType":"Return","src":"10120:49:19"}]},"documentation":{"id":2212,"nodeType":"StructuredDocumentation","src":"9196:258:19","text":" @dev Returns the extension address stored under the following data key:\n - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n - If no extension is stored, returns the address(0)."},"id":2261,"implemented":true,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"9468:28:19","nodeType":"FunctionDefinition","overrides":{"id":2216,"nodeType":"OverrideSpecifier","overrides":[],"src":"9558:8:19"},"parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"functionSelector","nameLocation":"9513:16:19","nodeType":"VariableDeclaration","scope":2261,"src":"9506:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2213,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9506:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"9496:39:19"},"returnParameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2261,"src":"9576:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2217,"name":"address","nodeType":"ElementaryTypeName","src":"9576:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2261,"src":"9585:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2219,"name":"bool","nodeType":"ElementaryTypeName","src":"9585:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9575:15:19"},"scope":3612,"src":"9459:717:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[268,626],"body":{"id":2286,"nodeType":"Block","src":"10364:200:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2272,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"10393:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2273,"name":"_INTERFACEID_LSP8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"10408:17:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"10393:32:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2277,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"10465:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2275,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"10441:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP8IdentifiableDigitalAsset_$3612_$","typeString":"type(contract super LSP8IdentifiableDigitalAsset)"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10447:17:19","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":626,"src":"10441:23:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10393:84:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2282,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"10545:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2280,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"10493:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP17Extendable_$728_$","typeString":"type(contract LSP17Extendable)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:35:19","memberName":"_supportsInterfaceInERC165Extension","nodeType":"MemberAccess","referencedDeclaration":658,"src":"10493:51:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10493:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10393:164:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2271,"id":2285,"nodeType":"Return","src":"10374:183:19"}]},"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"10182:46:19","text":" @inheritdoc LSP17Extendable"},"functionSelector":"01ffc9a7","id":2287,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"10242:17:19","nodeType":"FunctionDefinition","overrides":{"id":2268,"nodeType":"OverrideSpecifier","overrides":[{"id":2266,"name":"ERC725Y","nameLocations":["10323:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"10323:7:19"},{"id":2267,"name":"LSP17Extendable","nameLocations":["10332:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"10332:15:19"}],"src":"10314:34:19"},"parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"interfaceId","nameLocation":"10276:11:19","nodeType":"VariableDeclaration","scope":2287,"src":"10269:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2263,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10269:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"10259:34:19"},"returnParameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2287,"src":"10358:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2269,"name":"bool","nodeType":"ElementaryTypeName","src":"10358:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10357:6:19"},"scope":3612,"src":"10233:331:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1616],"body":{"id":2311,"nodeType":"Block","src":"10886:182:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2296,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"10900:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2297,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10911:24:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10900:35:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2303,"nodeType":"IfStatement","src":"10896:103:19","trueBody":{"id":2302,"nodeType":"Block","src":"10937:62:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2299,"name":"LSP8TokenIdFormatNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"10958:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10958:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2301,"nodeType":"RevertStatement","src":"10951:37:19"}]}},{"expression":{"arguments":[{"id":2307,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"11042:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2308,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"11051:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2304,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"11008:24:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadata_$1617_$","typeString":"type(contract LSP4DigitalAssetMetadata)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11033:8:19","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"11008:33:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11008:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2310,"nodeType":"ExpressionStatement","src":"11008:53:19"}]},"documentation":{"id":2288,"nodeType":"StructuredDocumentation","src":"10570:204:19","text":" @inheritdoc LSP4DigitalAssetMetadata\n @dev The ERC725Y data key `_LSP8_TOKENID_FORMAT_KEY` cannot be changed\n once the identifiable digital asset contract has been deployed."},"id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"10788:8:19","nodeType":"FunctionDefinition","overrides":{"id":2294,"nodeType":"OverrideSpecifier","overrides":[],"src":"10877:8:19"},"parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"dataKey","nameLocation":"10814:7:19","nodeType":"VariableDeclaration","scope":2312,"src":"10806:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10806:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"dataValue","nameLocation":"10844:9:19","nodeType":"VariableDeclaration","scope":2312,"src":"10831:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2291,"name":"bytes","nodeType":"ElementaryTypeName","src":"10831:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10796:63:19"},"returnParameters":{"id":2295,"nodeType":"ParameterList","parameters":[],"src":"10886:0:19"},"scope":3612,"src":"10779:289:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1685],"body":{"id":2321,"nodeType":"Block","src":"11235:39:19","statements":[{"expression":{"id":2319,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"11252:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2318,"id":2320,"nodeType":"Return","src":"11245:22:19"}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"11100:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"18160ddd","id":2322,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"11174:11:19","nodeType":"FunctionDefinition","overrides":{"id":2315,"nodeType":"OverrideSpecifier","overrides":[],"src":"11208:8:19"},"parameters":{"id":2314,"nodeType":"ParameterList","parameters":[],"src":"11185:2:19"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2322,"src":"11226:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"11226:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11225:9:19"},"scope":3612,"src":"11165:109:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1693],"body":{"id":2337,"nodeType":"Block","src":"11477:57:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2331,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"11494:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4190_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":2333,"indexExpression":{"id":2332,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"11507:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11494:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11519:6:19","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4259,"src":"11494:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$4190_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$4190_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11494:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2330,"id":2336,"nodeType":"Return","src":"11487:40:19"}]},"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"11312:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"70a08231","id":2338,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"11386:9:19","nodeType":"FunctionDefinition","overrides":{"id":2327,"nodeType":"OverrideSpecifier","overrides":[],"src":"11450:8:19"},"parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"tokenOwner","nameLocation":"11413:10:19","nodeType":"VariableDeclaration","scope":2338,"src":"11405:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2324,"name":"address","nodeType":"ElementaryTypeName","src":"11405:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11395:34:19"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2338,"src":"11468:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"11468:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11467:9:19"},"scope":3612,"src":"11377:157:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1701],"body":{"id":2367,"nodeType":"Block","src":"11705:190:19","statements":[{"assignments":[2348],"declarations":[{"constant":false,"id":2348,"mutability":"mutable","name":"tokenOwner","nameLocation":"11723:10:19","nodeType":"VariableDeclaration","scope":2367,"src":"11715:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2347,"name":"address","nodeType":"ElementaryTypeName","src":"11715:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2352,"initialValue":{"baseExpression":{"id":2349,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"11736:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":2351,"indexExpression":{"id":2350,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11749:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11736:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11715:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"11772:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11794:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11786:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"11786:7:19","typeDescriptions":{}}},"id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11786:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11772:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2364,"nodeType":"IfStatement","src":"11768:93:19","trueBody":{"id":2363,"nodeType":"Block","src":"11798:63:19","statements":[{"errorCall":{"arguments":[{"id":2360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11842:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2359,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"11819:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11819:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2362,"nodeType":"RevertStatement","src":"11812:38:19"}]}},{"expression":{"id":2365,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"11878:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2346,"id":2366,"nodeType":"Return","src":"11871:17:19"}]},"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"11540:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"217b2270","id":2368,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOwnerOf","nameLocation":"11614:12:19","nodeType":"FunctionDefinition","overrides":{"id":2343,"nodeType":"OverrideSpecifier","overrides":[],"src":"11678:8:19"},"parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"tokenId","nameLocation":"11644:7:19","nodeType":"VariableDeclaration","scope":2368,"src":"11636:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11636:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11626:31:19"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2368,"src":"11696:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2344,"name":"address","nodeType":"ElementaryTypeName","src":"11696:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11695:9:19"},"scope":3612,"src":"11605:290:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1710],"body":{"id":2384,"nodeType":"Block","src":"12076:57:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2378,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"12093:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4190_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":2380,"indexExpression":{"id":2379,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"12106:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12093:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12118:6:19","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":4307,"src":"12093:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$4190_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$attached_to$_t_struct$_Bytes32Set_$4190_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2377,"id":2383,"nodeType":"Return","src":"12086:40:19"}]},"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"11901:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"a3b261f2","id":2385,"implemented":true,"kind":"function","modifiers":[],"name":"tokenIdsOf","nameLocation":"11975:10:19","nodeType":"FunctionDefinition","overrides":{"id":2373,"nodeType":"OverrideSpecifier","overrides":[],"src":"12040:8:19"},"parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"tokenOwner","nameLocation":"12003:10:19","nodeType":"VariableDeclaration","scope":2385,"src":"11995:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"11995:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11985:34:19"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2385,"src":"12058:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12058:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2375,"nodeType":"ArrayTypeName","src":"12058:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12057:18:19"},"scope":3612,"src":"11966:167:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1720],"body":{"id":2401,"nodeType":"Block","src":"12392:60:19","statements":[{"expression":{"arguments":[{"id":2397,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"12428:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2398,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"12437:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2396,"name":"_getDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"12409:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes32) view returns (bytes memory)"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12409:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2395,"id":2400,"nodeType":"Return","src":"12402:43:19"}]},"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"12182:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"16e023b3","id":2402,"implemented":true,"kind":"function","modifiers":[],"name":"getDataForTokenId","nameLocation":"12256:17:19","nodeType":"FunctionDefinition","overrides":{"id":2392,"nodeType":"OverrideSpecifier","overrides":[],"src":"12350:8:19"},"parameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"tokenId","nameLocation":"12291:7:19","nodeType":"VariableDeclaration","scope":2402,"src":"12283:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12283:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"dataKey","nameLocation":"12316:7:19","nodeType":"VariableDeclaration","scope":2402,"src":"12308:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12308:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12273:56:19"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"dataValue","nameLocation":"12381:9:19","nodeType":"VariableDeclaration","scope":2402,"src":"12368:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2393,"name":"bytes","nodeType":"ElementaryTypeName","src":"12368:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12367:24:19"},"scope":3612,"src":"12247:205:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1733],"body":{"id":2463,"nodeType":"Block","src":"12697:463:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2416,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"12711:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12720:6:19","memberName":"length","nodeType":"MemberAccess","src":"12711:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2418,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"12730:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12739:6:19","memberName":"length","nodeType":"MemberAccess","src":"12730:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12711:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2425,"nodeType":"IfStatement","src":"12707:104:19","trueBody":{"id":2424,"nodeType":"Block","src":"12747:64:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2421,"name":"LSP8TokenIdsDataLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"12768:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12768:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2423,"nodeType":"RevertStatement","src":"12761:39:19"}]}},{"expression":{"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2426,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"12821:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2430,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"12846:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12855:6:19","memberName":"length","nodeType":"MemberAccess","src":"12846:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12834:11:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":2427,"name":"bytes","nodeType":"ElementaryTypeName","src":"12838:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2428,"nodeType":"ArrayTypeName","src":"12838:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12834:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"12821:41:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2434,"nodeType":"ExpressionStatement","src":"12821:41:19"},{"body":{"id":2459,"nodeType":"Block","src":"12912:214:19","statements":[{"expression":{"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2442,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"12926:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2444,"indexExpression":{"id":2443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"12937:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12926:13:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2446,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"12961:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2448,"indexExpression":{"id":2447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"12970:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12961:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2449,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"12974:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2451,"indexExpression":{"id":2450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"12983:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12974:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2445,"name":"_getDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"12942:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes32) view returns (bytes memory)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12942:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"12926:60:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2454,"nodeType":"ExpressionStatement","src":"12926:60:19"},{"id":2458,"nodeType":"UncheckedBlock","src":"13070:46:19","statements":[{"expression":{"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13098:3:19","subExpression":{"id":2455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"13100:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2457,"nodeType":"ExpressionStatement","src":"13098:3:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"12889:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2439,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"12893:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12902:6:19","memberName":"length","nodeType":"MemberAccess","src":"12893:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12889:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2460,"initializationExpression":{"assignments":[2436],"declarations":[{"constant":false,"id":2436,"mutability":"mutable","name":"i","nameLocation":"12886:1:19","nodeType":"VariableDeclaration","scope":2460,"src":"12878:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"12878:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2437,"nodeType":"VariableDeclarationStatement","src":"12878:9:19"},"nodeType":"ForStatement","src":"12873:253:19"},{"expression":{"id":2461,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"13143:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":2415,"id":2462,"nodeType":"Return","src":"13136:17:19"}]},"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"12458:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"1d26fce6","id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"getDataBatchForTokenIds","nameLocation":"12532:23:19","nodeType":"FunctionDefinition","overrides":{"id":2411,"nodeType":"OverrideSpecifier","overrides":[],"src":"12652:8:19"},"parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"tokenIds","nameLocation":"12582:8:19","nodeType":"VariableDeclaration","scope":2464,"src":"12565:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12565:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2405,"nodeType":"ArrayTypeName","src":"12565:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"dataKeys","nameLocation":"12617:8:19","nodeType":"VariableDeclaration","scope":2464,"src":"12600:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12600:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2408,"nodeType":"ArrayTypeName","src":"12600:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12555:76:19"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"dataValues","nameLocation":"12685:10:19","nodeType":"VariableDeclaration","scope":2464,"src":"12670:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2412,"name":"bytes","nodeType":"ElementaryTypeName","src":"12670:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2413,"nodeType":"ArrayTypeName","src":"12670:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12669:27:19"},"scope":3612,"src":"12523:637:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1743],"body":{"id":2483,"nodeType":"Block","src":"13380:64:19","statements":[{"expression":{"arguments":[{"id":2478,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"13409:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2479,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"13418:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2480,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"13427:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2477,"name":"_setDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"13390:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13390:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2482,"nodeType":"ExpressionStatement","src":"13390:47:19"}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"13166:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"d6c1407c","id":2484,"implemented":true,"kind":"function","modifiers":[{"id":2475,"kind":"modifierInvocation","modifierName":{"id":2474,"name":"onlyOwner","nameLocations":["13370:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3644,"src":"13370:9:19"},"nodeType":"ModifierInvocation","src":"13370:9:19"}],"name":"setDataForTokenId","nameLocation":"13240:17:19","nodeType":"FunctionDefinition","overrides":{"id":2473,"nodeType":"OverrideSpecifier","overrides":[],"src":"13361:8:19"},"parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"tokenId","nameLocation":"13275:7:19","nodeType":"VariableDeclaration","scope":2484,"src":"13267:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13267:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"dataKey","nameLocation":"13300:7:19","nodeType":"VariableDeclaration","scope":2484,"src":"13292:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13292:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"dataValue","nameLocation":"13330:9:19","nodeType":"VariableDeclaration","scope":2484,"src":"13317:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2470,"name":"bytes","nodeType":"ElementaryTypeName","src":"13317:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13257:88:19"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[],"src":"13380:0:19"},"scope":3612,"src":"13231:213:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1756],"body":{"id":2550,"nodeType":"Block","src":"13693:552:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2500,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"13720:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13729:6:19","memberName":"length","nodeType":"MemberAccess","src":"13720:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2502,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"13739:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13748:6:19","memberName":"length","nodeType":"MemberAccess","src":"13739:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13720:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2505,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"13770:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13779:6:19","memberName":"length","nodeType":"MemberAccess","src":"13770:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2507,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"13789:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13800:6:19","memberName":"length","nodeType":"MemberAccess","src":"13789:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13770:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13720:86:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2515,"nodeType":"IfStatement","src":"13703:178:19","trueBody":{"id":2514,"nodeType":"Block","src":"13817:64:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2511,"name":"LSP8TokenIdsDataLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"13838:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13838:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2513,"nodeType":"RevertStatement","src":"13831:39:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2516,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"13895:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13904:6:19","memberName":"length","nodeType":"MemberAccess","src":"13895:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13914:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13895:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2524,"nodeType":"IfStatement","src":"13891:86:19","trueBody":{"id":2523,"nodeType":"Block","src":"13917:60:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2520,"name":"LSP8TokenIdsDataEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"13938:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13938:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2522,"nodeType":"RevertStatement","src":"13931:35:19"}]}},{"body":{"id":2548,"nodeType":"Block","src":"14026:213:19","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2533,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"14059:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2535,"indexExpression":{"id":2534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"14068:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14059:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2536,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"14072:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2538,"indexExpression":{"id":2537,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"14081:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14072:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2539,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"14085:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2541,"indexExpression":{"id":2540,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"14096:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14085:13:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2532,"name":"_setDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"14040:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14040:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2543,"nodeType":"ExpressionStatement","src":"14040:59:19"},{"id":2547,"nodeType":"UncheckedBlock","src":"14183:46:19","statements":[{"expression":{"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"14211:3:19","subExpression":{"id":2544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"14213:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2546,"nodeType":"ExpressionStatement","src":"14211:3:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"14003:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2529,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"14007:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14016:6:19","memberName":"length","nodeType":"MemberAccess","src":"14007:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14003:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2549,"initializationExpression":{"assignments":[2526],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"i","nameLocation":"14000:1:19","nodeType":"VariableDeclaration","scope":2549,"src":"13992:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"13992:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2527,"nodeType":"VariableDeclarationStatement","src":"13992:9:19"},"nodeType":"ForStatement","src":"13987:252:19"}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"13450:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"be9f0e6f","id":2551,"implemented":true,"kind":"function","modifiers":[{"id":2498,"kind":"modifierInvocation","modifierName":{"id":2497,"name":"onlyOwner","nameLocations":["13683:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3644,"src":"13683:9:19"},"nodeType":"ModifierInvocation","src":"13683:9:19"}],"name":"setDataBatchForTokenIds","nameLocation":"13524:23:19","nodeType":"FunctionDefinition","overrides":{"id":2496,"nodeType":"OverrideSpecifier","overrides":[],"src":"13674:8:19"},"parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"tokenIds","nameLocation":"13574:8:19","nodeType":"VariableDeclaration","scope":2551,"src":"13557:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13557:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2487,"nodeType":"ArrayTypeName","src":"13557:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2491,"mutability":"mutable","name":"dataKeys","nameLocation":"13609:8:19","nodeType":"VariableDeclaration","scope":2551,"src":"13592:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13592:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2490,"nodeType":"ArrayTypeName","src":"13592:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2494,"mutability":"mutable","name":"dataValues","nameLocation":"13642:10:19","nodeType":"VariableDeclaration","scope":2551,"src":"13627:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2492,"name":"bytes","nodeType":"ElementaryTypeName","src":"13627:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2493,"nodeType":"ArrayTypeName","src":"13627:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13547:111:19"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[],"src":"13693:0:19"},"scope":3612,"src":"13515:730:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1840],"body":{"id":2620,"nodeType":"Block","src":"14582:967:19","statements":[{"expression":{"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2562,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"14592:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2566,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"14614:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14619:6:19","memberName":"length","nodeType":"MemberAccess","src":"14614:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14602:11:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":2563,"name":"bytes","nodeType":"ElementaryTypeName","src":"14606:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2564,"nodeType":"ArrayTypeName","src":"14606:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14602:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"14592:34:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2570,"nodeType":"ExpressionStatement","src":"14592:34:19"},{"body":{"id":2618,"nodeType":"Block","src":"14671:872:19","statements":[{"assignments":[2579,2581],"declarations":[{"constant":false,"id":2579,"mutability":"mutable","name":"success","nameLocation":"14691:7:19","nodeType":"VariableDeclaration","scope":2618,"src":"14686:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2578,"name":"bool","nodeType":"ElementaryTypeName","src":"14686:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2581,"mutability":"mutable","name":"result","nameLocation":"14713:6:19","nodeType":"VariableDeclaration","scope":2618,"src":"14700:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2580,"name":"bytes","nodeType":"ElementaryTypeName","src":"14700:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2591,"initialValue":{"arguments":[{"baseExpression":{"id":2587,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"14767:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2589,"indexExpression":{"id":2588,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"14772:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14767:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":2584,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14731:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_LSP8IdentifiableDigitalAsset_$3612","typeString":"contract LSP8IdentifiableDigitalAsset"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP8IdentifiableDigitalAsset_$3612","typeString":"contract LSP8IdentifiableDigitalAsset"}],"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14723:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2582,"name":"address","nodeType":"ElementaryTypeName","src":"14723:7:19","typeDescriptions":{}}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14723:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14737:12:19","memberName":"delegatecall","nodeType":"MemberAccess","src":"14723:26:19","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14723:65:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"14685:103:19"},{"condition":{"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14807:8:19","subExpression":{"id":2592,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"14808:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2607,"nodeType":"IfStatement","src":"14803:636:19","trueBody":{"id":2606,"nodeType":"Block","src":"14817:622:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2594,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"14909:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14916:6:19","memberName":"length","nodeType":"MemberAccess","src":"14909:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14926:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14909:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2604,"nodeType":"Block","src":"15342:83:19","statements":[{"errorCall":{"arguments":[{"id":2601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"15403:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2600,"name":"LSP8BatchCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"15371:19:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["15392:9:19"],"names":["callIndex"],"nodeType":"FunctionCall","src":"15371:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2603,"nodeType":"RevertStatement","src":"15364:42:19"}]},"id":2605,"nodeType":"IfStatement","src":"14905:520:19","trueBody":{"id":2599,"nodeType":"Block","src":"14929:407:19","statements":[{"AST":{"nodeType":"YulBlock","src":"15169:149:19","statements":[{"nodeType":"YulVariableDeclaration","src":"15195:36:19","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"15224:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15218:5:19"},"nodeType":"YulFunctionCall","src":"15218:13:19"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"15199:15:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15267:2:19","type":"","value":"32"},{"name":"result","nodeType":"YulIdentifier","src":"15271:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15263:3:19"},"nodeType":"YulFunctionCall","src":"15263:15:19"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"15280:15:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15256:6:19"},"nodeType":"YulFunctionCall","src":"15256:40:19"},"nodeType":"YulExpressionStatement","src":"15256:40:19"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2581,"isOffset":false,"isSlot":false,"src":"15224:6:19","valueSize":1},{"declaration":2581,"isOffset":false,"isSlot":false,"src":"15271:6:19","valueSize":1}],"id":2598,"nodeType":"InlineAssembly","src":"15160:158:19"}]}}]}},{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2608,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"15453:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2610,"indexExpression":{"id":2609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"15461:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15453:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"15466:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"15453:19:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2613,"nodeType":"ExpressionStatement","src":"15453:19:19"},{"id":2617,"nodeType":"UncheckedBlock","src":"15487:46:19","statements":[{"expression":{"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"15515:3:19","subExpression":{"id":2614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"15517:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2616,"nodeType":"ExpressionStatement","src":"15515:3:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2574,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"14652:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2575,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"14656:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14661:6:19","memberName":"length","nodeType":"MemberAccess","src":"14656:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14652:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2619,"initializationExpression":{"assignments":[2572],"declarations":[{"constant":false,"id":2572,"mutability":"mutable","name":"i","nameLocation":"14649:1:19","nodeType":"VariableDeclaration","scope":2619,"src":"14641:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"14641:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2573,"nodeType":"VariableDeclarationStatement","src":"14641:9:19"},"nodeType":"ForStatement","src":"14636:907:19"}]},"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"14285:178:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset\n @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`."},"functionSelector":"6963d438","id":2621,"implemented":true,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"14477:10:19","nodeType":"FunctionDefinition","overrides":{"id":2557,"nodeType":"OverrideSpecifier","overrides":[],"src":"14540:8:19"},"parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"data","nameLocation":"14514:4:19","nodeType":"VariableDeclaration","scope":2621,"src":"14497:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2553,"name":"bytes","nodeType":"ElementaryTypeName","src":"14497:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2554,"nodeType":"ArrayTypeName","src":"14497:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14487:37:19"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"results","nameLocation":"14573:7:19","nodeType":"VariableDeclaration","scope":2621,"src":"14558:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2558,"name":"bytes","nodeType":"ElementaryTypeName","src":"14558:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2559,"nodeType":"ArrayTypeName","src":"14558:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14557:24:19"},"scope":3612,"src":"14468:1081:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1766],"body":{"id":2710,"nodeType":"Block","src":"15810:907:19","statements":[{"assignments":[2633],"declarations":[{"constant":false,"id":2633,"mutability":"mutable","name":"tokenOwner","nameLocation":"15828:10:19","nodeType":"VariableDeclaration","scope":2710,"src":"15820:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"15820:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2637,"initialValue":{"arguments":[{"id":2635,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"15854:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2634,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"15841:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15841:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15820:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2638,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"15877:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2639,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15891:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15895:6:19","memberName":"sender","nodeType":"MemberAccess","src":"15891:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15877:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2650,"nodeType":"IfStatement","src":"15873:112:19","trueBody":{"id":2649,"nodeType":"Block","src":"15903:82:19","statements":[{"errorCall":{"arguments":[{"id":2643,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"15942:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2644,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"15954:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2645,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15963:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15967:6:19","memberName":"sender","nodeType":"MemberAccess","src":"15963:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2642,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"15924:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) pure"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15924:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2648,"nodeType":"RevertStatement","src":"15917:57:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"15999:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16019:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16011:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"16011:7:19","typeDescriptions":{}}},"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16011:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15999:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2661,"nodeType":"IfStatement","src":"15995:96:19","trueBody":{"id":2660,"nodeType":"Block","src":"16023:68:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2657,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"16044:34:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2659,"nodeType":"RevertStatement","src":"16037:43:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"16105:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2663,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"16119:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16105:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2669,"nodeType":"IfStatement","src":"16101:92:19","trueBody":{"id":2668,"nodeType":"Block","src":"16129:64:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2665,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"16150:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16150:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2667,"nodeType":"RevertStatement","src":"16143:39:19"}]}},{"assignments":[2671],"declarations":[{"constant":false,"id":2671,"mutability":"mutable","name":"isAdded","nameLocation":"16208:7:19","nodeType":"VariableDeclaration","scope":2710,"src":"16203:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2670,"name":"bool","nodeType":"ElementaryTypeName","src":"16203:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2678,"initialValue":{"arguments":[{"id":2676,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"16242:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2672,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"16218:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4311_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":2674,"indexExpression":{"id":2673,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"16229:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16218:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16238:3:19","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4338,"src":"16218:23:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$4311_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$4311_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16218:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"16203:48:19"},{"condition":{"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16265:8:19","subExpression":{"id":2679,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"16266:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2686,"nodeType":"IfStatement","src":"16261:69:19","trueBody":{"errorCall":{"arguments":[{"id":2682,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"16312:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2683,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"16322:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2681,"name":"LSP8OperatorAlreadyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"16282:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16282:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2685,"nodeType":"RevertStatement","src":"16275:55:19"}},{"eventCall":{"arguments":[{"id":2688,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"16388:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2689,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"16410:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"16434:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2691,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"16455:24:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2687,"name":"OperatorAuthorizationChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"16346:28:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:143:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2693,"nodeType":"EmitStatement","src":"16341:148:19"},{"assignments":[2695],"declarations":[{"constant":false,"id":2695,"mutability":"mutable","name":"lsp1Data","nameLocation":"16513:8:19","nodeType":"VariableDeclaration","scope":2710,"src":"16500:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2694,"name":"bytes","nodeType":"ElementaryTypeName","src":"16500:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2704,"initialValue":{"arguments":[{"expression":{"id":2698,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16548:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16552:6:19","memberName":"sender","nodeType":"MemberAccess","src":"16548:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2700,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"16572:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"74727565","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16593:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2702,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"16625:24:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2696,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16524:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16528:6:19","memberName":"encode","nodeType":"MemberAccess","src":"16524:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16524:135:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"16500:159:19"},{"expression":{"arguments":[{"id":2706,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"16691:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2707,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"16701:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2705,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"16670:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16670:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2709,"nodeType":"ExpressionStatement","src":"16670:40:19"}]},"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"15590:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"86a10ddd","id":2711,"implemented":true,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"15664:17:19","nodeType":"FunctionDefinition","overrides":{"id":2630,"nodeType":"OverrideSpecifier","overrides":[],"src":"15801:8:19"},"parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"operator","nameLocation":"15699:8:19","nodeType":"VariableDeclaration","scope":2711,"src":"15691:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"15691:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"tokenId","nameLocation":"15725:7:19","nodeType":"VariableDeclaration","scope":2711,"src":"15717:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15717:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2628,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"15755:24:19","nodeType":"VariableDeclaration","scope":2711,"src":"15742:37:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2627,"name":"bytes","nodeType":"ElementaryTypeName","src":"15742:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15681:104:19"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[],"src":"15810:0:19"},"scope":3612,"src":"15655:1062:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1778],"body":{"id":2794,"nodeType":"Block","src":"16961:986:19","statements":[{"assignments":[2725],"declarations":[{"constant":false,"id":2725,"mutability":"mutable","name":"tokenOwner","nameLocation":"16979:10:19","nodeType":"VariableDeclaration","scope":2794,"src":"16971:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"16971:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2729,"initialValue":{"arguments":[{"id":2727,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"17005:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2726,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"16992:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16992:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16971:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2730,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17028:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17032:6:19","memberName":"sender","nodeType":"MemberAccess","src":"17028:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2732,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"17042:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17028:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2748,"nodeType":"IfStatement","src":"17024:264:19","trueBody":{"id":2747,"nodeType":"Block","src":"17054:234:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2734,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17072:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2735,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17084:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17088:6:19","memberName":"sender","nodeType":"MemberAccess","src":"17084:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17072:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2746,"nodeType":"IfStatement","src":"17068:210:19","trueBody":{"id":2745,"nodeType":"Block","src":"17096:182:19","statements":[{"errorCall":{"arguments":[{"expression":{"id":2739,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17174:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17178:6:19","memberName":"sender","nodeType":"MemberAccess","src":"17174:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2741,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"17206:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2742,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"17238:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2738,"name":"LSP8RevokeOperatorNotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"17121:31:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,address,bytes32) pure"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17121:142:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2744,"nodeType":"RevertStatement","src":"17114:149:19"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17302:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17322:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17314:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2750,"name":"address","nodeType":"ElementaryTypeName","src":"17314:7:19","typeDescriptions":{}}},"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17314:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17302:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2759,"nodeType":"IfStatement","src":"17298:96:19","trueBody":{"id":2758,"nodeType":"Block","src":"17326:68:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2755,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"17347:34:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17347:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"RevertStatement","src":"17340:43:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"17408:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2761,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17422:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17408:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2767,"nodeType":"IfStatement","src":"17404:92:19","trueBody":{"id":2766,"nodeType":"Block","src":"17432:64:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2763,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"17453:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17453:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"RevertStatement","src":"17446:39:19"}]}},{"expression":{"arguments":[{"id":2769,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17535:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2770,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"17557:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2771,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"17581:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2772,"name":"notify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"17602:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2773,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"17622:24:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2768,"name":"_revokeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"17506:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17506:150:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2775,"nodeType":"ExpressionStatement","src":"17506:150:19"},{"condition":{"id":2776,"name":"notify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"17671:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2793,"nodeType":"IfStatement","src":"17667:274:19","trueBody":{"id":2792,"nodeType":"Block","src":"17679:262:19","statements":[{"assignments":[2778],"declarations":[{"constant":false,"id":2778,"mutability":"mutable","name":"lsp1Data","nameLocation":"17706:8:19","nodeType":"VariableDeclaration","scope":2792,"src":"17693:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2777,"name":"bytes","nodeType":"ElementaryTypeName","src":"17693:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2786,"initialValue":{"arguments":[{"id":2781,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"17745:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2782,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"17773:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17798:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":2784,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"17837:24:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2779,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17717:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17721:6:19","memberName":"encode","nodeType":"MemberAccess","src":"17717:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17717:158:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17693:182:19"},{"expression":{"arguments":[{"id":2788,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17911:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2789,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"17921:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2787,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"17890:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17890:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2791,"nodeType":"ExpressionStatement","src":"17890:40:19"}]}}]},"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"16723:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"db8c9663","id":2795,"implemented":true,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"16797:14:19","nodeType":"FunctionDefinition","overrides":{"id":2722,"nodeType":"OverrideSpecifier","overrides":[],"src":"16952:8:19"},"parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"operator","nameLocation":"16829:8:19","nodeType":"VariableDeclaration","scope":2795,"src":"16821:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2713,"name":"address","nodeType":"ElementaryTypeName","src":"16821:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"tokenId","nameLocation":"16855:7:19","nodeType":"VariableDeclaration","scope":2795,"src":"16847:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16847:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"notify","nameLocation":"16877:6:19","nodeType":"VariableDeclaration","scope":2795,"src":"16872:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2717,"name":"bool","nodeType":"ElementaryTypeName","src":"16872:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2720,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"16906:24:19","nodeType":"VariableDeclaration","scope":2795,"src":"16893:37:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2719,"name":"bytes","nodeType":"ElementaryTypeName","src":"16893:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16811:125:19"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[],"src":"16961:0:19"},"scope":3612,"src":"16788:1159:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1788],"body":{"id":2811,"nodeType":"Block","src":"18142:61:19","statements":[{"expression":{"arguments":[{"id":2807,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"18178:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2808,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"18188:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2806,"name":"_isOperatorOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"18159:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32) view returns (bool)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18159:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2805,"id":2810,"nodeType":"Return","src":"18152:44:19"}]},"documentation":{"id":2796,"nodeType":"StructuredDocumentation","src":"17953:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"2a3654a4","id":2812,"implemented":true,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"18027:13:19","nodeType":"FunctionDefinition","overrides":{"id":2802,"nodeType":"OverrideSpecifier","overrides":[],"src":"18118:8:19"},"parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"operator","nameLocation":"18058:8:19","nodeType":"VariableDeclaration","scope":2812,"src":"18050:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2797,"name":"address","nodeType":"ElementaryTypeName","src":"18050:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2800,"mutability":"mutable","name":"tokenId","nameLocation":"18084:7:19","nodeType":"VariableDeclaration","scope":2812,"src":"18076:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18076:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18040:57:19"},"returnParameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2812,"src":"18136:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2803,"name":"bool","nodeType":"ElementaryTypeName","src":"18136:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18135:6:19"},"scope":3612,"src":"18018:185:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1797],"body":{"id":2832,"nodeType":"Block","src":"18385:86:19","statements":[{"expression":{"arguments":[{"id":2823,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"18410:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2822,"name":"_existsOrError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"18395:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2825,"nodeType":"ExpressionStatement","src":"18395:23:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2826,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"18436:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4311_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":2828,"indexExpression":{"id":2827,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"18447:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18436:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18456:6:19","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":4464,"src":"18436:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4311_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$4311_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18436:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2821,"id":2831,"nodeType":"Return","src":"18429:35:19"}]},"documentation":{"id":2813,"nodeType":"StructuredDocumentation","src":"18209:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"49a6078d","id":2833,"implemented":true,"kind":"function","modifiers":[],"name":"getOperatorsOf","nameLocation":"18283:14:19","nodeType":"FunctionDefinition","overrides":{"id":2817,"nodeType":"OverrideSpecifier","overrides":[],"src":"18349:8:19"},"parameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"tokenId","nameLocation":"18315:7:19","nodeType":"VariableDeclaration","scope":2833,"src":"18307:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18307:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18297:31:19"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2833,"src":"18367:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"18367:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2819,"nodeType":"ArrayTypeName","src":"18367:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"18366:18:19"},"scope":3612,"src":"18274:197:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2857,"nodeType":"Block","src":"18749:109:19","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2843,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"18767:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2845,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"18790:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2844,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"18777:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18767:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2852,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"18843:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2848,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"18814:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4311_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":2850,"indexExpression":{"id":2849,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"18825:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18814:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18834:8:19","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":4392,"src":"18814:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4311_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$4311_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18814:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18767:83:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18766:85:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2842,"id":2856,"nodeType":"Return","src":"18759:92:19"}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"18477:147:19","text":" @dev verifies if the `caller` is operator or owner for the `tokenId`\n @return true if `caller` is either operator or owner"},"id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"_isOperatorOrOwner","nameLocation":"18638:18:19","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"caller","nameLocation":"18674:6:19","nodeType":"VariableDeclaration","scope":2858,"src":"18666:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2835,"name":"address","nodeType":"ElementaryTypeName","src":"18666:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"tokenId","nameLocation":"18698:7:19","nodeType":"VariableDeclaration","scope":2858,"src":"18690:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18690:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18656:55:19"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2858,"src":"18743:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2840,"name":"bool","nodeType":"ElementaryTypeName","src":"18743:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18742:6:19"},"scope":3612,"src":"18629:229:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1811],"body":{"id":2895,"nodeType":"Block","src":"19126:187:19","statements":[{"condition":{"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19140:40:19","subExpression":{"arguments":[{"expression":{"id":2874,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19160:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19164:6:19","memberName":"sender","nodeType":"MemberAccess","src":"19160:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2876,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"19172:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2873,"name":"_isOperatorOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"19141:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32) view returns (bool)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19141:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2886,"nodeType":"IfStatement","src":"19136:119:19","trueBody":{"id":2885,"nodeType":"Block","src":"19182:73:19","statements":[{"errorCall":{"arguments":[{"id":2880,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"19224:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2881,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19233:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19237:6:19","memberName":"sender","nodeType":"MemberAccess","src":"19233:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2879,"name":"LSP8NotTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"19203:20:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19203:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2884,"nodeType":"RevertStatement","src":"19196:48:19"}]}},{"expression":{"arguments":[{"id":2888,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"19275:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"19281:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"19285:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2891,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"19294:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2892,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"19301:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2887,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"19265:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19265:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2894,"nodeType":"ExpressionStatement","src":"19265:41:19"}]},"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"18899:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"511b6952","id":2896,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"18973:8:19","nodeType":"FunctionDefinition","overrides":{"id":2871,"nodeType":"OverrideSpecifier","overrides":[],"src":"19117:8:19"},"parameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"from","nameLocation":"18999:4:19","nodeType":"VariableDeclaration","scope":2896,"src":"18991:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"18991:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2863,"mutability":"mutable","name":"to","nameLocation":"19021:2:19","nodeType":"VariableDeclaration","scope":2896,"src":"19013:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"19013:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2865,"mutability":"mutable","name":"tokenId","nameLocation":"19041:7:19","nodeType":"VariableDeclaration","scope":2896,"src":"19033:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19033:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2867,"mutability":"mutable","name":"force","nameLocation":"19063:5:19","nodeType":"VariableDeclaration","scope":2896,"src":"19058:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2866,"name":"bool","nodeType":"ElementaryTypeName","src":"19058:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2869,"mutability":"mutable","name":"data","nameLocation":"19091:4:19","nodeType":"VariableDeclaration","scope":2896,"src":"19078:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2868,"name":"bytes","nodeType":"ElementaryTypeName","src":"19078:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18981:120:19"},"returnParameters":{"id":2872,"nodeType":"ParameterList","parameters":[],"src":"19126:0:19"},"scope":3612,"src":"18964:349:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1830],"body":{"id":2975,"nodeType":"Block","src":"19589:478:19","statements":[{"assignments":[2917],"declarations":[{"constant":false,"id":2917,"mutability":"mutable","name":"fromLength","nameLocation":"19607:10:19","nodeType":"VariableDeclaration","scope":2975,"src":"19599:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"19599:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2920,"initialValue":{"expression":{"id":2918,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"19620:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19625:6:19","memberName":"length","nodeType":"MemberAccess","src":"19620:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19599:32:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"19658:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2922,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"19672:2:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19675:6:19","memberName":"length","nodeType":"MemberAccess","src":"19672:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19658:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"19697:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2926,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"19711:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19719:6:19","memberName":"length","nodeType":"MemberAccess","src":"19711:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19697:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19658:67:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2930,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"19741:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2931,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"19755:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19761:6:19","memberName":"length","nodeType":"MemberAccess","src":"19755:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19741:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19658:109:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2935,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"19783:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2936,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"19797:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19802:6:19","memberName":"length","nodeType":"MemberAccess","src":"19797:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19783:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19658:150:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2944,"nodeType":"IfStatement","src":"19641:236:19","trueBody":{"id":2943,"nodeType":"Block","src":"19819:58:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2940,"name":"LSP8InvalidTransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"19840:24:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19840:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2942,"nodeType":"RevertStatement","src":"19833:33:19"}]}},{"body":{"id":2973,"nodeType":"Block","src":"19921:140:19","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2952,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"19944:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2954,"indexExpression":{"id":2953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"19949:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19944:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2955,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"19953:2:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2957,"indexExpression":{"id":2956,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"19956:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19953:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2958,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"19960:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2960,"indexExpression":{"id":2959,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"19968:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19960:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2961,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"19972:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2963,"indexExpression":{"id":2962,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"19978:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19972:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"baseExpression":{"id":2964,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"19982:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2966,"indexExpression":{"id":2965,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"19987:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19982:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2951,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"19935:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19935:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2968,"nodeType":"ExpressionStatement","src":"19935:55:19"},{"id":2972,"nodeType":"UncheckedBlock","src":"20005:46:19","statements":[{"expression":{"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20033:3:19","subExpression":{"id":2969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"20035:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2971,"nodeType":"ExpressionStatement","src":"20033:3:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"19903:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2949,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"19907:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19903:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"initializationExpression":{"assignments":[2946],"declarations":[{"constant":false,"id":2946,"mutability":"mutable","name":"i","nameLocation":"19900:1:19","nodeType":"VariableDeclaration","scope":2974,"src":"19892:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"19892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2947,"nodeType":"VariableDeclarationStatement","src":"19892:9:19"},"nodeType":"ForStatement","src":"19887:174:19"}]},"documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"19319:60:19","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"7e87632c","id":2976,"implemented":true,"kind":"function","modifiers":[],"name":"transferBatch","nameLocation":"19393:13:19","nodeType":"FunctionDefinition","overrides":{"id":2914,"nodeType":"OverrideSpecifier","overrides":[],"src":"19580:8:19"},"parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"from","nameLocation":"19433:4:19","nodeType":"VariableDeclaration","scope":2976,"src":"19416:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"19416:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2899,"nodeType":"ArrayTypeName","src":"19416:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"to","nameLocation":"19464:2:19","nodeType":"VariableDeclaration","scope":2976,"src":"19447:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2901,"name":"address","nodeType":"ElementaryTypeName","src":"19447:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2902,"nodeType":"ArrayTypeName","src":"19447:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"tokenId","nameLocation":"19493:7:19","nodeType":"VariableDeclaration","scope":2976,"src":"19476:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19476:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2905,"nodeType":"ArrayTypeName","src":"19476:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"force","nameLocation":"19524:5:19","nodeType":"VariableDeclaration","scope":2976,"src":"19510:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2907,"name":"bool","nodeType":"ElementaryTypeName","src":"19510:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2908,"nodeType":"ArrayTypeName","src":"19510:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"data","nameLocation":"19554:4:19","nodeType":"VariableDeclaration","scope":2976,"src":"19539:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2910,"name":"bytes","nodeType":"ElementaryTypeName","src":"19539:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2911,"nodeType":"ArrayTypeName","src":"19539:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"19406:158:19"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[],"src":"19589:0:19"},"scope":3612,"src":"19384:683:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3015,"nodeType":"Block","src":"20362:313:19","statements":[{"assignments":[2991],"declarations":[{"constant":false,"id":2991,"mutability":"mutable","name":"isRemoved","nameLocation":"20377:9:19","nodeType":"VariableDeclaration","scope":3015,"src":"20372:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2990,"name":"bool","nodeType":"ElementaryTypeName","src":"20372:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2998,"initialValue":{"arguments":[{"id":2996,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"20416:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2992,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"20389:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4311_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":2994,"indexExpression":{"id":2993,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"20400:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20389:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20409:6:19","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":4365,"src":"20389:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$4311_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$4311_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20389:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"20372:53:19"},{"condition":{"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20439:10:19","subExpression":{"id":2999,"name":"isRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"20440:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3006,"nodeType":"IfStatement","src":"20435:65:19","trueBody":{"errorCall":{"arguments":[{"id":3002,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"20482:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3003,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"20492:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3001,"name":"LSP8NonExistingOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"20458:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20458:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3005,"nodeType":"RevertStatement","src":"20451:49:19"}},{"eventCall":{"arguments":[{"id":3008,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"20545:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3009,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"20567:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3010,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"20591:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3011,"name":"notified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"20612:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3012,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"20634:24:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3007,"name":"OperatorRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"20516:15:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20516:152:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3014,"nodeType":"EmitStatement","src":"20511:157:19"}]},"documentation":{"id":2977,"nodeType":"StructuredDocumentation","src":"20073:87:19","text":" @dev removes `operator` from the list of operators for the `tokenId`"},"id":3016,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeOperator","nameLocation":"20174:15:19","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"operator","nameLocation":"20207:8:19","nodeType":"VariableDeclaration","scope":3016,"src":"20199:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2978,"name":"address","nodeType":"ElementaryTypeName","src":"20199:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"tokenOwner","nameLocation":"20233:10:19","nodeType":"VariableDeclaration","scope":3016,"src":"20225:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2980,"name":"address","nodeType":"ElementaryTypeName","src":"20225:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2983,"mutability":"mutable","name":"tokenId","nameLocation":"20261:7:19","nodeType":"VariableDeclaration","scope":3016,"src":"20253:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20253:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"notified","nameLocation":"20283:8:19","nodeType":"VariableDeclaration","scope":3016,"src":"20278:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2984,"name":"bool","nodeType":"ElementaryTypeName","src":"20278:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2987,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"20314:24:19","nodeType":"VariableDeclaration","scope":3016,"src":"20301:37:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2986,"name":"bytes","nodeType":"ElementaryTypeName","src":"20301:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20189:155:19"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[],"src":"20362:0:19"},"scope":3612,"src":"20165:510:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3069,"nodeType":"Block","src":"21057:929:19","statements":[{"assignments":[3028],"declarations":[{"constant":false,"id":3028,"mutability":"mutable","name":"operatorsForTokenId","nameLocation":"21511:19:19","nodeType":"VariableDeclaration","scope":3069,"src":"21478:52:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3027,"nodeType":"UserDefinedTypeName","pathNode":{"id":3026,"name":"EnumerableSet.AddressSet","nameLocations":["21478:13:19","21492:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"21478:24:19"},"referencedDeclaration":4311,"src":"21478:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"id":3032,"initialValue":{"baseExpression":{"id":3029,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"21533:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4311_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":3031,"indexExpression":{"id":3030,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"21557:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21533:41:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21478:96:19"},{"assignments":[3034],"declarations":[{"constant":false,"id":3034,"mutability":"mutable","name":"operatorListLength","nameLocation":"21593:18:19","nodeType":"VariableDeclaration","scope":3069,"src":"21585:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"21585:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3038,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3035,"name":"operatorsForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"21614:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21634:6:19","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4407,"src":"21614:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$4311_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21614:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21585:57:19"},{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"operator","nameLocation":"21660:8:19","nodeType":"VariableDeclaration","scope":3069,"src":"21652:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3039,"name":"address","nodeType":"ElementaryTypeName","src":"21652:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3041,"nodeType":"VariableDeclarationStatement","src":"21652:16:19"},{"body":{"id":3067,"nodeType":"Block","src":"21720:260:19","statements":[{"expression":{"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3048,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"21802:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3049,"name":"operatorsForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"21813:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21833:2:19","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":4434,"src":"21813:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4311_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$4311_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21813:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21802:36:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3054,"nodeType":"ExpressionStatement","src":"21802:36:19"},{"expression":{"arguments":[{"id":3056,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"21868:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3057,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"21878:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3058,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"21890:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21899:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21906:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3055,"name":"_revokeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"21852:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21852:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3062,"nodeType":"ExpressionStatement","src":"21852:57:19"},{"id":3066,"nodeType":"UncheckedBlock","src":"21924:46:19","statements":[{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"21952:3:19","subExpression":{"id":3063,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"21954:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"21952:3:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3045,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"21694:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3046,"name":"operatorListLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"21698:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21694:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3068,"initializationExpression":{"assignments":[3043],"declarations":[{"constant":false,"id":3043,"mutability":"mutable","name":"i","nameLocation":"21691:1:19","nodeType":"VariableDeclaration","scope":3068,"src":"21683:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"21683:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3044,"nodeType":"VariableDeclarationStatement","src":"21683:9:19"},"nodeType":"ForStatement","src":"21678:302:19"}]},"documentation":{"id":3017,"nodeType":"StructuredDocumentation","src":"20681:270:19","text":" @dev revoke all the current operators for a specific `tokenId` token which belongs to `tokenOwner`.\n @param tokenOwner The address that is the owner of the `tokenId`.\n @param tokenId The token to remove the associated operators for."},"id":3070,"implemented":true,"kind":"function","modifiers":[],"name":"_clearOperators","nameLocation":"20965:15:19","nodeType":"FunctionDefinition","parameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"tokenOwner","nameLocation":"20998:10:19","nodeType":"VariableDeclaration","scope":3070,"src":"20990:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3018,"name":"address","nodeType":"ElementaryTypeName","src":"20990:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"tokenId","nameLocation":"21026:7:19","nodeType":"VariableDeclaration","scope":3070,"src":"21018:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21018:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20980:59:19"},"returnParameters":{"id":3023,"nodeType":"ParameterList","parameters":[],"src":"21057:0:19"},"scope":3612,"src":"20956:1030:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3087,"nodeType":"Block","src":"22243:59:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3078,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"22260:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3080,"indexExpression":{"id":3079,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"22273:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22260:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22293:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3081,"name":"address","nodeType":"ElementaryTypeName","src":"22285:7:19","typeDescriptions":{}}},"id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22285:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22260:35:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3077,"id":3086,"nodeType":"Return","src":"22253:42:19"}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"21992:175:19","text":" @dev Returns whether `tokenId` exists.\n Tokens start existing when they are minted ({_mint}), and stop existing when they are burned ({_burn})."},"id":3088,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"22181:7:19","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"tokenId","nameLocation":"22197:7:19","nodeType":"VariableDeclaration","scope":3088,"src":"22189:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22189:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22188:17:19"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3088,"src":"22237:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3075,"name":"bool","nodeType":"ElementaryTypeName","src":"22237:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22236:6:19"},"scope":3612,"src":"22172:130:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3104,"nodeType":"Block","src":"22456:102:19","statements":[{"condition":{"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22470:17:19","subExpression":{"arguments":[{"id":3095,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"22479:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3094,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"22471:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22471:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3103,"nodeType":"IfStatement","src":"22466:86:19","trueBody":{"id":3102,"nodeType":"Block","src":"22489:63:19","statements":[{"errorCall":{"arguments":[{"id":3099,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"22533:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3098,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"22510:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22510:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3101,"nodeType":"RevertStatement","src":"22503:38:19"}]}}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"22308:80:19","text":" @dev When `tokenId` does not exist then revert with an error."},"id":3105,"implemented":true,"kind":"function","modifiers":[],"name":"_existsOrError","nameLocation":"22402:14:19","nodeType":"FunctionDefinition","parameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"tokenId","nameLocation":"22425:7:19","nodeType":"VariableDeclaration","scope":3105,"src":"22417:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22417:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22416:17:19"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[],"src":"22456:0:19"},"scope":3612,"src":"22393:165:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3218,"nodeType":"Block","src":"23712:987:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"23726:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23740:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23732:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3118,"name":"address","nodeType":"ElementaryTypeName","src":"23732:7:19","typeDescriptions":{}}},"id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23732:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23726:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3127,"nodeType":"IfStatement","src":"23722:83:19","trueBody":{"id":3126,"nodeType":"Block","src":"23744:61:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3123,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"23765:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23765:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3125,"nodeType":"RevertStatement","src":"23758:36:19"}]}},{"condition":{"arguments":[{"id":3129,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"23881:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3128,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"23873:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23873:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3136,"nodeType":"IfStatement","src":"23869:87:19","trueBody":{"id":3135,"nodeType":"Block","src":"23891:65:19","statements":[{"errorCall":{"arguments":[{"id":3132,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"23937:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3131,"name":"LSP8TokenIdAlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"23912:24:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23912:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3134,"nodeType":"RevertStatement","src":"23905:40:19"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23995:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23987:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3138,"name":"address","nodeType":"ElementaryTypeName","src":"23987:7:19","typeDescriptions":{}}},"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23987:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3142,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"23999:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3143,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"24003:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3144,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"24012:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3145,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"24019:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3137,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"23966:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23966:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3147,"nodeType":"ExpressionStatement","src":"23966:58:19"},{"condition":{"arguments":[{"id":3149,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"24133:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3148,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"24125:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24125:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3156,"nodeType":"IfStatement","src":"24121:87:19","trueBody":{"id":3155,"nodeType":"Block","src":"24143:65:19","statements":[{"errorCall":{"arguments":[{"id":3152,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"24189:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3151,"name":"LSP8TokenIdAlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"24164:24:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24164:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3154,"nodeType":"RevertStatement","src":"24157:40:19"}]}},{"expression":{"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"24248:17:19","subExpression":{"id":3157,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"24250:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3159,"nodeType":"ExpressionStatement","src":"24248:17:19"},{"expression":{"arguments":[{"id":3164,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"24297:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3160,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"24276:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4190_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3162,"indexExpression":{"id":3161,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"24289:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24276:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24293:3:19","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4208,"src":"24276:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4190_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$4190_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24276:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3166,"nodeType":"ExpressionStatement","src":"24276:29:19"},{"expression":{"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3167,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"24315:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3169,"indexExpression":{"id":3168,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"24328:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24315:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3170,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"24339:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24315:26:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3172,"nodeType":"ExpressionStatement","src":"24315:26:19"},{"eventCall":{"arguments":[{"expression":{"id":3174,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24366:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24370:6:19","memberName":"sender","nodeType":"MemberAccess","src":"24366:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24386:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24378:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3176,"name":"address","nodeType":"ElementaryTypeName","src":"24378:7:19","typeDescriptions":{}}},"id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24378:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3180,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"24390:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3181,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"24394:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3182,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"24403:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3183,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"24410:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3173,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"24357:8:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24357:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3185,"nodeType":"EmitStatement","src":"24352:63:19"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24454:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24446:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"24446:7:19","typeDescriptions":{}}},"id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24446:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3191,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"24458:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3192,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"24462:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3193,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"24471:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3194,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"24478:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3186,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"24426:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24426:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3196,"nodeType":"ExpressionStatement","src":"24426:57:19"},{"assignments":[3198],"declarations":[{"constant":false,"id":3198,"mutability":"mutable","name":"lsp1Data","nameLocation":"24507:8:19","nodeType":"VariableDeclaration","scope":3218,"src":"24494:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3197,"name":"bytes","nodeType":"ElementaryTypeName","src":"24494:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3211,"initialValue":{"arguments":[{"expression":{"id":3201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24542:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24546:6:19","memberName":"sender","nodeType":"MemberAccess","src":"24542:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24574:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24566:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"24566:7:19","typeDescriptions":{}}},"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24566:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3207,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"24590:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3208,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"24606:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3209,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"24627:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3199,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24518:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24522:6:19","memberName":"encode","nodeType":"MemberAccess","src":"24518:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24518:123:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"24494:147:19"},{"expression":{"arguments":[{"id":3213,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"24672:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3214,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"24676:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3215,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"24683:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3212,"name":"_notifyTokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"24651:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bool,bytes memory)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24651:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3217,"nodeType":"ExpressionStatement","src":"24651:41:19"}]},"documentation":{"id":3106,"nodeType":"StructuredDocumentation","src":"22564:1013:19","text":" @dev Create `tokenId` by minting it and transfers it to `to`.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the recipient via LSP1**.\n @param to The address that will receive the minted `tokenId`.\n @param tokenId The token ID to create (= mint).\n @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hook of the `to` address.\n @custom:requirements\n - `tokenId` must not exist and not have been already minted.\n - `to` cannot be the zero address.\n @custom:events {Transfer} event with `address(0)` as `from` address."},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"23591:5:19","nodeType":"FunctionDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"to","nameLocation":"23614:2:19","nodeType":"VariableDeclaration","scope":3219,"src":"23606:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3107,"name":"address","nodeType":"ElementaryTypeName","src":"23606:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"tokenId","nameLocation":"23634:7:19","nodeType":"VariableDeclaration","scope":3219,"src":"23626:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23626:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"force","nameLocation":"23656:5:19","nodeType":"VariableDeclaration","scope":3219,"src":"23651:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3111,"name":"bool","nodeType":"ElementaryTypeName","src":"23651:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3114,"mutability":"mutable","name":"data","nameLocation":"23684:4:19","nodeType":"VariableDeclaration","scope":3219,"src":"23671:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3113,"name":"bytes","nodeType":"ElementaryTypeName","src":"23671:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"23596:98:19"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[],"src":"23712:0:19"},"scope":3612,"src":"23582:1117:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3314,"nodeType":"Block","src":"26123:878:19","statements":[{"assignments":[3228],"declarations":[{"constant":false,"id":3228,"mutability":"mutable","name":"tokenOwner","nameLocation":"26141:10:19","nodeType":"VariableDeclaration","scope":3314,"src":"26133:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3227,"name":"address","nodeType":"ElementaryTypeName","src":"26133:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3232,"initialValue":{"arguments":[{"id":3230,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"26167:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3229,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"26154:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26154:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"26133:42:19"},{"expression":{"arguments":[{"id":3234,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"26207:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26227:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26219:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3235,"name":"address","nodeType":"ElementaryTypeName","src":"26219:7:19","typeDescriptions":{}}},"id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26219:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3239,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"26231:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26240:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3241,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"26247:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3233,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"26186:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26186:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3243,"nodeType":"ExpressionStatement","src":"26186:66:19"},{"expression":{"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3244,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"26391:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3246,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"26417:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3245,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"26404:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26404:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26391:34:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3249,"nodeType":"ExpressionStatement","src":"26391:34:19"},{"expression":{"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"26466:17:19","subExpression":{"id":3250,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"26468:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3252,"nodeType":"ExpressionStatement","src":"26466:17:19"},{"expression":{"arguments":[{"id":3254,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"26510:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3255,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"26522:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3253,"name":"_clearOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"26494:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26494:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3257,"nodeType":"ExpressionStatement","src":"26494:36:19"},{"expression":{"arguments":[{"id":3262,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"26573:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3258,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"26541:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4190_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3260,"indexExpression":{"id":3259,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"26554:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26541:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26566:6:19","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":4226,"src":"26541:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4190_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$4190_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26541:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3264,"nodeType":"ExpressionStatement","src":"26541:40:19"},{"expression":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"26591:28:19","subExpression":{"baseExpression":{"id":3265,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"26598:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3267,"indexExpression":{"id":3266,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"26611:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26598:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3269,"nodeType":"ExpressionStatement","src":"26591:28:19"},{"eventCall":{"arguments":[{"expression":{"id":3271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26644:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:19","memberName":"sender","nodeType":"MemberAccess","src":"26644:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3273,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"26656:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26676:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26668:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3274,"name":"address","nodeType":"ElementaryTypeName","src":"26668:7:19","typeDescriptions":{}}},"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26668:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3278,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"26680:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26689:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3280,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"26696:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3270,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"26635:8:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26635:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3282,"nodeType":"EmitStatement","src":"26630:71:19"},{"expression":{"arguments":[{"id":3284,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"26732:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26752:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26744:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3285,"name":"address","nodeType":"ElementaryTypeName","src":"26744:7:19","typeDescriptions":{}}},"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26744:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3289,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"26756:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26765:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3291,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"26772:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3283,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"26712:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26712:65:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3293,"nodeType":"ExpressionStatement","src":"26712:65:19"},{"assignments":[3295],"declarations":[{"constant":false,"id":3295,"mutability":"mutable","name":"lsp1Data","nameLocation":"26801:8:19","nodeType":"VariableDeclaration","scope":3314,"src":"26788:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3294,"name":"bytes","nodeType":"ElementaryTypeName","src":"26788:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3308,"initialValue":{"arguments":[{"expression":{"id":3298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26836:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26840:6:19","memberName":"sender","nodeType":"MemberAccess","src":"26836:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3300,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"26860:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26892:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26884:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3301,"name":"address","nodeType":"ElementaryTypeName","src":"26884:7:19","typeDescriptions":{}}},"id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26884:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3305,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"26908:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3306,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"26929:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3296,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26812:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26816:6:19","memberName":"encode","nodeType":"MemberAccess","src":"26812:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26812:131:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"26788:155:19"},{"expression":{"arguments":[{"id":3310,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"26973:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3311,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"26985:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3309,"name":"_notifyTokenSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"26954:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26954:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3313,"nodeType":"ExpressionStatement","src":"26954:40:19"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"24705:1345:19","text":" @dev Burn a specific `tokenId`, removing the `tokenId` from the {tokenIdsOf} the caller and decreasing its {balanceOf} by -1.\n This will also clear all the operators allowed to transfer the `tokenId`.\n The owner of the `tokenId` will be notified about the `tokenId` being transferred through its LSP1 {universalReceiver}\n function, if it is a contract that supports the LSP1 interface. Its {universalReceiver} function will receive\n all the parameters in the calldata packed encoded.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender via LSP1**.\n @param tokenId The token to burn.\n @param data Any additional data the caller wants included in the emitted event, and sent in the LSP1 hook on the token owner's address.\n @custom:hint In dApps, you can know which addresses are burning tokens by listening for the `Transfer` event and filter with the zero address as `to`.\n @custom:requirements\n - `tokenId` must exist.\n @custom:events {Transfer} event with `address(0)` as the `to` address."},"id":3315,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"26064:5:19","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"tokenId","nameLocation":"26078:7:19","nodeType":"VariableDeclaration","scope":3315,"src":"26070:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26070:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"data","nameLocation":"26100:4:19","nodeType":"VariableDeclaration","scope":3315,"src":"26087:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3223,"name":"bytes","nodeType":"ElementaryTypeName","src":"26087:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26069:36:19"},"returnParameters":{"id":3226,"nodeType":"ParameterList","parameters":[],"src":"26123:0:19"},"scope":3612,"src":"26055:946:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3448,"nodeType":"Block","src":"28588:1149:19","statements":[{"assignments":[3330],"declarations":[{"constant":false,"id":3330,"mutability":"mutable","name":"tokenOwner","nameLocation":"28606:10:19","nodeType":"VariableDeclaration","scope":3448,"src":"28598:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3329,"name":"address","nodeType":"ElementaryTypeName","src":"28598:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3334,"initialValue":{"arguments":[{"id":3332,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"28632:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3331,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"28619:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28619:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"28598:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3335,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"28654:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3336,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"28668:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28654:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3345,"nodeType":"IfStatement","src":"28650:100:19","trueBody":{"id":3344,"nodeType":"Block","src":"28674:76:19","statements":[{"errorCall":{"arguments":[{"id":3339,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"28713:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3340,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"28725:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3341,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"28734:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3338,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"28695:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) pure"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28695:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3343,"nodeType":"RevertStatement","src":"28688:51:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"28764:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28778:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28770:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3347,"name":"address","nodeType":"ElementaryTypeName","src":"28770:7:19","typeDescriptions":{}}},"id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28770:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28764:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3356,"nodeType":"IfStatement","src":"28760:83:19","trueBody":{"id":3355,"nodeType":"Block","src":"28782:61:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3352,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"28803:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28803:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3354,"nodeType":"RevertStatement","src":"28796:36:19"}]}},{"expression":{"arguments":[{"id":3358,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"28874:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"28880:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"28884:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3361,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"28893:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3362,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"28900:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3357,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"28853:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28853:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3364,"nodeType":"ExpressionStatement","src":"28853:52:19"},{"assignments":[3366],"declarations":[{"constant":false,"id":3366,"mutability":"mutable","name":"currentTokenOwner","nameLocation":"29019:17:19","nodeType":"VariableDeclaration","scope":3448,"src":"29011:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3365,"name":"address","nodeType":"ElementaryTypeName","src":"29011:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3370,"initialValue":{"arguments":[{"id":3368,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"29052:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3367,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"29039:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29039:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"29011:49:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"29074:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3372,"name":"currentTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"29088:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29074:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3381,"nodeType":"IfStatement","src":"29070:192:19","trueBody":{"id":3380,"nodeType":"Block","src":"29107:155:19","statements":[{"errorCall":{"arguments":[{"id":3375,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"29167:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3376,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"29192:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3377,"name":"currentTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"29220:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3374,"name":"LSP8TokenOwnerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"29128:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address) pure"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29128:123:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3379,"nodeType":"RevertStatement","src":"29121:130:19"}]}},{"expression":{"arguments":[{"id":3383,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"29288:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3384,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"29294:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3382,"name":"_clearOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"29272:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29272:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3386,"nodeType":"ExpressionStatement","src":"29272:30:19"},{"expression":{"arguments":[{"id":3391,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"29339:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3387,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"29313:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4190_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3389,"indexExpression":{"id":3388,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"29326:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29313:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29332:6:19","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":4226,"src":"29313:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4190_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$4190_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29313:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3393,"nodeType":"ExpressionStatement","src":"29313:34:19"},{"expression":{"arguments":[{"id":3398,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"29378:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3394,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"29357:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4190_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3396,"indexExpression":{"id":3395,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"29370:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29357:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29374:3:19","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4208,"src":"29357:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4190_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$4190_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29357:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3400,"nodeType":"ExpressionStatement","src":"29357:29:19"},{"expression":{"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3401,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"29396:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3403,"indexExpression":{"id":3402,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"29409:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29396:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3404,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"29420:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29396:26:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3406,"nodeType":"ExpressionStatement","src":"29396:26:19"},{"eventCall":{"arguments":[{"expression":{"id":3408,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29447:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29451:6:19","memberName":"sender","nodeType":"MemberAccess","src":"29447:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3410,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"29459:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3411,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"29465:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3412,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"29469:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3413,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"29478:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3414,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"29485:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3407,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"29438:8:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29438:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3416,"nodeType":"EmitStatement","src":"29433:57:19"},{"expression":{"arguments":[{"id":3418,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"29521:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3419,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"29527:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3420,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"29531:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3421,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"29540:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3422,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"29547:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3417,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"29501:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29501:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3424,"nodeType":"ExpressionStatement","src":"29501:51:19"},{"assignments":[3426],"declarations":[{"constant":false,"id":3426,"mutability":"mutable","name":"lsp1Data","nameLocation":"29576:8:19","nodeType":"VariableDeclaration","scope":3448,"src":"29563:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3425,"name":"bytes","nodeType":"ElementaryTypeName","src":"29563:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3436,"initialValue":{"arguments":[{"expression":{"id":3429,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29598:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29602:6:19","memberName":"sender","nodeType":"MemberAccess","src":"29598:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3431,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"29610:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3432,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"29616:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3433,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"29620:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3434,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"29629:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3427,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"29587:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29591:6:19","memberName":"encode","nodeType":"MemberAccess","src":"29587:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29587:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"29563:71:19"},{"expression":{"arguments":[{"id":3438,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"29664:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3439,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"29670:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3437,"name":"_notifyTokenSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"29645:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29645:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3441,"nodeType":"ExpressionStatement","src":"29645:34:19"},{"expression":{"arguments":[{"id":3443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"29710:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3444,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"29714:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3445,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"29721:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3442,"name":"_notifyTokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"29689:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bool,bytes memory)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29689:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3447,"nodeType":"ExpressionStatement","src":"29689:41:19"}]},"documentation":{"id":3316,"nodeType":"StructuredDocumentation","src":"27007:1420:19","text":" @dev Change the owner of the `tokenId` from `from` to `to`.\n Both the sender and recipient will be notified of the `tokenId` being transferred through their LSP1 {universalReceiver}\n function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n all the parameters in the calldata packed encoded.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender/recipient via LSP1**.\n @param from The sender address.\n @param to The recipient address.\n @param tokenId The token to transfer.\n @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n @param data Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n @custom:requirements\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n @custom:events {Transfer} event.\n @custom:danger This internal function does not check if the sender is authorized or not to operate on the `tokenId`."},"id":3449,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"28441:9:19","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"from","nameLocation":"28468:4:19","nodeType":"VariableDeclaration","scope":3449,"src":"28460:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3317,"name":"address","nodeType":"ElementaryTypeName","src":"28460:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3320,"mutability":"mutable","name":"to","nameLocation":"28490:2:19","nodeType":"VariableDeclaration","scope":3449,"src":"28482:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3319,"name":"address","nodeType":"ElementaryTypeName","src":"28482:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"tokenId","nameLocation":"28510:7:19","nodeType":"VariableDeclaration","scope":3449,"src":"28502:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28502:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"force","nameLocation":"28532:5:19","nodeType":"VariableDeclaration","scope":3449,"src":"28527:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3323,"name":"bool","nodeType":"ElementaryTypeName","src":"28527:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"data","nameLocation":"28560:4:19","nodeType":"VariableDeclaration","scope":3449,"src":"28547:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3325,"name":"bytes","nodeType":"ElementaryTypeName","src":"28547:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"28450:120:19"},"returnParameters":{"id":3328,"nodeType":"ParameterList","parameters":[],"src":"28588:0:19"},"scope":3612,"src":"28432:1305:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3478,"nodeType":"Block","src":"30283:140:19","statements":[{"expression":{"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3459,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"30293:6:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":3468,"indexExpression":{"arguments":[{"arguments":[{"id":3464,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"30323:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3465,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"30332:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30310:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3461,"name":"bytes","nodeType":"ElementaryTypeName","src":"30310:5:19","typeDescriptions":{}}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30316:6:19","memberName":"concat","nodeType":"MemberAccess","src":"30310:12:19","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30310:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3460,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"30300:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30300:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"30293:49:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3469,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"30345:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"30293:61:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":3471,"nodeType":"ExpressionStatement","src":"30293:61:19"},{"eventCall":{"arguments":[{"id":3473,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"30388:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3474,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"30397:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3475,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"30406:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3472,"name":"TokenIdDataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"30369:18:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30369:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3477,"nodeType":"EmitStatement","src":"30364:52:19"}]},"documentation":{"id":3450,"nodeType":"StructuredDocumentation","src":"29743:402:19","text":" @dev Sets data for a specific `tokenId` and `dataKey` in the ERC725Y storage\n The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to set.\n @param dataValue The value to set for the given data key.\n @custom:events {TokenIdDataChanged} event."},"id":3479,"implemented":true,"kind":"function","modifiers":[],"name":"_setDataForTokenId","nameLocation":"30159:18:19","nodeType":"FunctionDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"tokenId","nameLocation":"30195:7:19","nodeType":"VariableDeclaration","scope":3479,"src":"30187:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30187:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"dataKey","nameLocation":"30220:7:19","nodeType":"VariableDeclaration","scope":3479,"src":"30212:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30212:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3456,"mutability":"mutable","name":"dataValue","nameLocation":"30250:9:19","nodeType":"VariableDeclaration","scope":3479,"src":"30237:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3455,"name":"bytes","nodeType":"ElementaryTypeName","src":"30237:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30177:88:19"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[],"src":"30283:0:19"},"scope":3612,"src":"30150:273:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3500,"nodeType":"Block","src":"30965:73:19","statements":[{"expression":{"baseExpression":{"id":3489,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"30982:6:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":3498,"indexExpression":{"arguments":[{"arguments":[{"id":3494,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"31012:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3495,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"31021:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30999:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3491,"name":"bytes","nodeType":"ElementaryTypeName","src":"30999:5:19","typeDescriptions":{}}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31005:6:19","memberName":"concat","nodeType":"MemberAccess","src":"30999:12:19","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30999:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3490,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"30989:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30989:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30982:49:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":3488,"id":3499,"nodeType":"Return","src":"30975:56:19"}]},"documentation":{"id":3480,"nodeType":"StructuredDocumentation","src":"30429:391:19","text":" @dev Retrieves data for a specific `tokenId` and `dataKey` from the ERC725Y storage\n The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to retrieve.\n @return dataValues The data value associated with the given `tokenId` and `dataKey`."},"id":3501,"implemented":true,"kind":"function","modifiers":[],"name":"_getDataForTokenId","nameLocation":"30834:18:19","nodeType":"FunctionDefinition","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"tokenId","nameLocation":"30870:7:19","nodeType":"VariableDeclaration","scope":3501,"src":"30862:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30862:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3484,"mutability":"mutable","name":"dataKey","nameLocation":"30895:7:19","nodeType":"VariableDeclaration","scope":3501,"src":"30887:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30887:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30852:56:19"},"returnParameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"dataValues","nameLocation":"30953:10:19","nodeType":"VariableDeclaration","scope":3501,"src":"30940:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3486,"name":"bytes","nodeType":"ElementaryTypeName","src":"30940:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30939:25:19"},"scope":3612,"src":"30825:213:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3515,"nodeType":"Block","src":"31787:2:19","statements":[]},"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"31044:526:19","text":" @dev Hook that is called before any token transfer, including minting and burning.\n Allows to run custom logic before updating balances and notifying sender/recipient by overriding this function.\n @param from The sender address\n @param to The recipient address\n @param tokenId The tokenId to transfer\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param data The data sent alongside the transfer"},"id":3516,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"31584:20:19","nodeType":"FunctionDefinition","parameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"from","nameLocation":"31622:4:19","nodeType":"VariableDeclaration","scope":3516,"src":"31614:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3503,"name":"address","nodeType":"ElementaryTypeName","src":"31614:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3506,"mutability":"mutable","name":"to","nameLocation":"31644:2:19","nodeType":"VariableDeclaration","scope":3516,"src":"31636:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3505,"name":"address","nodeType":"ElementaryTypeName","src":"31636:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3508,"mutability":"mutable","name":"tokenId","nameLocation":"31664:7:19","nodeType":"VariableDeclaration","scope":3516,"src":"31656:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31656:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3510,"mutability":"mutable","name":"force","nameLocation":"31686:5:19","nodeType":"VariableDeclaration","scope":3516,"src":"31681:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3509,"name":"bool","nodeType":"ElementaryTypeName","src":"31681:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"data","nameLocation":"31714:4:19","nodeType":"VariableDeclaration","scope":3516,"src":"31701:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3511,"name":"bytes","nodeType":"ElementaryTypeName","src":"31701:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31604:165:19"},"returnParameters":{"id":3514,"nodeType":"ParameterList","parameters":[],"src":"31787:0:19"},"scope":3612,"src":"31575:214:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3530,"nodeType":"Block","src":"32556:2:19","statements":[]},"documentation":{"id":3517,"nodeType":"StructuredDocumentation","src":"31795:545:19","text":" @dev Hook that is called after any token transfer, including minting and burning.\n Allows to run custom logic after updating balances, but **before notifying sender/recipient via LSP1** by overriding this function.\n @param from The sender address\n @param to The recipient address\n @param tokenId The tokenId to transfer\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param data The data sent alongside the transfer"},"id":3531,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"32354:19:19","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"from","nameLocation":"32391:4:19","nodeType":"VariableDeclaration","scope":3531,"src":"32383:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3518,"name":"address","nodeType":"ElementaryTypeName","src":"32383:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3521,"mutability":"mutable","name":"to","nameLocation":"32413:2:19","nodeType":"VariableDeclaration","scope":3531,"src":"32405:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"32405:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3523,"mutability":"mutable","name":"tokenId","nameLocation":"32433:7:19","nodeType":"VariableDeclaration","scope":3531,"src":"32425:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32425:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"force","nameLocation":"32455:5:19","nodeType":"VariableDeclaration","scope":3531,"src":"32450:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3524,"name":"bool","nodeType":"ElementaryTypeName","src":"32450:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"data","nameLocation":"32483:4:19","nodeType":"VariableDeclaration","scope":3531,"src":"32470:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3526,"name":"bytes","nodeType":"ElementaryTypeName","src":"32470:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32373:165:19"},"returnParameters":{"id":3529,"nodeType":"ParameterList","parameters":[],"src":"32556:0:19"},"scope":3612,"src":"32345:213:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3547,"nodeType":"Block","src":"33281:144:19","statements":[{"expression":{"arguments":[{"id":3542,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"33338:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3543,"name":"_TYPEID_LSP8_TOKENOPERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"33360:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3544,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"33400:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3539,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"33291:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP1Utils_$566_$","typeString":"type(library LSP1Utils)"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33301:23:19","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":522,"src":"33291:33:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33291:127:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3546,"nodeType":"ExpressionStatement","src":"33291:127:19"}]},"documentation":{"id":3532,"nodeType":"StructuredDocumentation","src":"32564:602:19","text":" @dev Attempt to notify the operator `operator` about the `tokenId` being authorized.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENOPERATOR` as typeId, if `operator` is a contract that supports the LSP1 interface.\n If `operator` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n @param operator The address to call the {universalReceiver} function on.\n @param lsp1Data the data to be sent to the `operator` address in the `universalReceiver` call."},"id":3548,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenOperator","nameLocation":"33180:20:19","nodeType":"FunctionDefinition","parameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"operator","nameLocation":"33218:8:19","nodeType":"VariableDeclaration","scope":3548,"src":"33210:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3533,"name":"address","nodeType":"ElementaryTypeName","src":"33210:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"lsp1Data","nameLocation":"33249:8:19","nodeType":"VariableDeclaration","scope":3548,"src":"33236:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3535,"name":"bytes","nodeType":"ElementaryTypeName","src":"33236:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33200:63:19"},"returnParameters":{"id":3538,"nodeType":"ParameterList","parameters":[],"src":"33281:0:19"},"scope":3612,"src":"33171:254:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3564,"nodeType":"Block","src":"34126:139:19","statements":[{"expression":{"arguments":[{"id":3559,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"34183:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3560,"name":"_TYPEID_LSP8_TOKENSSENDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"34201:25:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3561,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"34240:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3556,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"34136:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP1Utils_$566_$","typeString":"type(library LSP1Utils)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34146:23:19","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":522,"src":"34136:33:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34136:122:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3563,"nodeType":"ExpressionStatement","src":"34136:122:19"}]},"documentation":{"id":3549,"nodeType":"StructuredDocumentation","src":"33431:586:19","text":" @dev Attempt to notify the token sender `from` about the `tokenId` being transferred.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSSENDER` as typeId, if `from` is a contract that supports the LSP1 interface.\n If `from` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n @param from The address to call the {universalReceiver} function on.\n @param lsp1Data the data to be sent to the `from` address in the `universalReceiver` call."},"id":3565,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenSender","nameLocation":"34031:18:19","nodeType":"FunctionDefinition","parameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"from","nameLocation":"34067:4:19","nodeType":"VariableDeclaration","scope":3565,"src":"34059:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3550,"name":"address","nodeType":"ElementaryTypeName","src":"34059:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3553,"mutability":"mutable","name":"lsp1Data","nameLocation":"34094:8:19","nodeType":"VariableDeclaration","scope":3565,"src":"34081:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3552,"name":"bytes","nodeType":"ElementaryTypeName","src":"34081:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34049:59:19"},"returnParameters":{"id":3555,"nodeType":"ParameterList","parameters":[],"src":"34126:0:19"},"scope":3612,"src":"34022:243:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3610,"nodeType":"Block","src":"35279:491:19","statements":[{"condition":{"arguments":[{"id":3577,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"35370:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3578,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"35390:17:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3575,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"35306:13:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$3973_$","typeString":"type(library ERC165Checker)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35320:32:19","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":3972,"src":"35306:46:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35306:115:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"35534:6:19","subExpression":{"id":3589,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"35535:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3608,"nodeType":"IfStatement","src":"35530:234:19","trueBody":{"id":3607,"nodeType":"Block","src":"35542:222:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"35560:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35563:4:19","memberName":"code","nodeType":"MemberAccess","src":"35560:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35568:6:19","memberName":"length","nodeType":"MemberAccess","src":"35560:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35578:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35560:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3605,"nodeType":"Block","src":"35682:72:19","statements":[{"errorCall":{"arguments":[{"id":3602,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"35736:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3601,"name":"LSP8NotifyTokenReceiverIsEOA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"35707:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35707:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3604,"nodeType":"RevertStatement","src":"35700:39:19"}]},"id":3606,"nodeType":"IfStatement","src":"35556:198:19","trueBody":{"id":3600,"nodeType":"Block","src":"35581:95:19","statements":[{"errorCall":{"arguments":[{"id":3597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"35658:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3596,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"35606:51:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35606:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3599,"nodeType":"RevertStatement","src":"35599:62:19"}]}}]}},"id":3609,"nodeType":"IfStatement","src":"35289:475:19","trueBody":{"id":3588,"nodeType":"Block","src":"35432:92:19","statements":[{"expression":{"arguments":[{"id":3584,"name":"_TYPEID_LSP8_TOKENSRECIPIENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"35474:28:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3585,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"35504:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3581,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"35452:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3580,"name":"ILSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"35446:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$467_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35446:9:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiver_$467","typeString":"contract ILSP1UniversalReceiver"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35456:17:19","memberName":"universalReceiver","nodeType":"MemberAccess","referencedDeclaration":466,"src":"35446:27:19","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) payable external returns (bytes memory)"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35446:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3587,"nodeType":"ExpressionStatement","src":"35446:67:19"}]}}]},"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"34271:879:19","text":" @dev Attempt to notify the token receiver `to` about the `tokenId` being received.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSRECIPIENT` as typeId, if `to` is a contract that supports the LSP1 interface.\n If `to` is is an EOA or a contract that does not support the LSP1 interface, the behaviour will depend on the `force` boolean flag.\n - if `force` is set to `true`, nothing will happen and no notification will be sent.\n - if `force` is set to `false, the transaction will revert.\n @param to The address to call the {universalReceiver} function on.\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param lsp1Data The data to be sent to the `to` address in the `universalReceiver(...)` call."},"id":3611,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenReceiver","nameLocation":"35164:20:19","nodeType":"FunctionDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"to","nameLocation":"35202:2:19","nodeType":"VariableDeclaration","scope":3611,"src":"35194:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3567,"name":"address","nodeType":"ElementaryTypeName","src":"35194:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"force","nameLocation":"35219:5:19","nodeType":"VariableDeclaration","scope":3611,"src":"35214:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3569,"name":"bool","nodeType":"ElementaryTypeName","src":"35214:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"lsp1Data","nameLocation":"35247:8:19","nodeType":"VariableDeclaration","scope":3611,"src":"35234:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3571,"name":"bytes","nodeType":"ElementaryTypeName","src":"35234:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35184:77:19"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[],"src":"35279:0:19"},"scope":3612,"src":"35155:615:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3613,"src":"2621:33151:19","usedErrors":[330,333,336,339,584,589,594,1622,1625,1628,1907,1916,1923,1930,1933,1936,1943,1951,1956,1961,1964,1967,1970,1973,1976,1981,1990,1999]}],"src":"39:35734:19"},"id":19},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3755],"Ownable":[3725]},"id":3726,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3614,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:20"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3726,"sourceUnit":3756,"src":"127:30:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3617,"name":"Context","nameLocations":["683:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":3755,"src":"683:7:20"},"id":3618,"nodeType":"InheritanceSpecifier","src":"683:7:20"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3616,"nodeType":"StructuredDocumentation","src":"159:494:20","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":3725,"linearizedBaseContracts":[3725,3755],"name":"Ownable","nameLocation":"672:7:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3620,"mutability":"mutable","name":"_owner","nameLocation":"713:6:20","nodeType":"VariableDeclaration","scope":3725,"src":"697:22:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3619,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":3626,"name":"OwnershipTransferred","nameLocation":"732:20:20","nodeType":"EventDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:20","nodeType":"VariableDeclaration","scope":3626,"src":"753:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3624,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:20","nodeType":"VariableDeclaration","scope":3626,"src":"784:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3623,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:20"},"src":"726:84:20"},{"body":{"id":3635,"nodeType":"Block","src":"926:49:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3631,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"955:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3630,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"936:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3634,"nodeType":"ExpressionStatement","src":"936:32:20"}]},"documentation":{"id":3627,"nodeType":"StructuredDocumentation","src":"816:91:20","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":3636,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[],"src":"923:2:20"},"returnParameters":{"id":3629,"nodeType":"ParameterList","parameters":[],"src":"926:0:20"},"scope":3725,"src":"912:63:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3643,"nodeType":"Block","src":"1084:41:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3639,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"1094:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3641,"nodeType":"ExpressionStatement","src":"1094:13:20"},{"id":3642,"nodeType":"PlaceholderStatement","src":"1117:1:20"}]},"documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"981:77:20","text":" @dev Throws if called by any account other than the owner."},"id":3644,"name":"onlyOwner","nameLocation":"1072:9:20","nodeType":"ModifierDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[],"src":"1081:2:20"},"src":"1063:62:20","virtual":false,"visibility":"internal"},{"body":{"id":3652,"nodeType":"Block","src":"1256:30:20","statements":[{"expression":{"id":3650,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"1273:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3649,"id":3651,"nodeType":"Return","src":"1266:13:20"}]},"documentation":{"id":3645,"nodeType":"StructuredDocumentation","src":"1131:65:20","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":3653,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:20","nodeType":"FunctionDefinition","parameters":{"id":3646,"nodeType":"ParameterList","parameters":[],"src":"1215:2:20"},"returnParameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3653,"src":"1247:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3647,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:20"},"scope":3725,"src":"1201:85:20","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3666,"nodeType":"Block","src":"1404:85:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3658,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"1422:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3660,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"1433:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":3657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3665,"nodeType":"ExpressionStatement","src":"1414:68:20"}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"1292:62:20","text":" @dev Throws if the sender is not the owner."},"id":3667,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:20","nodeType":"FunctionDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[],"src":"1379:2:20"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[],"src":"1404:0:20"},"scope":3725,"src":"1359:130:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3680,"nodeType":"Block","src":"1878:47:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3674,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:20","typeDescriptions":{}}},"id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3673,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"1888:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3679,"nodeType":"ExpressionStatement","src":"1888:30:20"}]},"documentation":{"id":3668,"nodeType":"StructuredDocumentation","src":"1495:324:20","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":3681,"implemented":true,"kind":"function","modifiers":[{"id":3671,"kind":"modifierInvocation","modifierName":{"id":3670,"name":"onlyOwner","nameLocations":["1868:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":3644,"src":"1868:9:20"},"nodeType":"ModifierInvocation","src":"1868:9:20"}],"name":"renounceOwnership","nameLocation":"1833:17:20","nodeType":"FunctionDefinition","parameters":{"id":3669,"nodeType":"ParameterList","parameters":[],"src":"1850:2:20"},"returnParameters":{"id":3672,"nodeType":"ParameterList","parameters":[],"src":"1878:0:20"},"scope":3725,"src":"1824:101:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3703,"nodeType":"Block","src":"2144:128:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"2162:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3691,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:20","typeDescriptions":{}}},"id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":3689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3698,"nodeType":"ExpressionStatement","src":"2154:73:20"},{"expression":{"arguments":[{"id":3700,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"2256:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3699,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"2237:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3702,"nodeType":"ExpressionStatement","src":"2237:28:20"}]},"documentation":{"id":3682,"nodeType":"StructuredDocumentation","src":"1931:138:20","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":3704,"implemented":true,"kind":"function","modifiers":[{"id":3687,"kind":"modifierInvocation","modifierName":{"id":3686,"name":"onlyOwner","nameLocations":["2134:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":3644,"src":"2134:9:20"},"nodeType":"ModifierInvocation","src":"2134:9:20"}],"name":"transferOwnership","nameLocation":"2083:17:20","nodeType":"FunctionDefinition","parameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:20","nodeType":"VariableDeclaration","scope":3704,"src":"2101:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3683,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:20"},"returnParameters":{"id":3688,"nodeType":"ParameterList","parameters":[],"src":"2144:0:20"},"scope":3725,"src":"2074:198:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3723,"nodeType":"Block","src":"2489:124:20","statements":[{"assignments":[3711],"declarations":[{"constant":false,"id":3711,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:20","nodeType":"VariableDeclaration","scope":3723,"src":"2499:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3710,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3713,"initialValue":{"id":3712,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"2518:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:20"},{"expression":{"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3714,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"2534:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3715,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"2543:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3717,"nodeType":"ExpressionStatement","src":"2534:17:20"},{"eventCall":{"arguments":[{"id":3719,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"2587:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3720,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"2597:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3718,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"2566:20:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3722,"nodeType":"EmitStatement","src":"2561:45:20"}]},"documentation":{"id":3705,"nodeType":"StructuredDocumentation","src":"2278:143:20","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":3724,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:20","nodeType":"FunctionDefinition","parameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:20","nodeType":"VariableDeclaration","scope":3724,"src":"2454:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3706,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:20"},"returnParameters":{"id":3709,"nodeType":"ParameterList","parameters":[],"src":"2489:0:20"},"scope":3725,"src":"2426:187:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3726,"src":"654:1961:20","usedErrors":[]}],"src":"102:2514:20"},"id":20},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3755]},"id":3756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3727,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:21"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"126:496:21","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3755,"linearizedBaseContracts":[3755],"name":"Context","nameLocation":"641:7:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":3736,"nodeType":"Block","src":"717:34:21","statements":[{"expression":{"expression":{"id":3733,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:21","memberName":"sender","nodeType":"MemberAccess","src":"734:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3732,"id":3735,"nodeType":"Return","src":"727:17:21"}]},"id":3737,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:21","nodeType":"FunctionDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[],"src":"674:2:21"},"returnParameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3737,"src":"708:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3730,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:21"},"scope":3755,"src":"655:96:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"824:32:21","statements":[{"expression":{"expression":{"id":3742,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:21","memberName":"data","nodeType":"MemberAccess","src":"841:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3741,"id":3744,"nodeType":"Return","src":"834:15:21"}]},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:21","nodeType":"FunctionDefinition","parameters":{"id":3738,"nodeType":"ParameterList","parameters":[],"src":"774:2:21"},"returnParameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3746,"src":"808:14:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3739,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:21"},"scope":3755,"src":"757:99:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3753,"nodeType":"Block","src":"934:25:21","statements":[{"expression":{"hexValue":"30","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3750,"id":3752,"nodeType":"Return","src":"944:8:21"}]},"id":3754,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:21","nodeType":"FunctionDefinition","parameters":{"id":3747,"nodeType":"ParameterList","parameters":[],"src":"891:2:21"},"returnParameters":{"id":3750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3754,"src":"925:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:21"},"scope":3755,"src":"862:97:21","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3756,"src":"623:338:21","usedErrors":[]}],"src":"101:861:21"},"id":21},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3779],"IERC165":[3985]},"id":3780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3757,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:22"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3758,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3780,"sourceUnit":3986,"src":"124:23:22","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3760,"name":"IERC165","nameLocations":["754:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":3985,"src":"754:7:22"},"id":3761,"nodeType":"InheritanceSpecifier","src":"754:7:22"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3759,"nodeType":"StructuredDocumentation","src":"149:576:22","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3779,"linearizedBaseContracts":[3779,3985],"name":"ERC165","nameLocation":"744:6:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3984],"body":{"id":3777,"nodeType":"Block","src":"920:64:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3770,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"937:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3772,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"957:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3985_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3985_$","typeString":"type(contract IERC165)"}],"id":3771,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3985","typeString":"type(contract IERC165)"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:22","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3769,"id":3776,"nodeType":"Return","src":"930:47:22"}]},"documentation":{"id":3762,"nodeType":"StructuredDocumentation","src":"768:56:22","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3778,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:22","nodeType":"FunctionDefinition","overrides":{"id":3766,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:22"},"parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:22","nodeType":"VariableDeclaration","scope":3778,"src":"856:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3763,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:22"},"returnParameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3778,"src":"914:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3767,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:22"},"scope":3779,"src":"829:155:22","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3780,"src":"726:260:22","usedErrors":[]}],"src":"99:888:22"},"id":22},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","exportedSymbols":{"ERC165Checker":[3973],"IERC165":[3985]},"id":3974,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3781,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:23"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3782,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3974,"sourceUnit":3986,"src":"146:23:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC165Checker","contractDependencies":[],"contractKind":"library","documentation":{"id":3783,"nodeType":"StructuredDocumentation","src":"171:277:23","text":" @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."},"fullyImplemented":true,"id":3973,"linearizedBaseContracts":[3973],"name":"ERC165Checker","nameLocation":"457:13:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3786,"mutability":"constant","name":"_INTERFACE_ID_INVALID","nameLocation":"575:21:23","nodeType":"VariableDeclaration","scope":3973,"src":"551:58:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3784,"name":"bytes4","nodeType":"ElementaryTypeName","src":"551:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"599:10:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"private"},{"body":{"id":3808,"nodeType":"Block","src":"774:357:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3795,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1008:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3797,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"1022:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3985_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3985_$","typeString":"type(contract IERC165)"}],"id":3796,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1017:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1017:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3985","typeString":"type(contract IERC165)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1031:11:23","memberName":"interfaceId","nodeType":"MemberAccess","src":"1017:25:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3794,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"975:32:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"975:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1059:65:23","subExpression":{"arguments":[{"id":3802,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1093:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3803,"name":"_INTERFACE_ID_INVALID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"1102:21:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3801,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"1060:32:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1060:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"975:149:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3793,"id":3807,"nodeType":"Return","src":"956:168:23"}]},"documentation":{"id":3787,"nodeType":"StructuredDocumentation","src":"616:83:23","text":" @dev Returns true if `account` supports the {IERC165} interface."},"id":3809,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165","nameLocation":"713:14:23","nodeType":"FunctionDefinition","parameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"account","nameLocation":"736:7:23","nodeType":"VariableDeclaration","scope":3809,"src":"728:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3788,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"727:17:23"},"returnParameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3809,"src":"768:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3791,"name":"bool","nodeType":"ElementaryTypeName","src":"768:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"767:6:23"},"scope":3973,"src":"704:427:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3828,"nodeType":"Block","src":"1442:189:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3820,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"1558:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3819,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"1543:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1543:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":3823,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"1603:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3824,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"1612:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3822,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"1570:32:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1570:54:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1543:81:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3818,"id":3827,"nodeType":"Return","src":"1536:88:23"}]},"documentation":{"id":3810,"nodeType":"StructuredDocumentation","src":"1137:207:23","text":" @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1358:17:23","nodeType":"FunctionDefinition","parameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"account","nameLocation":"1384:7:23","nodeType":"VariableDeclaration","scope":3829,"src":"1376:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3811,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3814,"mutability":"mutable","name":"interfaceId","nameLocation":"1400:11:23","nodeType":"VariableDeclaration","scope":3829,"src":"1393:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3813,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1393:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1375:37:23"},"returnParameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"1436:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3816,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1435:6:23"},"scope":3973,"src":"1349:282:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3884,"nodeType":"Block","src":"2155:560:23","statements":[{"assignments":[3845],"declarations":[{"constant":false,"id":3845,"mutability":"mutable","name":"interfaceIdsSupported","nameLocation":"2278:21:23","nodeType":"VariableDeclaration","scope":3884,"src":"2264:35:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3843,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3844,"nodeType":"ArrayTypeName","src":"2264:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":3852,"initialValue":{"arguments":[{"expression":{"id":3849,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"2313:12:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2326:6:23","memberName":"length","nodeType":"MemberAccess","src":"2313:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2302:10:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3846,"name":"bool","nodeType":"ElementaryTypeName","src":"2306:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3847,"nodeType":"ArrayTypeName","src":"2306:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2264:69:23"},{"condition":{"arguments":[{"id":3854,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"2405:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3853,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"2390:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2390:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3881,"nodeType":"IfStatement","src":"2386:284:23","trueBody":{"id":3880,"nodeType":"Block","src":"2415:255:23","statements":[{"body":{"id":3878,"nodeType":"Block","src":"2542:118:23","statements":[{"expression":{"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3867,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"2560:21:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3869,"indexExpression":{"id":3868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"2582:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2560:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3871,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"2620:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3872,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"2629:12:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3874,"indexExpression":{"id":3873,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"2642:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2629:15:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3870,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"2587:32:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2560:85:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3877,"nodeType":"ExpressionStatement","src":"2560:85:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3860,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"2512:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3861,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"2516:12:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:23","memberName":"length","nodeType":"MemberAccess","src":"2516:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3879,"initializationExpression":{"assignments":[3857],"declarations":[{"constant":false,"id":3857,"mutability":"mutable","name":"i","nameLocation":"2505:1:23","nodeType":"VariableDeclaration","scope":3879,"src":"2497:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3859,"initialValue":{"hexValue":"30","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2509:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2497:13:23"},"loopExpression":{"expression":{"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2537:3:23","subExpression":{"id":3864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"2537:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3866,"nodeType":"ExpressionStatement","src":"2537:3:23"},"nodeType":"ForStatement","src":"2492:168:23"}]}},{"expression":{"id":3882,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"2687:21:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"functionReturnParameters":3840,"id":3883,"nodeType":"Return","src":"2680:28:23"}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"1637:374:23","text":" @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"},"id":3885,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedInterfaces","nameLocation":"2025:22:23","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"account","nameLocation":"2065:7:23","nodeType":"VariableDeclaration","scope":3885,"src":"2057:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3831,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"interfaceIds","nameLocation":"2098:12:23","nodeType":"VariableDeclaration","scope":3885,"src":"2082:28:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3833,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2082:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3834,"nodeType":"ArrayTypeName","src":"2082:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"2047:69:23"},"returnParameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3885,"src":"2140:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3837,"name":"bool","nodeType":"ElementaryTypeName","src":"2140:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3838,"nodeType":"ArrayTypeName","src":"2140:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2139:15:23"},"scope":3973,"src":"2016:699:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3930,"nodeType":"Block","src":"3157:436:23","statements":[{"condition":{"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3213:24:23","subExpression":{"arguments":[{"id":3897,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"3229:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3896,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"3214:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3214:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3903,"nodeType":"IfStatement","src":"3209:67:23","trueBody":{"id":3902,"nodeType":"Block","src":"3239:37:23","statements":[{"expression":{"hexValue":"66616c7365","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3260:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3895,"id":3901,"nodeType":"Return","src":"3253:12:23"}]}},{"body":{"id":3926,"nodeType":"Block","src":"3395:134:23","statements":[{"condition":{"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3413:59:23","subExpression":{"arguments":[{"id":3916,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"3447:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3917,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"3456:12:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3919,"indexExpression":{"id":3918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"3469:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3456:15:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3915,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"3414:32:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3925,"nodeType":"IfStatement","src":"3409:110:23","trueBody":{"id":3924,"nodeType":"Block","src":"3474:45:23","statements":[{"expression":{"hexValue":"66616c7365","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3499:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3895,"id":3923,"nodeType":"Return","src":"3492:12:23"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3908,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"3365:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3909,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"3369:12:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3382:6:23","memberName":"length","nodeType":"MemberAccess","src":"3369:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3365:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3927,"initializationExpression":{"assignments":[3905],"declarations":[{"constant":false,"id":3905,"mutability":"mutable","name":"i","nameLocation":"3358:1:23","nodeType":"VariableDeclaration","scope":3927,"src":"3350:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"3350:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3907,"initialValue":{"hexValue":"30","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3362:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3350:13:23"},"loopExpression":{"expression":{"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3390:3:23","subExpression":{"id":3912,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"3390:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3914,"nodeType":"ExpressionStatement","src":"3390:3:23"},"nodeType":"ForStatement","src":"3345:184:23"},{"expression":{"hexValue":"74727565","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3582:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3895,"id":3929,"nodeType":"Return","src":"3575:11:23"}]},"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"2721:324:23","text":" @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."},"id":3931,"implemented":true,"kind":"function","modifiers":[],"name":"supportsAllInterfaces","nameLocation":"3059:21:23","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"account","nameLocation":"3089:7:23","nodeType":"VariableDeclaration","scope":3931,"src":"3081:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3887,"name":"address","nodeType":"ElementaryTypeName","src":"3081:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"interfaceIds","nameLocation":"3114:12:23","nodeType":"VariableDeclaration","scope":3931,"src":"3098:28:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3889,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3098:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3890,"nodeType":"ArrayTypeName","src":"3098:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"3080:47:23"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3931,"src":"3151:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3893,"name":"bool","nodeType":"ElementaryTypeName","src":"3151:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3150:6:23"},"scope":3973,"src":"3050:543:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3971,"nodeType":"Block","src":"4529:539:23","statements":[{"assignments":[3942],"declarations":[{"constant":false,"id":3942,"mutability":"mutable","name":"encodedParams","nameLocation":"4576:13:23","nodeType":"VariableDeclaration","scope":3971,"src":"4563:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3941,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3950,"initialValue":{"arguments":[{"expression":{"expression":{"id":3945,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"4615:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3985_$","typeString":"type(contract IERC165)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4623:17:23","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3984,"src":"4615:25:23","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes4_$returns$_t_bool_$","typeString":"function IERC165.supportsInterface(bytes4) view returns (bool)"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4641:8:23","memberName":"selector","nodeType":"MemberAccess","src":"4615:34:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3948,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4651:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3943,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4592:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4596:18:23","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4592:22:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4592:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4563:100:23"},{"assignments":[3952],"declarations":[{"constant":false,"id":3952,"mutability":"mutable","name":"success","nameLocation":"4710:7:23","nodeType":"VariableDeclaration","scope":3971,"src":"4705:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3951,"name":"bool","nodeType":"ElementaryTypeName","src":"4705:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3953,"nodeType":"VariableDeclarationStatement","src":"4705:12:23"},{"assignments":[3955],"declarations":[{"constant":false,"id":3955,"mutability":"mutable","name":"returnSize","nameLocation":"4735:10:23","nodeType":"VariableDeclaration","scope":3971,"src":"4727:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3956,"nodeType":"VariableDeclarationStatement","src":"4727:18:23"},{"assignments":[3958],"declarations":[{"constant":false,"id":3958,"mutability":"mutable","name":"returnValue","nameLocation":"4763:11:23","nodeType":"VariableDeclaration","scope":3971,"src":"4755:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3957,"name":"uint256","nodeType":"ElementaryTypeName","src":"4755:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3959,"nodeType":"VariableDeclarationStatement","src":"4755:19:23"},{"AST":{"nodeType":"YulBlock","src":"4793:203:23","statements":[{"nodeType":"YulAssignment","src":"4807:97:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4829:5:23","type":"","value":"30000"},{"name":"account","nodeType":"YulIdentifier","src":"4836:7:23"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4849:13:23"},{"kind":"number","nodeType":"YulLiteral","src":"4864:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4845:3:23"},"nodeType":"YulFunctionCall","src":"4845:24:23"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4877:13:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4871:5:23"},"nodeType":"YulFunctionCall","src":"4871:20:23"},{"kind":"number","nodeType":"YulLiteral","src":"4893:4:23","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4899:4:23","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4818:10:23"},"nodeType":"YulFunctionCall","src":"4818:86:23"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4807:7:23"}]},{"nodeType":"YulAssignment","src":"4917:30:23","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4931:14:23"},"nodeType":"YulFunctionCall","src":"4931:16:23"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"4917:10:23"}]},{"nodeType":"YulAssignment","src":"4960:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4981:4:23","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4975:5:23"},"nodeType":"YulFunctionCall","src":"4975:11:23"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"4960:11:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3934,"isOffset":false,"isSlot":false,"src":"4836:7:23","valueSize":1},{"declaration":3942,"isOffset":false,"isSlot":false,"src":"4849:13:23","valueSize":1},{"declaration":3942,"isOffset":false,"isSlot":false,"src":"4877:13:23","valueSize":1},{"declaration":3955,"isOffset":false,"isSlot":false,"src":"4917:10:23","valueSize":1},{"declaration":3958,"isOffset":false,"isSlot":false,"src":"4960:11:23","valueSize":1},{"declaration":3952,"isOffset":false,"isSlot":false,"src":"4807:7:23","valueSize":1}],"id":3960,"nodeType":"InlineAssembly","src":"4784:212:23"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"5013:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3962,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"5024:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5038:4:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5024:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3966,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"5046:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5060:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5046:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:48:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3940,"id":3970,"nodeType":"Return","src":"5006:55:23"}]},"documentation":{"id":3932,"nodeType":"StructuredDocumentation","src":"3599:817:23","text":" @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Some precompiled contracts will falsely indicate support for a given interface, so caution\n should be exercised when using this function.\n Interface identification is specified in ERC-165."},"id":3972,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165InterfaceUnchecked","nameLocation":"4430:32:23","nodeType":"FunctionDefinition","parameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"account","nameLocation":"4471:7:23","nodeType":"VariableDeclaration","scope":3972,"src":"4463:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3933,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"interfaceId","nameLocation":"4487:11:23","nodeType":"VariableDeclaration","scope":3972,"src":"4480:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3935,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4480:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4462:37:23"},"returnParameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3972,"src":"4523:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3938,"name":"bool","nodeType":"ElementaryTypeName","src":"4523:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4522:6:23"},"scope":3973,"src":"4421:647:23","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3974,"src":"449:4621:23","usedErrors":[]}],"src":"121:4950:23"},"id":23},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3985]},"id":3986,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3975,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"125:279:24","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3985,"linearizedBaseContracts":[3985],"name":"IERC165","nameLocation":"415:7:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3977,"nodeType":"StructuredDocumentation","src":"429:340:24","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3984,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:24","nodeType":"FunctionDefinition","parameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:24","nodeType":"VariableDeclaration","scope":3984,"src":"801:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3978,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:24"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3984,"src":"844:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3981,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:24"},"scope":3985,"src":"774:76:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3986,"src":"405:447:24","usedErrors":[]}],"src":"100:753:24"},"id":24},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[4598]},"id":4599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3987,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":3988,"nodeType":"StructuredDocumentation","src":"230:1098:25","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":4598,"linearizedBaseContracts":[4598],"name":"EnumerableSet","nameLocation":"1337:13:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3996,"members":[{"constant":false,"id":3991,"mutability":"mutable","name":"_values","nameLocation":"1861:7:25","nodeType":"VariableDeclaration","scope":3996,"src":"1851:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3990,"nodeType":"ArrayTypeName","src":"1851:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3995,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:25","nodeType":"VariableDeclaration","scope":3996,"src":"2001:36:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3994,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:25","nodeType":"StructDefinition","scope":4598,"src":"1797:247:25","visibility":"public"},{"body":{"id":4037,"nodeType":"Block","src":"2283:335:25","statements":[{"condition":{"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:25","subExpression":{"arguments":[{"id":4008,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"2308:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":4009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"2313:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4007,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"2298:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4035,"nodeType":"Block","src":"2575:37:25","statements":[{"expression":{"hexValue":"66616c7365","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4006,"id":4034,"nodeType":"Return","src":"2589:12:25"}]},"id":4036,"nodeType":"IfStatement","src":"2293:319:25","trueBody":{"id":4032,"nodeType":"Block","src":"2321:248:25","statements":[{"expression":{"arguments":[{"id":4017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"2352:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":4012,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"2335:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2339:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"2335:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2347:4:25","memberName":"push","nodeType":"MemberAccess","src":"2335:16:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4019,"nodeType":"ExpressionStatement","src":"2335:23:25"},{"expression":{"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4020,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"2493:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2497:8:25","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"2493:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4024,"indexExpression":{"id":4022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"2506:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":4025,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"2515:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2519:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"2515:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:6:25","memberName":"length","nodeType":"MemberAccess","src":"2515:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4029,"nodeType":"ExpressionStatement","src":"2493:40:25"},{"expression":{"hexValue":"74727565","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4006,"id":4031,"nodeType":"Return","src":"2547:11:25"}]}}]},"documentation":{"id":3997,"nodeType":"StructuredDocumentation","src":"2050:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4038,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:25","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"set","nameLocation":"2240:3:25","nodeType":"VariableDeclaration","scope":4038,"src":"2228:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3999,"nodeType":"UserDefinedTypeName","pathNode":{"id":3998,"name":"Set","nameLocations":["2228:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":3996,"src":"2228:3:25"},"referencedDeclaration":3996,"src":"2228:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4002,"mutability":"mutable","name":"value","nameLocation":"2253:5:25","nodeType":"VariableDeclaration","scope":4038,"src":"2245:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:25"},"returnParameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4038,"src":"2277:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4004,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:25"},"scope":4598,"src":"2214:404:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4121,"nodeType":"Block","src":"2858:1316:25","statements":[{"assignments":[4050],"declarations":[{"constant":false,"id":4050,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:25","nodeType":"VariableDeclaration","scope":4121,"src":"2968:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4055,"initialValue":{"baseExpression":{"expression":{"id":4051,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"2989:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2993:8:25","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"2989:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4054,"indexExpression":{"id":4053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"3002:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"3023:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4119,"nodeType":"Block","src":"4131:37:25","statements":[{"expression":{"hexValue":"66616c7365","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4048,"id":4118,"nodeType":"Return","src":"4145:12:25"}]},"id":4120,"nodeType":"IfStatement","src":"3019:1149:25","trueBody":{"id":4116,"nodeType":"Block","src":"3040:1085:25","statements":[{"assignments":[4060],"declarations":[{"constant":false,"id":4060,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:25","nodeType":"VariableDeclaration","scope":4116,"src":"3392:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4064,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"3416:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:25"},{"assignments":[4066],"declarations":[{"constant":false,"id":4066,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:25","nodeType":"VariableDeclaration","scope":4116,"src":"3444:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4072,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4067,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"3464:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"3464:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3476:6:25","memberName":"length","nodeType":"MemberAccess","src":"3464:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"3505:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4074,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"3518:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4100,"nodeType":"IfStatement","src":"3501:398:25","trueBody":{"id":4099,"nodeType":"Block","src":"3533:366:25","statements":[{"assignments":[4077],"declarations":[{"constant":false,"id":4077,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:25","nodeType":"VariableDeclaration","scope":4099,"src":"3551:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4082,"initialValue":{"baseExpression":{"expression":{"id":4078,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"3571:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3575:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"3571:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4081,"indexExpression":{"id":4080,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"3583:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:25"},{"expression":{"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4083,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"3693:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3697:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"3693:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4087,"indexExpression":{"id":4085,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"3705:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4088,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"3722:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4090,"nodeType":"ExpressionStatement","src":"3693:38:25"},{"expression":{"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4091,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"3805:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3809:8:25","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"3805:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4095,"indexExpression":{"id":4093,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"3818:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4096,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"3831:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4098,"nodeType":"ExpressionStatement","src":"3805:36:25"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":4101,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"3977:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3981:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"3977:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:3:25","memberName":"pop","nodeType":"MemberAccess","src":"3977:15:25","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4107,"nodeType":"ExpressionStatement","src":"3977:17:25"},{"expression":{"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:25","subExpression":{"baseExpression":{"expression":{"id":4108,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"4069:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4073:8:25","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"4069:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4111,"indexExpression":{"id":4110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"4082:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4113,"nodeType":"ExpressionStatement","src":"4062:26:25"},{"expression":{"hexValue":"74727565","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4048,"id":4115,"nodeType":"Return","src":"4103:11:25"}]}}]},"documentation":{"id":4039,"nodeType":"StructuredDocumentation","src":"2624:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4122,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:25","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"set","nameLocation":"2815:3:25","nodeType":"VariableDeclaration","scope":4122,"src":"2803:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4041,"nodeType":"UserDefinedTypeName","pathNode":{"id":4040,"name":"Set","nameLocations":["2803:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":3996,"src":"2803:3:25"},"referencedDeclaration":3996,"src":"2803:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4044,"mutability":"mutable","name":"value","nameLocation":"2828:5:25","nodeType":"VariableDeclaration","scope":4122,"src":"2820:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:25"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4122,"src":"2852:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4046,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:25"},"scope":4598,"src":"2786:1388:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4140,"nodeType":"Block","src":"4334:48:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4133,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"4351:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4355:8:25","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"4351:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4136,"indexExpression":{"id":4135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"4364:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4132,"id":4139,"nodeType":"Return","src":"4344:31:25"}]},"documentation":{"id":4123,"nodeType":"StructuredDocumentation","src":"4180:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":4141,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:25","nodeType":"FunctionDefinition","parameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"set","nameLocation":"4286:3:25","nodeType":"VariableDeclaration","scope":4141,"src":"4274:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4125,"nodeType":"UserDefinedTypeName","pathNode":{"id":4124,"name":"Set","nameLocations":["4274:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":3996,"src":"4274:3:25"},"referencedDeclaration":3996,"src":"4274:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4128,"mutability":"mutable","name":"value","nameLocation":"4299:5:25","nodeType":"VariableDeclaration","scope":4141,"src":"4291:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:25"},"returnParameters":{"id":4132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4141,"src":"4328:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4130,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:25"},"scope":4598,"src":"4255:127:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4154,"nodeType":"Block","src":"4528:42:25","statements":[{"expression":{"expression":{"expression":{"id":4150,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"4545:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4549:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"4545:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4557:6:25","memberName":"length","nodeType":"MemberAccess","src":"4545:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4149,"id":4153,"nodeType":"Return","src":"4538:25:25"}]},"documentation":{"id":4142,"nodeType":"StructuredDocumentation","src":"4388:70:25","text":" @dev Returns the number of values on the set. O(1)."},"id":4155,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:25","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"set","nameLocation":"4492:3:25","nodeType":"VariableDeclaration","scope":4155,"src":"4480:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4144,"nodeType":"UserDefinedTypeName","pathNode":{"id":4143,"name":"Set","nameLocations":["4480:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":3996,"src":"4480:3:25"},"referencedDeclaration":3996,"src":"4480:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:25"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4155,"src":"4519:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:25"},"scope":4598,"src":"4463:107:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4171,"nodeType":"Block","src":"4988:42:25","statements":[{"expression":{"baseExpression":{"expression":{"id":4166,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"5005:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5009:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"5005:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4169,"indexExpression":{"id":4168,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"5017:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4165,"id":4170,"nodeType":"Return","src":"4998:25:25"}]},"documentation":{"id":4156,"nodeType":"StructuredDocumentation","src":"4576:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4172,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:25","nodeType":"FunctionDefinition","parameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"set","nameLocation":"4937:3:25","nodeType":"VariableDeclaration","scope":4172,"src":"4925:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4158,"nodeType":"UserDefinedTypeName","pathNode":{"id":4157,"name":"Set","nameLocations":["4925:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":3996,"src":"4925:3:25"},"referencedDeclaration":3996,"src":"4925:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4161,"mutability":"mutable","name":"index","nameLocation":"4950:5:25","nodeType":"VariableDeclaration","scope":4172,"src":"4942:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:25"},"returnParameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4172,"src":"4979:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:25"},"scope":4598,"src":"4912:118:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4185,"nodeType":"Block","src":"5644:35:25","statements":[{"expression":{"expression":{"id":4182,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"5661:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5665:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"5661:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":4181,"id":4184,"nodeType":"Return","src":"5654:18:25"}]},"documentation":{"id":4173,"nodeType":"StructuredDocumentation","src":"5036:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4186,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:25","nodeType":"FunctionDefinition","parameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"set","nameLocation":"5599:3:25","nodeType":"VariableDeclaration","scope":4186,"src":"5587:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4175,"nodeType":"UserDefinedTypeName","pathNode":{"id":4174,"name":"Set","nameLocations":["5587:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":3996,"src":"5587:3:25"},"referencedDeclaration":3996,"src":"5587:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:25"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4186,"src":"5626:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4179,"nodeType":"ArrayTypeName","src":"5626:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:25"},"scope":4598,"src":"5570:109:25","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":4190,"members":[{"constant":false,"id":4189,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:25","nodeType":"VariableDeclaration","scope":4190,"src":"5732:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4188,"nodeType":"UserDefinedTypeName","pathNode":{"id":4187,"name":"Set","nameLocations":["5732:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":3996,"src":"5732:3:25"},"referencedDeclaration":3996,"src":"5732:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:25","nodeType":"StructDefinition","scope":4598,"src":"5704:45:25","visibility":"public"},{"body":{"id":4207,"nodeType":"Block","src":"5995:47:25","statements":[{"expression":{"arguments":[{"expression":{"id":4202,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"6017:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6021:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4189,"src":"6017:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"6029:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4201,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"6012:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3996_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4200,"id":4206,"nodeType":"Return","src":"6005:30:25"}]},"documentation":{"id":4191,"nodeType":"StructuredDocumentation","src":"5755:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4208,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:25","nodeType":"FunctionDefinition","parameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"set","nameLocation":"5951:3:25","nodeType":"VariableDeclaration","scope":4208,"src":"5932:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4193,"nodeType":"UserDefinedTypeName","pathNode":{"id":4192,"name":"Bytes32Set","nameLocations":["5932:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4190,"src":"5932:10:25"},"referencedDeclaration":4190,"src":"5932:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4196,"mutability":"mutable","name":"value","nameLocation":"5964:5:25","nodeType":"VariableDeclaration","scope":4208,"src":"5956:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:25"},"returnParameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4208,"src":"5989:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4198,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:25"},"scope":4598,"src":"5919:123:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4225,"nodeType":"Block","src":"6289:50:25","statements":[{"expression":{"arguments":[{"expression":{"id":4220,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"6314:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6318:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4189,"src":"6314:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"6326:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4219,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"6306:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3996_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4218,"id":4224,"nodeType":"Return","src":"6299:33:25"}]},"documentation":{"id":4209,"nodeType":"StructuredDocumentation","src":"6048:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4226,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:25","nodeType":"FunctionDefinition","parameters":{"id":4215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"set","nameLocation":"6245:3:25","nodeType":"VariableDeclaration","scope":4226,"src":"6226:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4211,"nodeType":"UserDefinedTypeName","pathNode":{"id":4210,"name":"Bytes32Set","nameLocations":["6226:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4190,"src":"6226:10:25"},"referencedDeclaration":4190,"src":"6226:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4214,"mutability":"mutable","name":"value","nameLocation":"6258:5:25","nodeType":"VariableDeclaration","scope":4226,"src":"6250:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:25"},"returnParameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4226,"src":"6283:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4216,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:25"},"scope":4598,"src":"6210:129:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4243,"nodeType":"Block","src":"6506:52:25","statements":[{"expression":{"arguments":[{"expression":{"id":4238,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"6533:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6537:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4189,"src":"6533:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"6545:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4237,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"6523:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4236,"id":4242,"nodeType":"Return","src":"6516:35:25"}]},"documentation":{"id":4227,"nodeType":"StructuredDocumentation","src":"6345:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:25","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"set","nameLocation":"6457:3:25","nodeType":"VariableDeclaration","scope":4244,"src":"6438:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4229,"nodeType":"UserDefinedTypeName","pathNode":{"id":4228,"name":"Bytes32Set","nameLocations":["6438:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4190,"src":"6438:10:25"},"referencedDeclaration":4190,"src":"6438:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"value","nameLocation":"6470:5:25","nodeType":"VariableDeclaration","scope":4244,"src":"6462:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:25"},"returnParameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"6500:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4234,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:25"},"scope":4598,"src":"6420:138:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4258,"nodeType":"Block","src":"6711:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":4254,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"6736:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6740:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4189,"src":"6736:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4253,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"6728:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6728:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4252,"id":4257,"nodeType":"Return","src":"6721:26:25"}]},"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"6564:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":4259,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:25","nodeType":"FunctionDefinition","parameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"set","nameLocation":"6674:3:25","nodeType":"VariableDeclaration","scope":4259,"src":"6655:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4247,"nodeType":"UserDefinedTypeName","pathNode":{"id":4246,"name":"Bytes32Set","nameLocations":["6655:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4190,"src":"6655:10:25"},"referencedDeclaration":4190,"src":"6655:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:25"},"returnParameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4259,"src":"6702:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:25"},"scope":4598,"src":"6639:115:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4276,"nodeType":"Block","src":"7179:46:25","statements":[{"expression":{"arguments":[{"expression":{"id":4271,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"7200:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7204:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4189,"src":"7200:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4273,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"7212:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4270,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"7196:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4269,"id":4275,"nodeType":"Return","src":"7189:29:25"}]},"documentation":{"id":4260,"nodeType":"StructuredDocumentation","src":"6760:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4277,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:25","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"set","nameLocation":"7127:3:25","nodeType":"VariableDeclaration","scope":4277,"src":"7108:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4262,"nodeType":"UserDefinedTypeName","pathNode":{"id":4261,"name":"Bytes32Set","nameLocations":["7108:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4190,"src":"7108:10:25"},"referencedDeclaration":4190,"src":"7108:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"index","nameLocation":"7140:5:25","nodeType":"VariableDeclaration","scope":4277,"src":"7132:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:25"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4277,"src":"7170:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:25"},"scope":4598,"src":"7096:129:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4306,"nodeType":"Block","src":"7846:219:25","statements":[{"assignments":[4291],"declarations":[{"constant":false,"id":4291,"mutability":"mutable","name":"store","nameLocation":"7873:5:25","nodeType":"VariableDeclaration","scope":4306,"src":"7856:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4290,"nodeType":"ArrayTypeName","src":"7856:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4296,"initialValue":{"arguments":[{"expression":{"id":4293,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"7889:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7893:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4189,"src":"7889:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4292,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"7881:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:25"},{"assignments":[4301],"declarations":[{"constant":false,"id":4301,"mutability":"mutable","name":"result","nameLocation":"7927:6:25","nodeType":"VariableDeclaration","scope":4306,"src":"7910:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4300,"nodeType":"ArrayTypeName","src":"7910:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4302,"nodeType":"VariableDeclarationStatement","src":"7910:23:25"},{"AST":{"nodeType":"YulBlock","src":"7996:39:25","statements":[{"nodeType":"YulAssignment","src":"8010:15:25","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4301,"isOffset":false,"isSlot":false,"src":"8010:6:25","valueSize":1},{"declaration":4291,"isOffset":false,"isSlot":false,"src":"8020:5:25","valueSize":1}],"id":4303,"nodeType":"InlineAssembly","src":"7987:48:25"},{"expression":{"id":4304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"8052:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":4286,"id":4305,"nodeType":"Return","src":"8045:13:25"}]},"documentation":{"id":4278,"nodeType":"StructuredDocumentation","src":"7231:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4307,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:25","nodeType":"FunctionDefinition","parameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"set","nameLocation":"7800:3:25","nodeType":"VariableDeclaration","scope":4307,"src":"7781:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4280,"nodeType":"UserDefinedTypeName","pathNode":{"id":4279,"name":"Bytes32Set","nameLocations":["7781:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4190,"src":"7781:10:25"},"referencedDeclaration":4190,"src":"7781:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4190_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:25"},"returnParameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4307,"src":"7828:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4284,"nodeType":"ArrayTypeName","src":"7828:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:25"},"scope":4598,"src":"7765:300:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":4311,"members":[{"constant":false,"id":4310,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:25","nodeType":"VariableDeclaration","scope":4311,"src":"8118:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4309,"nodeType":"UserDefinedTypeName","pathNode":{"id":4308,"name":"Set","nameLocations":["8118:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":3996,"src":"8118:3:25"},"referencedDeclaration":3996,"src":"8118:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:25","nodeType":"StructDefinition","scope":4598,"src":"8090:45:25","visibility":"public"},{"body":{"id":4337,"nodeType":"Block","src":"8381:74:25","statements":[{"expression":{"arguments":[{"expression":{"id":4323,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"8403:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8407:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4310,"src":"8403:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8439:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4329,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:25","typeDescriptions":{}}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:25","typeDescriptions":{}}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8423:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:25","typeDescriptions":{}}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4322,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"8398:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3996_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4321,"id":4336,"nodeType":"Return","src":"8391:57:25"}]},"documentation":{"id":4312,"nodeType":"StructuredDocumentation","src":"8141:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4338,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:25","nodeType":"FunctionDefinition","parameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"set","nameLocation":"8337:3:25","nodeType":"VariableDeclaration","scope":4338,"src":"8318:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4314,"nodeType":"UserDefinedTypeName","pathNode":{"id":4313,"name":"AddressSet","nameLocations":["8318:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"8318:10:25"},"referencedDeclaration":4311,"src":"8318:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4317,"mutability":"mutable","name":"value","nameLocation":"8350:5:25","nodeType":"VariableDeclaration","scope":4338,"src":"8342:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4316,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:25"},"returnParameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4338,"src":"8375:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4319,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:25"},"scope":4598,"src":"8305:150:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4364,"nodeType":"Block","src":"8702:77:25","statements":[{"expression":{"arguments":[{"expression":{"id":4350,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"8727:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8731:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4310,"src":"8727:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"8763:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4356,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:25","typeDescriptions":{}}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8755:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4354,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:25","typeDescriptions":{}}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:25","typeDescriptions":{}}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4349,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"8719:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3996_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4348,"id":4363,"nodeType":"Return","src":"8712:60:25"}]},"documentation":{"id":4339,"nodeType":"StructuredDocumentation","src":"8461:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4365,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:25","nodeType":"FunctionDefinition","parameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"set","nameLocation":"8658:3:25","nodeType":"VariableDeclaration","scope":4365,"src":"8639:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4341,"nodeType":"UserDefinedTypeName","pathNode":{"id":4340,"name":"AddressSet","nameLocations":["8639:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"8639:10:25"},"referencedDeclaration":4311,"src":"8639:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4344,"mutability":"mutable","name":"value","nameLocation":"8671:5:25","nodeType":"VariableDeclaration","scope":4365,"src":"8663:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4343,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:25"},"returnParameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4365,"src":"8696:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4346,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:25"},"scope":4598,"src":"8623:156:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4391,"nodeType":"Block","src":"8946:79:25","statements":[{"expression":{"arguments":[{"expression":{"id":4377,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"8973:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8977:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4310,"src":"8973:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"9009:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4383,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:25","typeDescriptions":{}}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:25","typeDescriptions":{}}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:25","typeDescriptions":{}}},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4376,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"8963:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8963:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4375,"id":4390,"nodeType":"Return","src":"8956:62:25"}]},"documentation":{"id":4366,"nodeType":"StructuredDocumentation","src":"8785:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":4392,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:25","nodeType":"FunctionDefinition","parameters":{"id":4372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4369,"mutability":"mutable","name":"set","nameLocation":"8897:3:25","nodeType":"VariableDeclaration","scope":4392,"src":"8878:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4368,"nodeType":"UserDefinedTypeName","pathNode":{"id":4367,"name":"AddressSet","nameLocations":["8878:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"8878:10:25"},"referencedDeclaration":4311,"src":"8878:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4371,"mutability":"mutable","name":"value","nameLocation":"8910:5:25","nodeType":"VariableDeclaration","scope":4392,"src":"8902:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4370,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:25"},"returnParameters":{"id":4375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4392,"src":"8940:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4373,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:25"},"scope":4598,"src":"8860:165:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4406,"nodeType":"Block","src":"9178:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":4402,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"9203:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9207:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4310,"src":"9203:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4401,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"9195:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4400,"id":4405,"nodeType":"Return","src":"9188:26:25"}]},"documentation":{"id":4393,"nodeType":"StructuredDocumentation","src":"9031:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":4407,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:25","nodeType":"FunctionDefinition","parameters":{"id":4397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4396,"mutability":"mutable","name":"set","nameLocation":"9141:3:25","nodeType":"VariableDeclaration","scope":4407,"src":"9122:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4395,"nodeType":"UserDefinedTypeName","pathNode":{"id":4394,"name":"AddressSet","nameLocations":["9122:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"9122:10:25"},"referencedDeclaration":4311,"src":"9122:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:25"},"returnParameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4407,"src":"9169:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:25"},"scope":4598,"src":"9106:115:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4433,"nodeType":"Block","src":"9646:73:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":4425,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"9691:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9695:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4310,"src":"9691:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4427,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"9703:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4424,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"9687:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9687:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4422,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:25","typeDescriptions":{}}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4420,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:25","typeDescriptions":{}}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4418,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:25","typeDescriptions":{}}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4417,"id":4432,"nodeType":"Return","src":"9656:56:25"}]},"documentation":{"id":4408,"nodeType":"StructuredDocumentation","src":"9227:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4434,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:25","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4411,"mutability":"mutable","name":"set","nameLocation":"9594:3:25","nodeType":"VariableDeclaration","scope":4434,"src":"9575:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4410,"nodeType":"UserDefinedTypeName","pathNode":{"id":4409,"name":"AddressSet","nameLocations":["9575:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"9575:10:25"},"referencedDeclaration":4311,"src":"9575:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4413,"mutability":"mutable","name":"index","nameLocation":"9607:5:25","nodeType":"VariableDeclaration","scope":4434,"src":"9599:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:25"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4434,"src":"9637:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4415,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:25"},"scope":4598,"src":"9563:156:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4463,"nodeType":"Block","src":"10340:219:25","statements":[{"assignments":[4448],"declarations":[{"constant":false,"id":4448,"mutability":"mutable","name":"store","nameLocation":"10367:5:25","nodeType":"VariableDeclaration","scope":4463,"src":"10350:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4447,"nodeType":"ArrayTypeName","src":"10350:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4453,"initialValue":{"arguments":[{"expression":{"id":4450,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"10383:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10387:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4310,"src":"10383:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4449,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"10375:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:25"},{"assignments":[4458],"declarations":[{"constant":false,"id":4458,"mutability":"mutable","name":"result","nameLocation":"10421:6:25","nodeType":"VariableDeclaration","scope":4463,"src":"10404:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4456,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4457,"nodeType":"ArrayTypeName","src":"10404:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4459,"nodeType":"VariableDeclarationStatement","src":"10404:23:25"},{"AST":{"nodeType":"YulBlock","src":"10490:39:25","statements":[{"nodeType":"YulAssignment","src":"10504:15:25","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4458,"isOffset":false,"isSlot":false,"src":"10504:6:25","valueSize":1},{"declaration":4448,"isOffset":false,"isSlot":false,"src":"10514:5:25","valueSize":1}],"id":4460,"nodeType":"InlineAssembly","src":"10481:48:25"},{"expression":{"id":4461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"10546:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4443,"id":4462,"nodeType":"Return","src":"10539:13:25"}]},"documentation":{"id":4435,"nodeType":"StructuredDocumentation","src":"9725:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4464,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:25","nodeType":"FunctionDefinition","parameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"set","nameLocation":"10294:3:25","nodeType":"VariableDeclaration","scope":4464,"src":"10275:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4437,"nodeType":"UserDefinedTypeName","pathNode":{"id":4436,"name":"AddressSet","nameLocations":["10275:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"10275:10:25"},"referencedDeclaration":4311,"src":"10275:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4311_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:25"},"returnParameters":{"id":4443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4464,"src":"10322:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4440,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4441,"nodeType":"ArrayTypeName","src":"10322:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:25"},"scope":4598,"src":"10259:300:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":4468,"members":[{"constant":false,"id":4467,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:25","nodeType":"VariableDeclaration","scope":4468,"src":"10606:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4466,"nodeType":"UserDefinedTypeName","pathNode":{"id":4465,"name":"Set","nameLocations":["10606:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":3996,"src":"10606:3:25"},"referencedDeclaration":3996,"src":"10606:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:25","nodeType":"StructDefinition","scope":4598,"src":"10581:42:25","visibility":"public"},{"body":{"id":4488,"nodeType":"Block","src":"10866:56:25","statements":[{"expression":{"arguments":[{"expression":{"id":4480,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"10888:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10892:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4467,"src":"10888:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"10908:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:25","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10900:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4479,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"10883:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3996_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10883:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4478,"id":4487,"nodeType":"Return","src":"10876:39:25"}]},"documentation":{"id":4469,"nodeType":"StructuredDocumentation","src":"10629:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4489,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:25","nodeType":"FunctionDefinition","parameters":{"id":4475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"set","nameLocation":"10822:3:25","nodeType":"VariableDeclaration","scope":4489,"src":"10806:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4471,"nodeType":"UserDefinedTypeName","pathNode":{"id":4470,"name":"UintSet","nameLocations":["10806:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":4468,"src":"10806:7:25"},"referencedDeclaration":4468,"src":"10806:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4474,"mutability":"mutable","name":"value","nameLocation":"10835:5:25","nodeType":"VariableDeclaration","scope":4489,"src":"10827:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4473,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:25"},"returnParameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4489,"src":"10860:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4476,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:25"},"scope":4598,"src":"10793:129:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4509,"nodeType":"Block","src":"11166:59:25","statements":[{"expression":{"arguments":[{"expression":{"id":4501,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"11191:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11195:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4467,"src":"11191:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"11211:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:25","typeDescriptions":{}}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11203:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4500,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"11183:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3996_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4499,"id":4508,"nodeType":"Return","src":"11176:42:25"}]},"documentation":{"id":4490,"nodeType":"StructuredDocumentation","src":"10928:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4510,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:25","nodeType":"FunctionDefinition","parameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"set","nameLocation":"11122:3:25","nodeType":"VariableDeclaration","scope":4510,"src":"11106:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4492,"nodeType":"UserDefinedTypeName","pathNode":{"id":4491,"name":"UintSet","nameLocations":["11106:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":4468,"src":"11106:7:25"},"referencedDeclaration":4468,"src":"11106:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4495,"mutability":"mutable","name":"value","nameLocation":"11135:5:25","nodeType":"VariableDeclaration","scope":4510,"src":"11127:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:25"},"returnParameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4510,"src":"11160:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4497,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:25"},"scope":4598,"src":"11090:135:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4530,"nodeType":"Block","src":"11389:61:25","statements":[{"expression":{"arguments":[{"expression":{"id":4522,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"11416:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11420:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4467,"src":"11416:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"11436:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:25","typeDescriptions":{}}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4521,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"11406:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11406:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4520,"id":4529,"nodeType":"Return","src":"11399:44:25"}]},"documentation":{"id":4511,"nodeType":"StructuredDocumentation","src":"11231:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":4531,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:25","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"set","nameLocation":"11340:3:25","nodeType":"VariableDeclaration","scope":4531,"src":"11324:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4513,"nodeType":"UserDefinedTypeName","pathNode":{"id":4512,"name":"UintSet","nameLocations":["11324:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":4468,"src":"11324:7:25"},"referencedDeclaration":4468,"src":"11324:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"value","nameLocation":"11353:5:25","nodeType":"VariableDeclaration","scope":4531,"src":"11345:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4515,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:25"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4531,"src":"11383:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4518,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:25"},"scope":4598,"src":"11306:144:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4545,"nodeType":"Block","src":"11600:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":4541,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"11625:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11629:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4467,"src":"11625:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4540,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"11617:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11617:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4539,"id":4544,"nodeType":"Return","src":"11610:26:25"}]},"documentation":{"id":4532,"nodeType":"StructuredDocumentation","src":"11456:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":4546,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:25","nodeType":"FunctionDefinition","parameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"set","nameLocation":"11563:3:25","nodeType":"VariableDeclaration","scope":4546,"src":"11547:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4534,"nodeType":"UserDefinedTypeName","pathNode":{"id":4533,"name":"UintSet","nameLocations":["11547:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":4468,"src":"11547:7:25"},"referencedDeclaration":4468,"src":"11547:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:25"},"returnParameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4546,"src":"11591:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:25"},"scope":4598,"src":"11531:112:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4566,"nodeType":"Block","src":"12065:55:25","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4560,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"12094:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12098:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4467,"src":"12094:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4562,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"12106:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4559,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"12090:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12090:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:25","typeDescriptions":{}}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4556,"id":4565,"nodeType":"Return","src":"12075:38:25"}]},"documentation":{"id":4547,"nodeType":"StructuredDocumentation","src":"11649:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4567,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:25","nodeType":"FunctionDefinition","parameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"set","nameLocation":"12013:3:25","nodeType":"VariableDeclaration","scope":4567,"src":"11997:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4549,"nodeType":"UserDefinedTypeName","pathNode":{"id":4548,"name":"UintSet","nameLocations":["11997:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":4468,"src":"11997:7:25"},"referencedDeclaration":4468,"src":"11997:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4552,"mutability":"mutable","name":"index","nameLocation":"12026:5:25","nodeType":"VariableDeclaration","scope":4567,"src":"12018:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:25"},"returnParameters":{"id":4556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4567,"src":"12056:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:25"},"scope":4598,"src":"11985:135:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4596,"nodeType":"Block","src":"12738:219:25","statements":[{"assignments":[4581],"declarations":[{"constant":false,"id":4581,"mutability":"mutable","name":"store","nameLocation":"12765:5:25","nodeType":"VariableDeclaration","scope":4596,"src":"12748:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4580,"nodeType":"ArrayTypeName","src":"12748:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4586,"initialValue":{"arguments":[{"expression":{"id":4583,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"12781:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12785:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4467,"src":"12781:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3996_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4582,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"12773:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3996_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12773:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:25"},{"assignments":[4591],"declarations":[{"constant":false,"id":4591,"mutability":"mutable","name":"result","nameLocation":"12819:6:25","nodeType":"VariableDeclaration","scope":4596,"src":"12802:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4589,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4590,"nodeType":"ArrayTypeName","src":"12802:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4592,"nodeType":"VariableDeclarationStatement","src":"12802:23:25"},{"AST":{"nodeType":"YulBlock","src":"12888:39:25","statements":[{"nodeType":"YulAssignment","src":"12902:15:25","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4591,"isOffset":false,"isSlot":false,"src":"12902:6:25","valueSize":1},{"declaration":4581,"isOffset":false,"isSlot":false,"src":"12912:5:25","valueSize":1}],"id":4593,"nodeType":"InlineAssembly","src":"12879:48:25"},{"expression":{"id":4594,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"12944:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4576,"id":4595,"nodeType":"Return","src":"12937:13:25"}]},"documentation":{"id":4568,"nodeType":"StructuredDocumentation","src":"12126:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4597,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:25","nodeType":"FunctionDefinition","parameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"set","nameLocation":"12692:3:25","nodeType":"VariableDeclaration","scope":4597,"src":"12676:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4570,"nodeType":"UserDefinedTypeName","pathNode":{"id":4569,"name":"UintSet","nameLocations":["12676:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":4468,"src":"12676:7:25"},"referencedDeclaration":4468,"src":"12676:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4468_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:25"},"returnParameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4597,"src":"12720:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4574,"nodeType":"ArrayTypeName","src":"12720:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:25"},"scope":4598,"src":"12660:297:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4599,"src":"1329:11630:25","usedErrors":[]}],"src":"205:12755:25"},"id":25},"contracts/typingGae.sol":{"ast":{"absolutePath":"contracts/typingGae.sol","exportedSymbols":{"ERC165Checker":[3973],"ERC725Y":[269],"EnumerableSet":[4598],"ILSP1":[467],"ILSP8IdentifiableDigitalAsset":[1841],"InvalidExtensionAddress":[594],"InvalidFunctionSelector":[589],"LSP17Extendable":[728],"LSP1Utils":[566],"LSP2Utils":[1465],"LSP4DigitalAssetMetadata":[1617],"LSP8BatchCallFailed":[1981],"LSP8CannotSendToAddressZero":[1936],"LSP8CannotUseAddressZeroAsOperator":[1933],"LSP8IdentifiableDigitalAsset":[3612],"LSP8InvalidTransferBatch":[1951],"LSP8NonExistentTokenId":[1907],"LSP8NonExistingOperator":[1943],"LSP8NotTokenOperator":[1923],"LSP8NotTokenOwner":[1916],"LSP8NotifyTokenReceiverContractMissingLSP1Interface":[1956],"LSP8NotifyTokenReceiverIsEOA":[1961],"LSP8OperatorAlreadyAuthorized":[1930],"LSP8RevokeOperatorNotAuthorized":[1999],"LSP8TokenContractCannotHoldValue":[1967],"LSP8TokenIdAlreadyMinted":[1948],"LSP8TokenIdFormatNotEditable":[1970],"LSP8TokenIdsDataEmptyArray":[1976],"LSP8TokenIdsDataLengthMismatch":[1973],"LSP8TokenOwnerCannotBeOperator":[1964],"LSP8TokenOwnerChanged":[1990],"NoExtensionFoundForFunctionSelector":[584],"TypingLeaderboardNFT":[5040],"_INTERFACEID_LSP1":[472],"_INTERFACEID_LSP8":[1846],"_LSP17_EXTENSION_PREFIX":[577],"_LSP8_TOKENID_FORMAT_KEY":[1855],"_TYPEID_LSP8_TOKENOPERATOR":[1870],"_TYPEID_LSP8_TOKENSRECIPIENT":[1867],"_TYPEID_LSP8_TOKENSSENDER":[1864]},"id":5041,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4600,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol","file":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol","id":4601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5041,"sourceUnit":441,"src":"58:108:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4602,"name":"LSP8IdentifiableDigitalAsset","nameLocations":["201:28:26"],"nodeType":"IdentifierPath","referencedDeclaration":3612,"src":"201:28:26"},"id":4603,"nodeType":"InheritanceSpecifier","src":"201:28:26"}],"canonicalName":"TypingLeaderboardNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5040,"linearizedBaseContracts":[5040,3612,728,1617,269,386,3779,3985,3725,3755,1841],"name":"TypingLeaderboardNFT","nameLocation":"177:20:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"TypingLeaderboardNFT.Difficulty","id":4607,"members":[{"id":4604,"name":"EASY","nameLocation":"262:4:26","nodeType":"EnumValue","src":"262:4:26"},{"id":4605,"name":"NORMAL","nameLocation":"276:6:26","nodeType":"EnumValue","src":"276:6:26"},{"id":4606,"name":"HARD","nameLocation":"292:4:26","nodeType":"EnumValue","src":"292:4:26"}],"name":"Difficulty","nameLocation":"241:10:26","nodeType":"EnumDefinition","src":"236:66:26"},{"canonicalName":"TypingLeaderboardNFT.Leader","id":4612,"members":[{"constant":false,"id":4609,"mutability":"mutable","name":"player","nameLocation":"339:6:26","nodeType":"VariableDeclaration","scope":4612,"src":"331:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4608,"name":"address","nodeType":"ElementaryTypeName","src":"331:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4611,"mutability":"mutable","name":"score","nameLocation":"363:5:26","nodeType":"VariableDeclaration","scope":4612,"src":"355:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4610,"name":"uint256","nodeType":"ElementaryTypeName","src":"355:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Leader","nameLocation":"314:6:26","nodeType":"StructDefinition","scope":5040,"src":"307:68:26","visibility":"public"},{"constant":false,"functionSelector":"fffc2c94","id":4618,"mutability":"mutable","name":"topScorers","nameLocation":"418:10:26","nodeType":"VariableDeclaration","scope":5040,"src":"381:47:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_struct$_Leader_$4612_storage_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => struct TypingLeaderboardNFT.Leader)"},"typeName":{"id":4617,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4614,"nodeType":"UserDefinedTypeName","pathNode":{"id":4613,"name":"Difficulty","nameLocations":["389:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4607,"src":"389:10:26"},"referencedDeclaration":4607,"src":"389:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"nodeType":"Mapping","src":"381:29:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_struct$_Leader_$4612_storage_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => struct TypingLeaderboardNFT.Leader)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4616,"nodeType":"UserDefinedTypeName","pathNode":{"id":4615,"name":"Leader","nameLocations":["403:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":4612,"src":"403:6:26"},"referencedDeclaration":4612,"src":"403:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader"}}},"visibility":"public"},{"constant":false,"functionSelector":"8f22d853","id":4625,"mutability":"mutable","name":"hasFirstPlaceNFT","nameLocation":"489:16:26","nodeType":"VariableDeclaration","scope":5040,"src":"434:71:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_Difficulty_$4607_$_t_bool_$_$","typeString":"mapping(address => mapping(enum TypingLeaderboardNFT.Difficulty => bool))"},"typeName":{"id":4624,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4619,"name":"address","nodeType":"ElementaryTypeName","src":"442:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"434:47:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_Difficulty_$4607_$_t_bool_$_$","typeString":"mapping(address => mapping(enum TypingLeaderboardNFT.Difficulty => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4623,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4621,"nodeType":"UserDefinedTypeName","pathNode":{"id":4620,"name":"Difficulty","nameLocations":["461:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4607,"src":"461:10:26"},"referencedDeclaration":4607,"src":"461:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"nodeType":"Mapping","src":"453:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_bool_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4622,"name":"bool","nodeType":"ElementaryTypeName","src":"475:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"4fc4289c","id":4630,"mutability":"mutable","name":"difficultyMetadataURIs","nameLocation":"548:22:26","nodeType":"VariableDeclaration","scope":5040,"src":"511:59:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_string_storage_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => string)"},"typeName":{"id":4629,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4627,"nodeType":"UserDefinedTypeName","pathNode":{"id":4626,"name":"Difficulty","nameLocations":["519:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4607,"src":"519:10:26"},"referencedDeclaration":4607,"src":"519:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"nodeType":"Mapping","src":"511:29:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_string_storage_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4628,"name":"string","nodeType":"ElementaryTypeName","src":"533:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":true,"id":4635,"mutability":"constant","name":"FIRST_PLACE_NFT","nameLocation":"602:15:26","nodeType":"VariableDeclaration","scope":5040,"src":"577:71:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"577:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"46495253545f504c4143455f4e4654","id":4633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"630:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c14e706f344a21eb23261ab6a4811d5599e56e890562777a6914925a5951273","typeString":"literal_string \"FIRST_PLACE_NFT\""},"value":"FIRST_PLACE_NFT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8c14e706f344a21eb23261ab6a4811d5599e56e890562777a6914925a5951273","typeString":"literal_string \"FIRST_PLACE_NFT\""}],"id":4632,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"620:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"620:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4637,"mutability":"mutable","name":"secretHash","nameLocation":"670:10:26","nodeType":"VariableDeclaration","scope":5040,"src":"654:26:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"654:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"anonymous":false,"eventSelector":"300ff980efdfcbf9315c1929dbd04369fe492b36170e95357766ec52103924f6","id":4646,"name":"ScoreUpdated","nameLocation":"693:12:26","nodeType":"EventDefinition","parameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"indexed":true,"mutability":"mutable","name":"difficulty","nameLocation":"725:10:26","nodeType":"VariableDeclaration","scope":4646,"src":"706:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},"typeName":{"id":4639,"nodeType":"UserDefinedTypeName","pathNode":{"id":4638,"name":"Difficulty","nameLocations":["706:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4607,"src":"706:10:26"},"referencedDeclaration":4607,"src":"706:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"visibility":"internal"},{"constant":false,"id":4642,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"753:6:26","nodeType":"VariableDeclaration","scope":4646,"src":"737:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4641,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4644,"indexed":false,"mutability":"mutable","name":"score","nameLocation":"769:5:26","nodeType":"VariableDeclaration","scope":4646,"src":"761:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"761:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"705:70:26"},"src":"687:89:26"},{"anonymous":false,"eventSelector":"b292d132bb6533ea558b88bbe806f164b9034ea4d33ee745e74e2dd960701812","id":4655,"name":"NFTRewarded","nameLocation":"787:11:26","nodeType":"EventDefinition","parameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"indexed":true,"mutability":"mutable","name":"difficulty","nameLocation":"818:10:26","nodeType":"VariableDeclaration","scope":4655,"src":"799:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},"typeName":{"id":4648,"nodeType":"UserDefinedTypeName","pathNode":{"id":4647,"name":"Difficulty","nameLocations":["799:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4607,"src":"799:10:26"},"referencedDeclaration":4607,"src":"799:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"visibility":"internal"},{"constant":false,"id":4651,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"846:6:26","nodeType":"VariableDeclaration","scope":4655,"src":"830:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4650,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4653,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"862:7:26","nodeType":"VariableDeclaration","scope":4655,"src":"854:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"854:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"798:72:26"},"src":"781:90:26"},{"anonymous":false,"eventSelector":"6d74bd0bfb57711860bd7d6d0648d03e2fdff362f5f46a8f91388d8f39911d08","id":4664,"name":"NFTRevoked","nameLocation":"882:10:26","nodeType":"EventDefinition","parameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4658,"indexed":true,"mutability":"mutable","name":"difficulty","nameLocation":"912:10:26","nodeType":"VariableDeclaration","scope":4664,"src":"893:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},"typeName":{"id":4657,"nodeType":"UserDefinedTypeName","pathNode":{"id":4656,"name":"Difficulty","nameLocations":["893:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4607,"src":"893:10:26"},"referencedDeclaration":4607,"src":"893:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"visibility":"internal"},{"constant":false,"id":4660,"indexed":true,"mutability":"mutable","name":"previousPlayer","nameLocation":"940:14:26","nodeType":"VariableDeclaration","scope":4664,"src":"924:30:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4659,"name":"address","nodeType":"ElementaryTypeName","src":"924:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4662,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"964:7:26","nodeType":"VariableDeclaration","scope":4664,"src":"956:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"956:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"892:80:26"},"src":"876:97:26"},{"body":{"id":4801,"nodeType":"Block","src":"1400:826:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4690,"name":"metadataURIs_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"1418:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1432:6:26","memberName":"length","nodeType":"MemberAccess","src":"1418:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"33","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1442:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1418:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742070726f766964652033206d657461646174612055524973","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1445:30:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9","typeString":"literal_string \"Must provide 3 metadata URIs\""},"value":"Must provide 3 metadata URIs"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9","typeString":"literal_string \"Must provide 3 metadata URIs\""}],"id":4689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1410:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1410:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4696,"nodeType":"ExpressionStatement","src":"1410:66:26"},{"expression":{"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4697,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"1486:10:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4701,"name":"secretCode_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"1526:11:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4699,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1509:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1513:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"1509:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1509:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4698,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1499:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1499:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1486:53:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4705,"nodeType":"ExpressionStatement","src":"1486:53:26"},{"expression":{"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4706,"name":"difficultyMetadataURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"1550:22:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_string_storage_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => string storage ref)"}},"id":4709,"indexExpression":{"expression":{"id":4707,"name":"Difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"1573:10:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Difficulty_$4607_$","typeString":"type(enum TypingLeaderboardNFT.Difficulty)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1584:4:26","memberName":"EASY","nodeType":"MemberAccess","referencedDeclaration":4604,"src":"1573:15:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1550:39:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4710,"name":"metadataURIs_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"1592:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4712,"indexExpression":{"hexValue":"30","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1606:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1592:16:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1550:58:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4714,"nodeType":"ExpressionStatement","src":"1550:58:26"},{"expression":{"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4715,"name":"difficultyMetadataURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"1618:22:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_string_storage_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => string storage ref)"}},"id":4718,"indexExpression":{"expression":{"id":4716,"name":"Difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"1641:10:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Difficulty_$4607_$","typeString":"type(enum TypingLeaderboardNFT.Difficulty)"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1652:6:26","memberName":"NORMAL","nodeType":"MemberAccess","referencedDeclaration":4605,"src":"1641:17:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1618:41:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4719,"name":"metadataURIs_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"1662:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4721,"indexExpression":{"hexValue":"31","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1662:16:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1618:60:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4723,"nodeType":"ExpressionStatement","src":"1618:60:26"},{"expression":{"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4724,"name":"difficultyMetadataURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"1688:22:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_string_storage_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => string storage ref)"}},"id":4727,"indexExpression":{"expression":{"id":4725,"name":"Difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"1711:10:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Difficulty_$4607_$","typeString":"type(enum TypingLeaderboardNFT.Difficulty)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1722:4:26","memberName":"HARD","nodeType":"MemberAccess","referencedDeclaration":4606,"src":"1711:15:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1688:39:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4728,"name":"metadataURIs_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"1730:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4730,"indexExpression":{"hexValue":"32","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1744:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1730:16:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1688:58:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4732,"nodeType":"ExpressionStatement","src":"1688:58:26"},{"body":{"id":4799,"nodeType":"Block","src":"1787:433:26","statements":[{"assignments":[4745],"declarations":[{"constant":false,"id":4745,"mutability":"mutable","name":"diff","nameLocation":"1812:4:26","nodeType":"VariableDeclaration","scope":4799,"src":"1801:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},"typeName":{"id":4744,"nodeType":"UserDefinedTypeName","pathNode":{"id":4743,"name":"Difficulty","nameLocations":["1801:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4607,"src":"1801:10:26"},"referencedDeclaration":4607,"src":"1801:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"visibility":"internal"}],"id":4749,"initialValue":{"arguments":[{"id":4747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"1830:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4746,"name":"Difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"1819:10:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Difficulty_$4607_$","typeString":"type(enum TypingLeaderboardNFT.Difficulty)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1819:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"nodeType":"VariableDeclarationStatement","src":"1801:31:26"},{"assignments":[4751],"declarations":[{"constant":false,"id":4751,"mutability":"mutable","name":"tokenId","nameLocation":"1854:7:26","nodeType":"VariableDeclaration","scope":4799,"src":"1846:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1846:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4760,"initialValue":{"arguments":[{"arguments":[{"id":4755,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"1891:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4756,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"1902:4:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},{"id":4757,"name":"FIRST_PLACE_NFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"1908:15:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4753,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1874:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1878:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"1874:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1874:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4752,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1864:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1864:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1846:79:26"},{"expression":{"arguments":[{"id":4762,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"1945:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4763,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"1956:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"74727565","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1965:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"496e697469616c20466972737420506c616365204e4654","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1971:25:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_27b0b95e111138efb8091b8726d6209b6e4009e576ed27f08a7e39a875fd0109","typeString":"literal_string \"Initial First Place NFT\""},"value":"Initial First Place NFT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_27b0b95e111138efb8091b8726d6209b6e4009e576ed27f08a7e39a875fd0109","typeString":"literal_string \"Initial First Place NFT\""}],"id":4761,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"1939:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bool,bytes memory)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1939:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4767,"nodeType":"ExpressionStatement","src":"1939:58:26"},{"expression":{"arguments":[{"id":4769,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"2029:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4770,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"2038:4:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}],"id":4768,"name":"_setTokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"2011:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_enum$_Difficulty_$4607_$returns$__$","typeString":"function (bytes32,enum TypingLeaderboardNFT.Difficulty)"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4772,"nodeType":"ExpressionStatement","src":"2011:32:26"},{"expression":{"arguments":[{"arguments":[{"id":4776,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2083:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_TypingLeaderboardNFT_$5040","typeString":"contract TypingLeaderboardNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TypingLeaderboardNFT_$5040","typeString":"contract TypingLeaderboardNFT"}],"id":4775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2075:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4774,"name":"address","nodeType":"ElementaryTypeName","src":"2075:7:26","typeDescriptions":{}}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2075:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4778,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"2090:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2099:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":4773,"name":"authorizeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"2057:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2057:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4781,"nodeType":"ExpressionStatement","src":"2057:45:26"},{"expression":{"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4782,"name":"topScorers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"2116:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_struct$_Leader_$4612_storage_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => struct TypingLeaderboardNFT.Leader storage ref)"}},"id":4784,"indexExpression":{"id":4783,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"2127:4:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2116:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage","typeString":"struct TypingLeaderboardNFT.Leader storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4786,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"2142:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4785,"name":"Leader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"2135:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Leader_$4612_storage_ptr_$","typeString":"type(struct TypingLeaderboardNFT.Leader storage pointer)"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_memory_ptr","typeString":"struct TypingLeaderboardNFT.Leader memory"}},"src":"2116:39:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage","typeString":"struct TypingLeaderboardNFT.Leader storage ref"}},"id":4790,"nodeType":"ExpressionStatement","src":"2116:39:26"},{"expression":{"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4791,"name":"hasFirstPlaceNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"2169:16:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_Difficulty_$4607_$_t_bool_$_$","typeString":"mapping(address => mapping(enum TypingLeaderboardNFT.Difficulty => bool))"}},"id":4794,"indexExpression":{"id":4792,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"2186:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2169:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_bool_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => bool)"}},"id":4795,"indexExpression":{"id":4793,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"2197:4:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2169:33:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2205:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2169:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4798,"nodeType":"ExpressionStatement","src":"2169:40:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"1775:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"33","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1779:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1775:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4800,"initializationExpression":{"assignments":[4734],"declarations":[{"constant":false,"id":4734,"mutability":"mutable","name":"i","nameLocation":"1768:1:26","nodeType":"VariableDeclaration","scope":4800,"src":"1762:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4733,"name":"uint8","nodeType":"ElementaryTypeName","src":"1762:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4736,"initialValue":{"hexValue":"30","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1762:11:26"},"loopExpression":{"expression":{"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1782:3:26","subExpression":{"id":4740,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"1782:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4742,"nodeType":"ExpressionStatement","src":"1782:3:26"},"nodeType":"ForStatement","src":"1757:463:26"}]},"id":4802,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4682,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"1276:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4683,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"1295:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4684,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"1316:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4685,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"1339:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4686,"name":"lsp8TokenIdFormat_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"1367:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4687,"kind":"baseConstructorSpecifier","modifierName":{"id":4681,"name":"LSP8IdentifiableDigitalAsset","nameLocations":["1234:28:26"],"nodeType":"IdentifierPath","referencedDeclaration":3612,"src":"1234:28:26"},"nodeType":"ModifierInvocation","src":"1234:161:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4666,"mutability":"mutable","name":"name_","nameLocation":"1014:5:26","nodeType":"VariableDeclaration","scope":4802,"src":"1000:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4665,"name":"string","nodeType":"ElementaryTypeName","src":"1000:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4668,"mutability":"mutable","name":"symbol_","nameLocation":"1043:7:26","nodeType":"VariableDeclaration","scope":4802,"src":"1029:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4667,"name":"string","nodeType":"ElementaryTypeName","src":"1029:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4670,"mutability":"mutable","name":"newOwner_","nameLocation":"1068:9:26","nodeType":"VariableDeclaration","scope":4802,"src":"1060:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4669,"name":"address","nodeType":"ElementaryTypeName","src":"1060:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4672,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"1095:14:26","nodeType":"VariableDeclaration","scope":4802,"src":"1087:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1087:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4674,"mutability":"mutable","name":"lsp8TokenIdFormat_","nameLocation":"1127:18:26","nodeType":"VariableDeclaration","scope":4802,"src":"1119:26:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1119:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4676,"mutability":"mutable","name":"secretCode_","nameLocation":"1169:11:26","nodeType":"VariableDeclaration","scope":4802,"src":"1155:25:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4675,"name":"string","nodeType":"ElementaryTypeName","src":"1155:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4679,"mutability":"mutable","name":"metadataURIs_","nameLocation":"1206:13:26","nodeType":"VariableDeclaration","scope":4802,"src":"1190:29:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4677,"name":"string","nodeType":"ElementaryTypeName","src":"1190:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4678,"nodeType":"ArrayTypeName","src":"1190:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"990:235:26"},"returnParameters":{"id":4688,"nodeType":"ParameterList","parameters":[],"src":"1400:0:26"},"scope":5040,"src":"979:1247:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4979,"nodeType":"Block","src":"2356:1383:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4816,"name":"secretCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"2414:10:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4814,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2397:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2401:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"2397:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4813,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2387:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4819,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"2430:10:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2387:53:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642073656372657420636f6465","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2454:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9","typeString":"literal_string \"Invalid secret code\""},"value":"Invalid secret code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9","typeString":"literal_string \"Invalid secret code\""}],"id":4812,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2366:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2366:119:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4823,"nodeType":"ExpressionStatement","src":"2366:119:26"},{"assignments":[4826],"declarations":[{"constant":false,"id":4826,"mutability":"mutable","name":"leader","nameLocation":"2510:6:26","nodeType":"VariableDeclaration","scope":4979,"src":"2495:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader"},"typeName":{"id":4825,"nodeType":"UserDefinedTypeName","pathNode":{"id":4824,"name":"Leader","nameLocations":["2495:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":4612,"src":"2495:6:26"},"referencedDeclaration":4612,"src":"2495:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader"}},"visibility":"internal"}],"id":4830,"initialValue":{"baseExpression":{"id":4827,"name":"topScorers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"2519:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_struct$_Leader_$4612_storage_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => struct TypingLeaderboardNFT.Leader storage ref)"}},"id":4829,"indexExpression":{"id":4828,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"2530:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2519:22:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage","typeString":"struct TypingLeaderboardNFT.Leader storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2495:46:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4832,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"2559:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4833,"name":"leader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"2567:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader storage pointer"}},"id":4834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2574:5:26","memberName":"score","nodeType":"MemberAccess","referencedDeclaration":4611,"src":"2567:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2559:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742074686520686967686573742073636f7265","id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2581:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505","typeString":"literal_string \"Not the highest score\""},"value":"Not the highest score"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505","typeString":"literal_string \"Not the highest score\""}],"id":4831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2551:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:54:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4838,"nodeType":"ExpressionStatement","src":"2551:54:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4839,"name":"leader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"2620:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader storage pointer"}},"id":4840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2627:6:26","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"2620:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4841,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2637:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2641:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2637:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2620:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4859,"nodeType":"IfStatement","src":"2616:160:26","trueBody":{"id":4858,"nodeType":"Block","src":"2649:127:26","statements":[{"expression":{"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4844,"name":"leader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"2663:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader storage pointer"}},"id":4846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2670:5:26","memberName":"score","nodeType":"MemberAccess","referencedDeclaration":4611,"src":"2663:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4847,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"2678:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2663:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4849,"nodeType":"ExpressionStatement","src":"2663:20:26"},{"eventCall":{"arguments":[{"id":4851,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"2715:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},{"expression":{"id":4852,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2727:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2731:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2727:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4854,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"2739:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4850,"name":"ScoreUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"2702:12:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Difficulty_$4607_$_t_address_$_t_uint256_$returns$__$","typeString":"function (enum TypingLeaderboardNFT.Difficulty,address,uint256)"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4856,"nodeType":"EmitStatement","src":"2697:48:26"},{"functionReturnParameters":4811,"id":4857,"nodeType":"Return","src":"2759:7:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4860,"name":"leader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"2791:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader storage pointer"}},"id":4861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2798:6:26","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"2791:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2816:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2808:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4862,"name":"address","nodeType":"ElementaryTypeName","src":"2808:7:26","typeDescriptions":{}}},"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2808:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2791:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"baseExpression":{"id":4867,"name":"hasFirstPlaceNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"2822:16:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_Difficulty_$4607_$_t_bool_$_$","typeString":"mapping(address => mapping(enum TypingLeaderboardNFT.Difficulty => bool))"}},"id":4870,"indexExpression":{"expression":{"id":4868,"name":"leader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"2839:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader storage pointer"}},"id":4869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2846:6:26","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"2839:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2822:31:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_bool_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => bool)"}},"id":4872,"indexExpression":{"id":4871,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"2854:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2822:43:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2791:74:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4908,"nodeType":"IfStatement","src":"2787:421:26","trueBody":{"id":4907,"nodeType":"Block","src":"2867:341:26","statements":[{"assignments":[4875],"declarations":[{"constant":false,"id":4875,"mutability":"mutable","name":"prevTokenId","nameLocation":"2889:11:26","nodeType":"VariableDeclaration","scope":4907,"src":"2881:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2881:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4885,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":4879,"name":"leader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"2947:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader storage pointer"}},"id":4880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2954:6:26","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"2947:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4881,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"2962:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},{"id":4882,"name":"FIRST_PLACE_NFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"2974:15:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4877,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2930:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2934:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"2930:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2930:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4876,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2903:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2903:101:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2881:123:26"},{"expression":{"arguments":[{"id":4887,"name":"prevTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"3024:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"466972737420506c616365204e4654207265766f6b6564","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3037:25:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_dfc9c7bf410492ee8db45c5fb3eb33dafd56e3dc1a6da32505fceecad8003abe","typeString":"literal_string \"First Place NFT revoked\""},"value":"First Place NFT revoked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_dfc9c7bf410492ee8db45c5fb3eb33dafd56e3dc1a6da32505fceecad8003abe","typeString":"literal_string \"First Place NFT revoked\""}],"id":4886,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"3018:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4890,"nodeType":"ExpressionStatement","src":"3018:45:26"},{"expression":{"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4891,"name":"hasFirstPlaceNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"3077:16:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_Difficulty_$4607_$_t_bool_$_$","typeString":"mapping(address => mapping(enum TypingLeaderboardNFT.Difficulty => bool))"}},"id":4895,"indexExpression":{"expression":{"id":4892,"name":"leader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"3094:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader storage pointer"}},"id":4893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3101:6:26","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"3094:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3077:31:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_bool_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => bool)"}},"id":4896,"indexExpression":{"id":4894,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"3109:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3077:43:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3123:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3077:51:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4899,"nodeType":"ExpressionStatement","src":"3077:51:26"},{"eventCall":{"arguments":[{"id":4901,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"3158:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},{"expression":{"id":4902,"name":"leader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"3170:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader storage pointer"}},"id":4903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3177:6:26","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"3170:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4904,"name":"prevTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"3185:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4900,"name":"NFTRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"3147:10:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Difficulty_$4607_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (enum TypingLeaderboardNFT.Difficulty,address,bytes32)"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3147:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4906,"nodeType":"EmitStatement","src":"3142:55:26"}]}},{"assignments":[4910],"declarations":[{"constant":false,"id":4910,"mutability":"mutable","name":"tokenId","nameLocation":"3226:7:26","nodeType":"VariableDeclaration","scope":4979,"src":"3218:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4920,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":4914,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3276:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3280:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3276:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4916,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"3288:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},{"id":4917,"name":"FIRST_PLACE_NFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"3300:15:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4912,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3259:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3263:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"3259:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3259:57:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4911,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3236:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:90:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3218:108:26"},{"expression":{"arguments":[{"expression":{"id":4922,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3342:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3346:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3342:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4924,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"3354:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"74727565","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3363:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"466972737420506c616365204e4654","id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3369:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6b3011f3358e1661c3d75d18cb29a7569d6a16b69349b08e002808c64fbe0d1","typeString":"literal_string \"First Place NFT\""},"value":"First Place NFT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6b3011f3358e1661c3d75d18cb29a7569d6a16b69349b08e002808c64fbe0d1","typeString":"literal_string \"First Place NFT\""}],"id":4921,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"3336:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bool,bytes memory)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4928,"nodeType":"ExpressionStatement","src":"3336:51:26"},{"expression":{"arguments":[{"id":4930,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"3415:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4931,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"3424:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}],"id":4929,"name":"_setTokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"3397:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_enum$_Difficulty_$4607_$returns$__$","typeString":"function (bytes32,enum TypingLeaderboardNFT.Difficulty)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4933,"nodeType":"ExpressionStatement","src":"3397:38:26"},{"expression":{"arguments":[{"arguments":[{"id":4937,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3471:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_TypingLeaderboardNFT_$5040","typeString":"contract TypingLeaderboardNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TypingLeaderboardNFT_$5040","typeString":"contract TypingLeaderboardNFT"}],"id":4936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3463:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4935,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:26","typeDescriptions":{}}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3463:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4939,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"3478:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3487:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":4934,"name":"authorizeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"3445:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3445:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4942,"nodeType":"ExpressionStatement","src":"3445:45:26"},{"expression":{"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4943,"name":"hasFirstPlaceNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"3500:16:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_Difficulty_$4607_$_t_bool_$_$","typeString":"mapping(address => mapping(enum TypingLeaderboardNFT.Difficulty => bool))"}},"id":4947,"indexExpression":{"expression":{"id":4944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3517:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3521:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3517:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3500:28:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_bool_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => bool)"}},"id":4948,"indexExpression":{"id":4946,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"3529:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3500:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3543:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3500:47:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4951,"nodeType":"ExpressionStatement","src":"3500:47:26"},{"expression":{"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4952,"name":"leader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"3558:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader storage pointer"}},"id":4954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3565:6:26","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"3558:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4955,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3574:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3578:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3574:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3558:26:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4958,"nodeType":"ExpressionStatement","src":"3558:26:26"},{"expression":{"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4959,"name":"leader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"3594:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Leader_$4612_storage_ptr","typeString":"struct TypingLeaderboardNFT.Leader storage pointer"}},"id":4961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3601:5:26","memberName":"score","nodeType":"MemberAccess","referencedDeclaration":4611,"src":"3594:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4962,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"3609:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3594:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4964,"nodeType":"ExpressionStatement","src":"3594:20:26"},{"eventCall":{"arguments":[{"id":4966,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"3643:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},{"expression":{"id":4967,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3655:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3659:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3655:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4969,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"3667:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4965,"name":"ScoreUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"3630:12:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Difficulty_$4607_$_t_address_$_t_uint256_$returns$__$","typeString":"function (enum TypingLeaderboardNFT.Difficulty,address,uint256)"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3630:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4971,"nodeType":"EmitStatement","src":"3625:48:26"},{"eventCall":{"arguments":[{"id":4973,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"3700:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},{"expression":{"id":4974,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3712:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3716:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3712:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"3724:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4972,"name":"NFTRewarded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"3688:11:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Difficulty_$4607_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (enum TypingLeaderboardNFT.Difficulty,address,bytes32)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3688:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4978,"nodeType":"EmitStatement","src":"3683:49:26"}]},"functionSelector":"cdca9f39","id":4980,"implemented":true,"kind":"function","modifiers":[],"name":"submitScore","nameLocation":"2241:11:26","nodeType":"FunctionDefinition","parameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4804,"mutability":"mutable","name":"score","nameLocation":"2270:5:26","nodeType":"VariableDeclaration","scope":4980,"src":"2262:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4807,"mutability":"mutable","name":"difficulty","nameLocation":"2296:10:26","nodeType":"VariableDeclaration","scope":4980,"src":"2285:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},"typeName":{"id":4806,"nodeType":"UserDefinedTypeName","pathNode":{"id":4805,"name":"Difficulty","nameLocations":["2285:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4607,"src":"2285:10:26"},"referencedDeclaration":4607,"src":"2285:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"visibility":"internal"},{"constant":false,"id":4809,"mutability":"mutable","name":"secretCode","nameLocation":"2330:10:26","nodeType":"VariableDeclaration","scope":4980,"src":"2316:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4808,"name":"string","nodeType":"ElementaryTypeName","src":"2316:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2252:94:26"},"returnParameters":{"id":4811,"nodeType":"ParameterList","parameters":[],"src":"2356:0:26"},"scope":5040,"src":"2232:1507:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5007,"nodeType":"Block","src":"3821:208:26","statements":[{"assignments":[4989],"declarations":[{"constant":false,"id":4989,"mutability":"mutable","name":"uri","nameLocation":"3845:3:26","nodeType":"VariableDeclaration","scope":5007,"src":"3831:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4988,"name":"string","nodeType":"ElementaryTypeName","src":"3831:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4993,"initialValue":{"baseExpression":{"id":4990,"name":"difficultyMetadataURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"3851:22:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Difficulty_$4607_$_t_string_storage_$","typeString":"mapping(enum TypingLeaderboardNFT.Difficulty => string storage ref)"}},"id":4992,"indexExpression":{"id":4991,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"3874:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3851:34:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3831:54:26"},{"assignments":[4995],"declarations":[{"constant":false,"id":4995,"mutability":"mutable","name":"metadata","nameLocation":"3908:8:26","nodeType":"VariableDeclaration","scope":5007,"src":"3895:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4994,"name":"bytes","nodeType":"ElementaryTypeName","src":"3895:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5001,"initialValue":{"arguments":[{"hexValue":"0006","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"3949:9:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863","typeString":"literal_string hex\"0006\""},"value":"\u0000\u0006"},{"id":4999,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"3972:3:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863","typeString":"literal_string hex\"0006\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4996,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3919:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3923:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"3919:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3919:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3895:90:26"},{"expression":{"arguments":[{"id":5003,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"4004:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5004,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"4013:8:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5002,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[2312],"referencedDeclaration":2312,"src":"3995:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3995:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5006,"nodeType":"ExpressionStatement","src":"3995:27:26"}]},"id":5008,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenMetadata","nameLocation":"3754:17:26","nodeType":"FunctionDefinition","parameters":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"tokenId","nameLocation":"3780:7:26","nodeType":"VariableDeclaration","scope":5008,"src":"3772:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3772:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4985,"mutability":"mutable","name":"difficulty","nameLocation":"3800:10:26","nodeType":"VariableDeclaration","scope":5008,"src":"3789:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"},"typeName":{"id":4984,"nodeType":"UserDefinedTypeName","pathNode":{"id":4983,"name":"Difficulty","nameLocations":["3789:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4607,"src":"3789:10:26"},"referencedDeclaration":4607,"src":"3789:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_Difficulty_$4607","typeString":"enum TypingLeaderboardNFT.Difficulty"}},"visibility":"internal"}],"src":"3771:40:26"},"returnParameters":{"id":4987,"nodeType":"ParameterList","parameters":[],"src":"3821:0:26"},"scope":5040,"src":"3745:284:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5019,"nodeType":"Block","src":"4115:41:26","statements":[{"expression":{"arguments":[{"id":5016,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"4141:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5015,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"4132:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5014,"id":5018,"nodeType":"Return","src":"4125:24:26"}]},"functionSelector":"8d959c24","id":5020,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenMetadata","nameLocation":"4044:16:26","nodeType":"FunctionDefinition","parameters":{"id":5011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5010,"mutability":"mutable","name":"tokenId","nameLocation":"4069:7:26","nodeType":"VariableDeclaration","scope":5020,"src":"4061:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4061:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4060:17:26"},"returnParameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5020,"src":"4101:12:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5012,"name":"bytes","nodeType":"ElementaryTypeName","src":"4101:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4100:14:26"},"scope":5040,"src":"4035:121:26","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3449],"body":{"id":5038,"nodeType":"Block","src":"4327:64:26","statements":[{"expression":{"arguments":[{"hexValue":"466972737420506c616365204e46547320617265206e6f6e2d7472616e7366657261626c65","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4344:39:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910","typeString":"literal_string \"First Place NFTs are non-transferable\""},"value":"First Place NFTs are non-transferable"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910","typeString":"literal_string \"First Place NFTs are non-transferable\""}],"id":5034,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4337:6:26","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5037,"nodeType":"ExpressionStatement","src":"4337:47:26"}]},"id":5039,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"4171:9:26","nodeType":"FunctionDefinition","overrides":{"id":5032,"nodeType":"OverrideSpecifier","overrides":[],"src":"4318:8:26"},"parameters":{"id":5031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"from","nameLocation":"4198:4:26","nodeType":"VariableDeclaration","scope":5039,"src":"4190:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5021,"name":"address","nodeType":"ElementaryTypeName","src":"4190:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5024,"mutability":"mutable","name":"to","nameLocation":"4220:2:26","nodeType":"VariableDeclaration","scope":5039,"src":"4212:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5023,"name":"address","nodeType":"ElementaryTypeName","src":"4212:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5026,"mutability":"mutable","name":"tokenId","nameLocation":"4240:7:26","nodeType":"VariableDeclaration","scope":5039,"src":"4232:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4232:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5028,"mutability":"mutable","name":"force","nameLocation":"4262:5:26","nodeType":"VariableDeclaration","scope":5039,"src":"4257:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5027,"name":"bool","nodeType":"ElementaryTypeName","src":"4257:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5030,"mutability":"mutable","name":"data","nameLocation":"4290:4:26","nodeType":"VariableDeclaration","scope":5039,"src":"4277:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5029,"name":"bytes","nodeType":"ElementaryTypeName","src":"4277:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4180:120:26"},"returnParameters":{"id":5033,"nodeType":"ParameterList","parameters":[],"src":"4327:0:26"},"scope":5040,"src":"4162:229:26","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":5041,"src":"168:4225:26","usedErrors":[330,333,336,339,584,589,594,1622,1625,1628,1907,1916,1923,1930,1933,1936,1943,1948,1951,1956,1961,1964,1967,1970,1973,1976,1981,1999]}],"src":"32:4362:26"},"id":26}},"contracts":{"@erc725/smart-contracts-v8/contracts/ERC725Y.sol":{"ERC725Y":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"payable","type":"constructor"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3636":{"entryPoint":null,"id":3636,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_msgSender_3737":{"entryPoint":200,"id":3737,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_3724":{"entryPoint":208,"id":3724,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":510,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":441,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":409,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":404,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":461,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"379:81:27","statements":[{"nodeType":"YulAssignment","src":"389:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:27"},"nodeType":"YulFunctionCall","src":"400:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:27","type":""}],"src":"334:126:27"},{"body":{"nodeType":"YulBlock","src":"511:51:27","statements":[{"nodeType":"YulAssignment","src":"521:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:27"},"nodeType":"YulFunctionCall","src":"532:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:27","type":""}],"src":"466:96:27"},{"body":{"nodeType":"YulBlock","src":"611:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:27"},"nodeType":"YulFunctionCall","src":"670:12:27"},"nodeType":"YulExpressionStatement","src":"670:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:27"},"nodeType":"YulFunctionCall","src":"641:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:27"},"nodeType":"YulFunctionCall","src":"631:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:27"},"nodeType":"YulFunctionCall","src":"624:43:27"},"nodeType":"YulIf","src":"621:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:27","type":""}],"src":"568:122:27"},{"body":{"nodeType":"YulBlock","src":"759:80:27","statements":[{"nodeType":"YulAssignment","src":"769:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:27"},"nodeType":"YulFunctionCall","src":"778:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:27"},"nodeType":"YulFunctionCall","src":"800:33:27"},"nodeType":"YulExpressionStatement","src":"800:33:27"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:27","type":""}],"src":"696:143:27"},{"body":{"nodeType":"YulBlock","src":"922:274:27","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:27"},"nodeType":"YulFunctionCall","src":"970:79:27"},"nodeType":"YulExpressionStatement","src":"970:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:27"},"nodeType":"YulFunctionCall","src":"939:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:27"},"nodeType":"YulFunctionCall","src":"935:32:27"},"nodeType":"YulIf","src":"932:119:27"},{"nodeType":"YulBlock","src":"1061:128:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:27"},"nodeType":"YulFunctionCall","src":"1147:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:27"},"nodeType":"YulFunctionCall","src":"1115:64:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:27"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:27","type":""}],"src":"845:351:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260405162001642380380620016428339818101604052810190620000299190620001fe565b620000496200003d620000c860201b60201c565b620000d060201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b0576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620000c181620000d060201b60201c565b5062000230565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c68262000199565b9050919050565b620001d881620001b9565b8114620001e457600080fd5b50565b600081519050620001f881620001cd565b92915050565b60006020828403121562000217576200021662000194565b5b60006200022784828501620001e7565b91505092915050565b61140280620002406000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461012d5780639790242114610158578063dedff9c614610174578063f2fde38b146101b15761007b565b806301ffc9a71461008057806354f6127f146100bd578063715018a6146100fa5780637f23690c14610111575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610850565b6101da565b6040516100b49190610898565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df91906108e9565b61023b565b6040516100f191906109a6565b60405180910390f35b34801561010657600080fd5b5061010f61024d565b005b61012b60048036038101906101269190610afd565b610261565b005b34801561013957600080fd5b506101426102b1565b60405161014f9190610b9a565b60405180910390f35b610172600480360381019061016d9190610d5e565b6102da565b005b34801561018057600080fd5b5061019b60048036038101906101969190610dd6565b61032a565b6040516101a89190610f2b565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190610f79565b6103db565b005b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061023457506102338261045e565b5b9050919050565b6060610246826104c8565b9050919050565b61025561056d565b61025f60006105eb565b565b61026961056d565b600034146102a3576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ad82826106af565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102e261056d565b6000341461031c576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610326828261070c565b5050565b6060815167ffffffffffffffff811115610347576103466109d2565b5b60405190808252806020026020018201604052801561037a57816020015b60608152602001906001900390816103655790505b50905060005b82518110156103d5576103ac83828151811061039f5761039e610fa6565b5b60200260200101516104c8565b8282815181106103bf576103be610fa6565b5b6020026020010181905250806001019050610380565b50919050565b6103e361056d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044990611058565b60405180910390fd5b61045b816105eb565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606001600083815260200190815260200160002080546104e8906110a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610514906110a7565b80156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b50505050509050919050565b6105756107dc565b73ffffffffffffffffffffffffffffffffffffffff166105936102b1565b73ffffffffffffffffffffffffffffffffffffffff16146105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e090611124565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b806001600084815260200190815260200160002090816106cf91906112fa565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405161070091906109a6565b60405180910390a25050565b8051825114610747576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000825103610782576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156107d7576107cc8382815181106107a4576107a3610fa6565b5b60200260200101518383815181106107bf576107be610fa6565b5b60200260200101516106af565b806001019050610785565b505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61082d816107f8565b811461083857600080fd5b50565b60008135905061084a81610824565b92915050565b600060208284031215610866576108656107ee565b5b60006108748482850161083b565b91505092915050565b60008115159050919050565b6108928161087d565b82525050565b60006020820190506108ad6000830184610889565b92915050565b6000819050919050565b6108c6816108b3565b81146108d157600080fd5b50565b6000813590506108e3816108bd565b92915050565b6000602082840312156108ff576108fe6107ee565b5b600061090d848285016108d4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610950578082015181840152602081019050610935565b60008484015250505050565b6000601f19601f8301169050919050565b600061097882610916565b6109828185610921565b9350610992818560208601610932565b61099b8161095c565b840191505092915050565b600060208201905081810360008301526109c0818461096d565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a0a8261095c565b810181811067ffffffffffffffff82111715610a2957610a286109d2565b5b80604052505050565b6000610a3c6107e4565b9050610a488282610a01565b919050565b600067ffffffffffffffff821115610a6857610a676109d2565b5b610a718261095c565b9050602081019050919050565b82818337600083830152505050565b6000610aa0610a9b84610a4d565b610a32565b905082815260208101848484011115610abc57610abb6109cd565b5b610ac7848285610a7e565b509392505050565b600082601f830112610ae457610ae36109c8565b5b8135610af4848260208601610a8d565b91505092915050565b60008060408385031215610b1457610b136107ee565b5b6000610b22858286016108d4565b925050602083013567ffffffffffffffff811115610b4357610b426107f3565b5b610b4f85828601610acf565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8482610b59565b9050919050565b610b9481610b79565b82525050565b6000602082019050610baf6000830184610b8b565b92915050565b600067ffffffffffffffff821115610bd057610bcf6109d2565b5b602082029050602081019050919050565b600080fd5b6000610bf9610bf484610bb5565b610a32565b90508083825260208201905060208402830185811115610c1c57610c1b610be1565b5b835b81811015610c455780610c3188826108d4565b845260208401935050602081019050610c1e565b5050509392505050565b600082601f830112610c6457610c636109c8565b5b8135610c74848260208601610be6565b91505092915050565b600067ffffffffffffffff821115610c9857610c976109d2565b5b602082029050602081019050919050565b6000610cbc610cb784610c7d565b610a32565b90508083825260208201905060208402830185811115610cdf57610cde610be1565b5b835b81811015610d2657803567ffffffffffffffff811115610d0457610d036109c8565b5b808601610d118982610acf565b85526020850194505050602081019050610ce1565b5050509392505050565b600082601f830112610d4557610d446109c8565b5b8135610d55848260208601610ca9565b91505092915050565b60008060408385031215610d7557610d746107ee565b5b600083013567ffffffffffffffff811115610d9357610d926107f3565b5b610d9f85828601610c4f565b925050602083013567ffffffffffffffff811115610dc057610dbf6107f3565b5b610dcc85828601610d30565b9150509250929050565b600060208284031215610dec57610deb6107ee565b5b600082013567ffffffffffffffff811115610e0a57610e096107f3565b5b610e1684828501610c4f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610e6782610916565b610e718185610e4b565b9350610e81818560208601610932565b610e8a8161095c565b840191505092915050565b6000610ea18383610e5c565b905092915050565b6000602082019050919050565b6000610ec182610e1f565b610ecb8185610e2a565b935083602082028501610edd85610e3b565b8060005b85811015610f195784840389528151610efa8582610e95565b9450610f0583610ea9565b925060208a01995050600181019050610ee1565b50829750879550505050505092915050565b60006020820190508181036000830152610f458184610eb6565b905092915050565b610f5681610b79565b8114610f6157600080fd5b50565b600081359050610f7381610f4d565b92915050565b600060208284031215610f8f57610f8e6107ee565b5b6000610f9d84828501610f64565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611042602683610fd5565b915061104d82610fe6565b604082019050919050565b6000602082019050818103600083015261107181611035565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110bf57607f821691505b6020821081036110d2576110d1611078565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061110e602083610fd5565b9150611119826110d8565b602082019050919050565b6000602082019050818103600083015261113d81611101565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111a67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611169565b6111b08683611169565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006111f76111f26111ed846111c8565b6111d2565b6111c8565b9050919050565b6000819050919050565b611211836111dc565b61122561121d826111fe565b848454611176565b825550505050565b600090565b61123a61122d565b611245818484611208565b505050565b5b818110156112695761125e600082611232565b60018101905061124b565b5050565b601f8211156112ae5761127f81611144565b61128884611159565b81016020851015611297578190505b6112ab6112a385611159565b83018261124a565b50505b505050565b600082821c905092915050565b60006112d1600019846008026112b3565b1980831691505092915050565b60006112ea83836112c0565b9150826002028217905092915050565b61130382610916565b67ffffffffffffffff81111561131c5761131b6109d2565b5b61132682546110a7565b61133182828561126d565b600060209050601f8311600181146113645760008415611352578287015190505b61135c85826112de565b8655506113c4565b601f19841661137286611144565b60005b8281101561139a57848901518255600182019150602085019450602081019050611375565b868310156113b757848901516113b3601f8916826112c0565b8355505b6001600288020188555050505b50505050505056fea26469706673582212201f5cca8c76f06eacba4b2ef498c7cf16fc25ded315f4f4cde92f565fdbbb998864736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0x1642 CODESIZE SUB DUP1 PUSH3 0x1642 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x1FE JUMP JUMPDEST PUSH3 0x49 PUSH3 0x3D PUSH3 0xC8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xD0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC1 DUP2 PUSH3 0xD0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x230 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C6 DUP3 PUSH3 0x199 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D8 DUP2 PUSH3 0x1B9 JUMP JUMPDEST DUP2 EQ PUSH3 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F8 DUP2 PUSH3 0x1CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x217 JUMPI PUSH3 0x216 PUSH3 0x194 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x227 DUP5 DUP3 DUP6 ADD PUSH3 0x1E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1402 DUP1 PUSH3 0x240 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B1 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x234 JUMPI POP PUSH2 0x233 DUP3 PUSH2 0x45E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x246 DUP3 PUSH2 0x4C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x255 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 PUSH2 0x5EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x269 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AD DUP3 DUP3 PUSH2 0x6AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x326 DUP3 DUP3 PUSH2 0x70C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x347 JUMPI PUSH2 0x346 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x37A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x365 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x3AC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x39F JUMPI PUSH2 0x39E PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4C8 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3BF JUMPI PUSH2 0x3BE PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x380 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x449 SWAP1 PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x45B DUP2 PUSH2 0x5EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x4E8 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x514 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x561 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x536 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x561 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x544 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x575 PUSH2 0x7DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x593 PUSH2 0x2B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E0 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD SUB PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x7D7 JUMPI PUSH2 0x7CC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7A4 JUMPI PUSH2 0x7A3 PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7BF JUMPI PUSH2 0x7BE PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6AF JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x785 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82D DUP2 PUSH2 0x7F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x84A DUP2 PUSH2 0x824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x874 DUP5 DUP3 DUP6 ADD PUSH2 0x83B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x892 DUP2 PUSH2 0x87D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x889 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C6 DUP2 PUSH2 0x8B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E3 DUP2 PUSH2 0x8BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FF JUMPI PUSH2 0x8FE PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x90D DUP5 DUP3 DUP6 ADD PUSH2 0x8D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x978 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x982 DUP2 DUP6 PUSH2 0x921 JUMP JUMPDEST SWAP4 POP PUSH2 0x992 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x932 JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0x95C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9C0 DUP2 DUP5 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA0A DUP3 PUSH2 0x95C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA29 JUMPI PUSH2 0xA28 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH2 0xA48 DUP3 DUP3 PUSH2 0xA01 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA68 JUMPI PUSH2 0xA67 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH2 0xA71 DUP3 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 PUSH2 0xA9B DUP5 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0x9CD JUMP JUMPDEST JUMPDEST PUSH2 0xAC7 DUP5 DUP3 DUP6 PUSH2 0xA7E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAE4 JUMPI PUSH2 0xAE3 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAF4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB14 JUMPI PUSH2 0xB13 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB22 DUP6 DUP3 DUP7 ADD PUSH2 0x8D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB43 JUMPI PUSH2 0xB42 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xB4F DUP6 DUP3 DUP7 ADD PUSH2 0xACF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB84 DUP3 PUSH2 0xB59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB94 DUP2 PUSH2 0xB79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBD0 JUMPI PUSH2 0xBCF PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBF9 PUSH2 0xBF4 DUP5 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1B PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC45 JUMPI DUP1 PUSH2 0xC31 DUP9 DUP3 PUSH2 0x8D4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC1E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC74 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC98 JUMPI PUSH2 0xC97 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBC PUSH2 0xCB7 DUP5 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xCDF JUMPI PUSH2 0xCDE PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD26 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xD11 DUP10 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCE1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD45 JUMPI PUSH2 0xD44 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD55 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD92 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xD9F DUP6 DUP3 DUP7 ADD PUSH2 0xC4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xDCC DUP6 DUP3 DUP7 ADD PUSH2 0xD30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEC JUMPI PUSH2 0xDEB PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0A JUMPI PUSH2 0xE09 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xE16 DUP5 DUP3 DUP6 ADD PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE67 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH2 0xE71 DUP2 DUP6 PUSH2 0xE4B JUMP JUMPDEST SWAP4 POP PUSH2 0xE81 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x932 JUMP JUMPDEST PUSH2 0xE8A DUP2 PUSH2 0x95C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA1 DUP4 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC1 DUP3 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0xECB DUP2 DUP6 PUSH2 0xE2A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xEDD DUP6 PUSH2 0xE3B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xF19 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xEFA DUP6 DUP3 PUSH2 0xE95 JUMP JUMPDEST SWAP5 POP PUSH2 0xF05 DUP4 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xEE1 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF45 DUP2 DUP5 PUSH2 0xEB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF56 DUP2 PUSH2 0xB79 JUMP JUMPDEST DUP2 EQ PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF73 DUP2 PUSH2 0xF4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8E PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF9D DUP5 DUP3 DUP6 ADD PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1042 PUSH1 0x26 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x104D DUP3 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1071 DUP2 PUSH2 0x1035 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10D2 JUMPI PUSH2 0x10D1 PUSH2 0x1078 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110E PUSH1 0x20 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1119 DUP3 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x113D DUP2 PUSH2 0x1101 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x11A6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x11B0 DUP7 DUP4 PUSH2 0x1169 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 PUSH2 0x11F2 PUSH2 0x11ED DUP5 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1211 DUP4 PUSH2 0x11DC JUMP JUMPDEST PUSH2 0x1225 PUSH2 0x121D DUP3 PUSH2 0x11FE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1176 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x123A PUSH2 0x122D JUMP JUMPDEST PUSH2 0x1245 DUP2 DUP5 DUP5 PUSH2 0x1208 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1269 JUMPI PUSH2 0x125E PUSH1 0x0 DUP3 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x124B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x12AE JUMPI PUSH2 0x127F DUP2 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x1288 DUP5 PUSH2 0x1159 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1297 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x12AB PUSH2 0x12A3 DUP6 PUSH2 0x1159 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x124A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x12B3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EA DUP4 DUP4 PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1303 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x131C JUMPI PUSH2 0x131B PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH2 0x1326 DUP3 SLOAD PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x1331 DUP3 DUP3 DUP6 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1364 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1352 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x135C DUP6 DUP3 PUSH2 0x12DE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1372 DUP7 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x139A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1375 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x13B7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x13B3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x12C0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0x5C 0xCA DUP13 PUSH23 0xF06EACBA4B2EF498C7CF16FC25DED315F4F4CDE92F565F 0xDB 0xBB SWAP10 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1009:6184:0:-:0;;;1557:208;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:20;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1637:1:0;1613:26;;:12;:26;;;1609:100;;1662:36;;;;;;;;;;;;;;1609:100;1718:40;1745:12;1718:26;;;:40;;:::i;:::-;1557:208;1009:6184;;655:96:21;708:7;734:10;727:17;;655:96;:::o;2426:187:20:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:27:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1009:6184:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_3667":{"entryPoint":1389,"id":3667,"parameterSlots":0,"returnSlots":0},"@_getData_176":{"entryPoint":1224,"id":176,"parameterSlots":1,"returnSlots":1},"@_msgSender_3737":{"entryPoint":2012,"id":3737,"parameterSlots":0,"returnSlots":1},"@_setDataBatch_249":{"entryPoint":1804,"id":249,"parameterSlots":2,"returnSlots":0},"@_setData_196":{"entryPoint":1711,"id":196,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_3724":{"entryPoint":1515,"id":3724,"parameterSlots":1,"returnSlots":0},"@getDataBatch_111":{"entryPoint":810,"id":111,"parameterSlots":1,"returnSlots":1},"@getData_64":{"entryPoint":571,"id":64,"parameterSlots":1,"returnSlots":1},"@owner_3653":{"entryPoint":689,"id":3653,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_3681":{"entryPoint":589,"id":3681,"parameterSlots":0,"returnSlots":0},"@setDataBatch_163":{"entryPoint":730,"id":163,"parameterSlots":2,"returnSlots":0},"@setData_136":{"entryPoint":609,"id":136,"parameterSlots":2,"returnSlots":0},"@supportsInterface_268":{"entryPoint":474,"id":268,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3778":{"entryPoint":1118,"id":3778,"parameterSlots":1,"returnSlots":1},"@transferOwnership_3704":{"entryPoint":987,"id":3704,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":3046,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3241,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":2701,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":3151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3376,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":2107,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":2767,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":3542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3422,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":2281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":2813,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":2128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":3733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2955,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":3766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2185,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":3676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":4149,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":4353,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4184,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":2610,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2020,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":2997,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3197,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":2637,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3643,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":4420,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3615,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2326,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3753,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":3626,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":3659,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2337,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4053,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":4717,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2173,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2227,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":2040,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2905,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4552,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":4682,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":4572,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":4858,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":2686,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2354,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":4441,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4263,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":4830,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2561,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":4562,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":4800,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":4216,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4006,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2514,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":4606,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2504,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3041,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2509,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2035,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2030,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2396,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":4457,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":4787,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":4658,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":4070,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":4312,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":4470,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":4616,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2237,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":2084,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":4653,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22278:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"378:105:27","statements":[{"nodeType":"YulAssignment","src":"388:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:27"},"nodeType":"YulFunctionCall","src":"399:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:27"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:27","type":""}],"src":"334:149:27"},{"body":{"nodeType":"YulBlock","src":"531:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:27"},"nodeType":"YulFunctionCall","src":"589:12:27"},"nodeType":"YulExpressionStatement","src":"589:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:27"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:27"},"nodeType":"YulFunctionCall","src":"561:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:27"},"nodeType":"YulFunctionCall","src":"551:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:27"},"nodeType":"YulFunctionCall","src":"544:42:27"},"nodeType":"YulIf","src":"541:62:27"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:27","type":""}],"src":"489:120:27"},{"body":{"nodeType":"YulBlock","src":"666:86:27","statements":[{"nodeType":"YulAssignment","src":"676:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:27"},"nodeType":"YulFunctionCall","src":"685:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:27"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:27"},"nodeType":"YulFunctionCall","src":"714:32:27"},"nodeType":"YulExpressionStatement","src":"714:32:27"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:27","type":""}],"src":"615:137:27"},{"body":{"nodeType":"YulBlock","src":"823:262:27","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:27"},"nodeType":"YulFunctionCall","src":"871:79:27"},"nodeType":"YulExpressionStatement","src":"871:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:27"},"nodeType":"YulFunctionCall","src":"840:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:27"},"nodeType":"YulFunctionCall","src":"836:32:27"},"nodeType":"YulIf","src":"833:119:27"},{"nodeType":"YulBlock","src":"962:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:27"},"nodeType":"YulFunctionCall","src":"1036:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:27"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:27"},"nodeType":"YulFunctionCall","src":"1016:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:27","type":""}],"src":"758:327:27"},{"body":{"nodeType":"YulBlock","src":"1133:48:27","statements":[{"nodeType":"YulAssignment","src":"1143:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:27"},"nodeType":"YulFunctionCall","src":"1161:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:27"},"nodeType":"YulFunctionCall","src":"1154:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:27","type":""}],"src":"1091:90:27"},{"body":{"nodeType":"YulBlock","src":"1246:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:27"},"nodeType":"YulFunctionCall","src":"1268:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:27"},"nodeType":"YulFunctionCall","src":"1256:34:27"},"nodeType":"YulExpressionStatement","src":"1256:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:27","type":""}],"src":"1187:109:27"},{"body":{"nodeType":"YulBlock","src":"1394:118:27","statements":[{"nodeType":"YulAssignment","src":"1404:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:27"},"nodeType":"YulFunctionCall","src":"1412:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:27"},"nodeType":"YulFunctionCall","src":"1487:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:27"},"nodeType":"YulFunctionCall","src":"1440:65:27"},"nodeType":"YulExpressionStatement","src":"1440:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:27","type":""}],"src":"1302:210:27"},{"body":{"nodeType":"YulBlock","src":"1563:32:27","statements":[{"nodeType":"YulAssignment","src":"1573:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:27"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:27","type":""}],"src":"1518:77:27"},{"body":{"nodeType":"YulBlock","src":"1644:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"1701:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1710:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1703:6:27"},"nodeType":"YulFunctionCall","src":"1703:12:27"},"nodeType":"YulExpressionStatement","src":"1703:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1667:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1692:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1674:17:27"},"nodeType":"YulFunctionCall","src":"1674:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1664:2:27"},"nodeType":"YulFunctionCall","src":"1664:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1657:6:27"},"nodeType":"YulFunctionCall","src":"1657:43:27"},"nodeType":"YulIf","src":"1654:63:27"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:27","type":""}],"src":"1601:122:27"},{"body":{"nodeType":"YulBlock","src":"1781:87:27","statements":[{"nodeType":"YulAssignment","src":"1791:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1800:12:27"},"nodeType":"YulFunctionCall","src":"1800:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1791:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1856:5:27"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1829:26:27"},"nodeType":"YulFunctionCall","src":"1829:33:27"},"nodeType":"YulExpressionStatement","src":"1829:33:27"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1759:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1767:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:27","type":""}],"src":"1729:139:27"},{"body":{"nodeType":"YulBlock","src":"1940:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"1986:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1988:77:27"},"nodeType":"YulFunctionCall","src":"1988:79:27"},"nodeType":"YulExpressionStatement","src":"1988:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1961:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1957:3:27"},"nodeType":"YulFunctionCall","src":"1957:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1982:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1953:3:27"},"nodeType":"YulFunctionCall","src":"1953:32:27"},"nodeType":"YulIf","src":"1950:119:27"},{"nodeType":"YulBlock","src":"2079:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2094:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2108:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2098:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2123:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2169:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:27"},"nodeType":"YulFunctionCall","src":"2154:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2178:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2133:20:27"},"nodeType":"YulFunctionCall","src":"2133:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2123:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1910:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1921:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1933:6:27","type":""}],"src":"1874:329:27"},{"body":{"nodeType":"YulBlock","src":"2267:40:27","statements":[{"nodeType":"YulAssignment","src":"2278:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2294:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2288:5:27"},"nodeType":"YulFunctionCall","src":"2288:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2278:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2250:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2260:6:27","type":""}],"src":"2209:98:27"},{"body":{"nodeType":"YulBlock","src":"2408:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2425:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2430:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2418:6:27"},"nodeType":"YulFunctionCall","src":"2418:19:27"},"nodeType":"YulExpressionStatement","src":"2418:19:27"},{"nodeType":"YulAssignment","src":"2446:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2465:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"2470:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:27"},"nodeType":"YulFunctionCall","src":"2461:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2446:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2380:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"2385:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2396:11:27","type":""}],"src":"2313:168:27"},{"body":{"nodeType":"YulBlock","src":"2549:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2559:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2568:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2563:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2628:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2653:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"2658:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2649:3:27"},"nodeType":"YulFunctionCall","src":"2649:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2672:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"2677:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2668:3:27"},"nodeType":"YulFunctionCall","src":"2668:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2662:5:27"},"nodeType":"YulFunctionCall","src":"2662:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2642:6:27"},"nodeType":"YulFunctionCall","src":"2642:39:27"},"nodeType":"YulExpressionStatement","src":"2642:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2589:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"2592:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2586:2:27"},"nodeType":"YulFunctionCall","src":"2586:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2600:19:27","statements":[{"nodeType":"YulAssignment","src":"2602:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2611:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"2614:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2607:3:27"},"nodeType":"YulFunctionCall","src":"2607:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2602:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"2582:3:27","statements":[]},"src":"2578:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2711:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2716:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:27"},"nodeType":"YulFunctionCall","src":"2707:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"2725:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2700:6:27"},"nodeType":"YulFunctionCall","src":"2700:27:27"},"nodeType":"YulExpressionStatement","src":"2700:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2531:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2536:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"2541:6:27","type":""}],"src":"2487:246:27"},{"body":{"nodeType":"YulBlock","src":"2787:54:27","statements":[{"nodeType":"YulAssignment","src":"2797:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2815:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2822:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2811:3:27"},"nodeType":"YulFunctionCall","src":"2811:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2831:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2827:3:27"},"nodeType":"YulFunctionCall","src":"2827:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2807:3:27"},"nodeType":"YulFunctionCall","src":"2807:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2797:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2770:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2780:6:27","type":""}],"src":"2739:102:27"},{"body":{"nodeType":"YulBlock","src":"2937:283:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2947:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2993:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2961:31:27"},"nodeType":"YulFunctionCall","src":"2961:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2951:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3008:77:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3073:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"3078:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3015:57:27"},"nodeType":"YulFunctionCall","src":"3015:70:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3008:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"3140:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3129:3:27"},"nodeType":"YulFunctionCall","src":"3129:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"3147:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"3152:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3094:34:27"},"nodeType":"YulFunctionCall","src":"3094:65:27"},"nodeType":"YulExpressionStatement","src":"3094:65:27"},{"nodeType":"YulAssignment","src":"3168:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3179:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3206:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3184:21:27"},"nodeType":"YulFunctionCall","src":"3184:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:27"},"nodeType":"YulFunctionCall","src":"3175:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3168:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2918:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2925:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2933:3:27","type":""}],"src":"2847:373:27"},{"body":{"nodeType":"YulBlock","src":"3342:193:27","statements":[{"nodeType":"YulAssignment","src":"3352:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3375:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3360:3:27"},"nodeType":"YulFunctionCall","src":"3360:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3352:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3399:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3410:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3395:3:27"},"nodeType":"YulFunctionCall","src":"3395:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3418:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3424:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3414:3:27"},"nodeType":"YulFunctionCall","src":"3414:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3388:6:27"},"nodeType":"YulFunctionCall","src":"3388:47:27"},"nodeType":"YulExpressionStatement","src":"3388:47:27"},{"nodeType":"YulAssignment","src":"3444:84:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3514:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"3523:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3452:61:27"},"nodeType":"YulFunctionCall","src":"3452:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3444:4:27"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3314:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3326:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3337:4:27","type":""}],"src":"3226:309:27"},{"body":{"nodeType":"YulBlock","src":"3630:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3647:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3650:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3640:6:27"},"nodeType":"YulFunctionCall","src":"3640:12:27"},"nodeType":"YulExpressionStatement","src":"3640:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3541:117:27"},{"body":{"nodeType":"YulBlock","src":"3753:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3770:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3773:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3763:6:27"},"nodeType":"YulFunctionCall","src":"3763:12:27"},"nodeType":"YulExpressionStatement","src":"3763:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3664:117:27"},{"body":{"nodeType":"YulBlock","src":"3815:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3832:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3835:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3825:6:27"},"nodeType":"YulFunctionCall","src":"3825:88:27"},"nodeType":"YulExpressionStatement","src":"3825:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3929:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3932:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3922:6:27"},"nodeType":"YulFunctionCall","src":"3922:15:27"},"nodeType":"YulExpressionStatement","src":"3922:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3953:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3956:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3946:6:27"},"nodeType":"YulFunctionCall","src":"3946:15:27"},"nodeType":"YulExpressionStatement","src":"3946:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3787:180:27"},{"body":{"nodeType":"YulBlock","src":"4016:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4026:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4048:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4078:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4056:21:27"},"nodeType":"YulFunctionCall","src":"4056:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4044:3:27"},"nodeType":"YulFunctionCall","src":"4044:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4030:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4195:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4197:16:27"},"nodeType":"YulFunctionCall","src":"4197:18:27"},"nodeType":"YulExpressionStatement","src":"4197:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4138:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"4150:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4135:2:27"},"nodeType":"YulFunctionCall","src":"4135:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4174:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4186:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4171:2:27"},"nodeType":"YulFunctionCall","src":"4171:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4132:2:27"},"nodeType":"YulFunctionCall","src":"4132:62:27"},"nodeType":"YulIf","src":"4129:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4233:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4237:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4226:6:27"},"nodeType":"YulFunctionCall","src":"4226:22:27"},"nodeType":"YulExpressionStatement","src":"4226:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4002:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"4010:4:27","type":""}],"src":"3973:281:27"},{"body":{"nodeType":"YulBlock","src":"4301:88:27","statements":[{"nodeType":"YulAssignment","src":"4311:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4321:18:27"},"nodeType":"YulFunctionCall","src":"4321:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4311:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4370:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"4378:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4350:19:27"},"nodeType":"YulFunctionCall","src":"4350:33:27"},"nodeType":"YulExpressionStatement","src":"4350:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4285:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4294:6:27","type":""}],"src":"4260:129:27"},{"body":{"nodeType":"YulBlock","src":"4461:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"4566:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4568:16:27"},"nodeType":"YulFunctionCall","src":"4568:18:27"},"nodeType":"YulExpressionStatement","src":"4568:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4538:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4546:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4535:2:27"},"nodeType":"YulFunctionCall","src":"4535:30:27"},"nodeType":"YulIf","src":"4532:56:27"},{"nodeType":"YulAssignment","src":"4598:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4628:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4606:21:27"},"nodeType":"YulFunctionCall","src":"4606:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4598:4:27"}]},{"nodeType":"YulAssignment","src":"4672:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4684:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"4690:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4680:3:27"},"nodeType":"YulFunctionCall","src":"4680:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4672:4:27"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4445:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4456:4:27","type":""}],"src":"4395:307:27"},{"body":{"nodeType":"YulBlock","src":"4772:82:27","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4795:3:27"},{"name":"src","nodeType":"YulIdentifier","src":"4800:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"4805:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4782:12:27"},"nodeType":"YulFunctionCall","src":"4782:30:27"},"nodeType":"YulExpressionStatement","src":"4782:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4832:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"4837:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4828:3:27"},"nodeType":"YulFunctionCall","src":"4828:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"4846:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4821:6:27"},"nodeType":"YulFunctionCall","src":"4821:27:27"},"nodeType":"YulExpressionStatement","src":"4821:27:27"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4754:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4759:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"4764:6:27","type":""}],"src":"4708:146:27"},{"body":{"nodeType":"YulBlock","src":"4943:340:27","statements":[{"nodeType":"YulAssignment","src":"4953:74:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5019:6:27"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4978:40:27"},"nodeType":"YulFunctionCall","src":"4978:48:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4962:15:27"},"nodeType":"YulFunctionCall","src":"4962:65:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4953:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5043:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"5050:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5036:6:27"},"nodeType":"YulFunctionCall","src":"5036:21:27"},"nodeType":"YulExpressionStatement","src":"5036:21:27"},{"nodeType":"YulVariableDeclaration","src":"5066:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5081:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5088:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5077:3:27"},"nodeType":"YulFunctionCall","src":"5077:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5070:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5131:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"5133:77:27"},"nodeType":"YulFunctionCall","src":"5133:79:27"},"nodeType":"YulExpressionStatement","src":"5133:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5112:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"5117:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5108:3:27"},"nodeType":"YulFunctionCall","src":"5108:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"5126:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5105:2:27"},"nodeType":"YulFunctionCall","src":"5105:25:27"},"nodeType":"YulIf","src":"5102:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5260:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"5265:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"5270:6:27"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5223:36:27"},"nodeType":"YulFunctionCall","src":"5223:54:27"},"nodeType":"YulExpressionStatement","src":"5223:54:27"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4916:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"4921:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"4929:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4937:5:27","type":""}],"src":"4860:423:27"},{"body":{"nodeType":"YulBlock","src":"5363:277:27","statements":[{"body":{"nodeType":"YulBlock","src":"5412:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5414:77:27"},"nodeType":"YulFunctionCall","src":"5414:79:27"},"nodeType":"YulExpressionStatement","src":"5414:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5391:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5399:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5387:3:27"},"nodeType":"YulFunctionCall","src":"5387:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"5406:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5383:3:27"},"nodeType":"YulFunctionCall","src":"5383:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5376:6:27"},"nodeType":"YulFunctionCall","src":"5376:35:27"},"nodeType":"YulIf","src":"5373:122:27"},{"nodeType":"YulVariableDeclaration","src":"5504:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5531:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5518:12:27"},"nodeType":"YulFunctionCall","src":"5518:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5508:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5547:87:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5607:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5615:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5603:3:27"},"nodeType":"YulFunctionCall","src":"5603:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"5622:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"5630:3:27"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5556:46:27"},"nodeType":"YulFunctionCall","src":"5556:78:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5547:5:27"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5341:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"5349:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5357:5:27","type":""}],"src":"5302:338:27"},{"body":{"nodeType":"YulBlock","src":"5738:560:27","statements":[{"body":{"nodeType":"YulBlock","src":"5784:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5786:77:27"},"nodeType":"YulFunctionCall","src":"5786:79:27"},"nodeType":"YulExpressionStatement","src":"5786:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5759:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5768:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5755:3:27"},"nodeType":"YulFunctionCall","src":"5755:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5780:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5751:3:27"},"nodeType":"YulFunctionCall","src":"5751:32:27"},"nodeType":"YulIf","src":"5748:119:27"},{"nodeType":"YulBlock","src":"5877:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5892:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5906:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5896:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5921:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5956:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5967:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5952:3:27"},"nodeType":"YulFunctionCall","src":"5952:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5976:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5931:20:27"},"nodeType":"YulFunctionCall","src":"5931:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5921:6:27"}]}]},{"nodeType":"YulBlock","src":"6004:287:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6019:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6050:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6061:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6046:3:27"},"nodeType":"YulFunctionCall","src":"6046:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6033:12:27"},"nodeType":"YulFunctionCall","src":"6033:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6023:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6112:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6114:77:27"},"nodeType":"YulFunctionCall","src":"6114:79:27"},"nodeType":"YulExpressionStatement","src":"6114:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6084:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6092:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6081:2:27"},"nodeType":"YulFunctionCall","src":"6081:30:27"},"nodeType":"YulIf","src":"6078:117:27"},{"nodeType":"YulAssignment","src":"6209:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6253:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6264:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6249:3:27"},"nodeType":"YulFunctionCall","src":"6249:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6273:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6219:29:27"},"nodeType":"YulFunctionCall","src":"6219:62:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6209:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5700:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5711:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5723:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5731:6:27","type":""}],"src":"5646:652:27"},{"body":{"nodeType":"YulBlock","src":"6349:81:27","statements":[{"nodeType":"YulAssignment","src":"6359:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6374:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6381:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6370:3:27"},"nodeType":"YulFunctionCall","src":"6370:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6359:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6331:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6341:7:27","type":""}],"src":"6304:126:27"},{"body":{"nodeType":"YulBlock","src":"6481:51:27","statements":[{"nodeType":"YulAssignment","src":"6491:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6520:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6502:17:27"},"nodeType":"YulFunctionCall","src":"6502:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6491:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6463:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6473:7:27","type":""}],"src":"6436:96:27"},{"body":{"nodeType":"YulBlock","src":"6603:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6620:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6643:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6625:17:27"},"nodeType":"YulFunctionCall","src":"6625:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6613:6:27"},"nodeType":"YulFunctionCall","src":"6613:37:27"},"nodeType":"YulExpressionStatement","src":"6613:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6591:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6598:3:27","type":""}],"src":"6538:118:27"},{"body":{"nodeType":"YulBlock","src":"6760:124:27","statements":[{"nodeType":"YulAssignment","src":"6770:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6782:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6793:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6778:3:27"},"nodeType":"YulFunctionCall","src":"6778:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6770:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6850:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6863:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6874:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6859:3:27"},"nodeType":"YulFunctionCall","src":"6859:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6806:43:27"},"nodeType":"YulFunctionCall","src":"6806:71:27"},"nodeType":"YulExpressionStatement","src":"6806:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6732:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6744:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6755:4:27","type":""}],"src":"6662:222:27"},{"body":{"nodeType":"YulBlock","src":"6972:229:27","statements":[{"body":{"nodeType":"YulBlock","src":"7077:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7079:16:27"},"nodeType":"YulFunctionCall","src":"7079:18:27"},"nodeType":"YulExpressionStatement","src":"7079:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7049:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7057:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7046:2:27"},"nodeType":"YulFunctionCall","src":"7046:30:27"},"nodeType":"YulIf","src":"7043:56:27"},{"nodeType":"YulAssignment","src":"7109:25:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7121:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7129:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7117:3:27"},"nodeType":"YulFunctionCall","src":"7117:17:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7109:4:27"}]},{"nodeType":"YulAssignment","src":"7171:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7183:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"7189:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7179:3:27"},"nodeType":"YulFunctionCall","src":"7179:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7171:4:27"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6956:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6967:4:27","type":""}],"src":"6890:311:27"},{"body":{"nodeType":"YulBlock","src":"7296:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7313:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7316:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7306:6:27"},"nodeType":"YulFunctionCall","src":"7306:12:27"},"nodeType":"YulExpressionStatement","src":"7306:12:27"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7207:117:27"},{"body":{"nodeType":"YulBlock","src":"7449:608:27","statements":[{"nodeType":"YulAssignment","src":"7459:90:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7541:6:27"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7484:56:27"},"nodeType":"YulFunctionCall","src":"7484:64:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7468:15:27"},"nodeType":"YulFunctionCall","src":"7468:81:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7459:5:27"}]},{"nodeType":"YulVariableDeclaration","src":"7558:16:27","value":{"name":"array","nodeType":"YulIdentifier","src":"7569:5:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7562:3:27","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7591:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"7598:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7584:6:27"},"nodeType":"YulFunctionCall","src":"7584:21:27"},"nodeType":"YulExpressionStatement","src":"7584:21:27"},{"nodeType":"YulAssignment","src":"7614:23:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7625:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"7632:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7621:3:27"},"nodeType":"YulFunctionCall","src":"7621:16:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7614:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"7647:44:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7665:6:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7677:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7685:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7673:3:27"},"nodeType":"YulFunctionCall","src":"7673:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7661:3:27"},"nodeType":"YulFunctionCall","src":"7661:30:27"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7651:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7719:103:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7733:77:27"},"nodeType":"YulFunctionCall","src":"7733:79:27"},"nodeType":"YulExpressionStatement","src":"7733:79:27"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7706:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"7714:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7703:2:27"},"nodeType":"YulFunctionCall","src":"7703:15:27"},"nodeType":"YulIf","src":"7700:122:27"},{"body":{"nodeType":"YulBlock","src":"7907:144:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7922:21:27","value":{"name":"src","nodeType":"YulIdentifier","src":"7940:3:27"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7926:10:27","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7964:3:27"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7990:10:27"},{"name":"end","nodeType":"YulIdentifier","src":"8002:3:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7969:20:27"},"nodeType":"YulFunctionCall","src":"7969:37:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7957:6:27"},"nodeType":"YulFunctionCall","src":"7957:50:27"},"nodeType":"YulExpressionStatement","src":"7957:50:27"},{"nodeType":"YulAssignment","src":"8020:21:27","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8031:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8036:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8027:3:27"},"nodeType":"YulFunctionCall","src":"8027:14:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8020:3:27"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7860:3:27"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7865:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7857:2:27"},"nodeType":"YulFunctionCall","src":"7857:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7873:25:27","statements":[{"nodeType":"YulAssignment","src":"7875:21:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7886:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7891:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7882:3:27"},"nodeType":"YulFunctionCall","src":"7882:14:27"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7875:3:27"}]}]},"pre":{"nodeType":"YulBlock","src":"7835:21:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7837:17:27","value":{"name":"offset","nodeType":"YulIdentifier","src":"7848:6:27"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7841:3:27","type":""}]}]},"src":"7831:220:27"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7419:6:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"7427:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"7435:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7443:5:27","type":""}],"src":"7347:710:27"},{"body":{"nodeType":"YulBlock","src":"8157:293:27","statements":[{"body":{"nodeType":"YulBlock","src":"8206:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8208:77:27"},"nodeType":"YulFunctionCall","src":"8208:79:27"},"nodeType":"YulExpressionStatement","src":"8208:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8185:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8193:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8181:3:27"},"nodeType":"YulFunctionCall","src":"8181:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"8200:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8177:3:27"},"nodeType":"YulFunctionCall","src":"8177:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8170:6:27"},"nodeType":"YulFunctionCall","src":"8170:35:27"},"nodeType":"YulIf","src":"8167:122:27"},{"nodeType":"YulVariableDeclaration","src":"8298:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8325:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8312:12:27"},"nodeType":"YulFunctionCall","src":"8312:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8302:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8341:103:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8417:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8425:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8413:3:27"},"nodeType":"YulFunctionCall","src":"8413:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"8432:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"8440:3:27"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8350:62:27"},"nodeType":"YulFunctionCall","src":"8350:94:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8341:5:27"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8135:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"8143:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8151:5:27","type":""}],"src":"8080:370:27"},{"body":{"nodeType":"YulBlock","src":"8547:229:27","statements":[{"body":{"nodeType":"YulBlock","src":"8652:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8654:16:27"},"nodeType":"YulFunctionCall","src":"8654:18:27"},"nodeType":"YulExpressionStatement","src":"8654:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8624:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8632:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8621:2:27"},"nodeType":"YulFunctionCall","src":"8621:30:27"},"nodeType":"YulIf","src":"8618:56:27"},{"nodeType":"YulAssignment","src":"8684:25:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8696:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8704:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8692:3:27"},"nodeType":"YulFunctionCall","src":"8692:17:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8684:4:27"}]},{"nodeType":"YulAssignment","src":"8746:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8758:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"8764:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8754:3:27"},"nodeType":"YulFunctionCall","src":"8754:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8746:4:27"}]}]},"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8531:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8542:4:27","type":""}],"src":"8456:320:27"},{"body":{"nodeType":"YulBlock","src":"8908:831:27","statements":[{"nodeType":"YulAssignment","src":"8918:99:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9009:6:27"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8943:65:27"},"nodeType":"YulFunctionCall","src":"8943:73:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8927:15:27"},"nodeType":"YulFunctionCall","src":"8927:90:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8918:5:27"}]},{"nodeType":"YulVariableDeclaration","src":"9026:16:27","value":{"name":"array","nodeType":"YulIdentifier","src":"9037:5:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9030:3:27","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9059:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"9066:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9052:6:27"},"nodeType":"YulFunctionCall","src":"9052:21:27"},"nodeType":"YulExpressionStatement","src":"9052:21:27"},{"nodeType":"YulAssignment","src":"9082:23:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9093:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"9100:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9089:3:27"},"nodeType":"YulFunctionCall","src":"9089:16:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9082:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"9115:44:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9133:6:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9145:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9153:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9141:3:27"},"nodeType":"YulFunctionCall","src":"9141:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9129:3:27"},"nodeType":"YulFunctionCall","src":"9129:30:27"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"9119:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"9187:103:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9201:77:27"},"nodeType":"YulFunctionCall","src":"9201:79:27"},"nodeType":"YulExpressionStatement","src":"9201:79:27"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"9174:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"9182:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9171:2:27"},"nodeType":"YulFunctionCall","src":"9171:15:27"},"nodeType":"YulIf","src":"9168:122:27"},{"body":{"nodeType":"YulBlock","src":"9375:358:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9390:36:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9422:3:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9409:12:27"},"nodeType":"YulFunctionCall","src":"9409:17:27"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"9394:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"9478:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9480:77:27"},"nodeType":"YulFunctionCall","src":"9480:79:27"},"nodeType":"YulExpressionStatement","src":"9480:79:27"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"9445:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"9458:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9442:2:27"},"nodeType":"YulFunctionCall","src":"9442:35:27"},"nodeType":"YulIf","src":"9439:122:27"},{"nodeType":"YulVariableDeclaration","src":"9574:42:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9596:6:27"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"9604:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9592:3:27"},"nodeType":"YulFunctionCall","src":"9592:24:27"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"9578:10:27","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9637:3:27"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"9672:10:27"},{"name":"end","nodeType":"YulIdentifier","src":"9684:3:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9642:29:27"},"nodeType":"YulFunctionCall","src":"9642:46:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9630:6:27"},"nodeType":"YulFunctionCall","src":"9630:59:27"},"nodeType":"YulExpressionStatement","src":"9630:59:27"},{"nodeType":"YulAssignment","src":"9702:21:27","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9713:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9718:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9709:3:27"},"nodeType":"YulFunctionCall","src":"9709:14:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9702:3:27"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9328:3:27"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"9333:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9325:2:27"},"nodeType":"YulFunctionCall","src":"9325:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9341:25:27","statements":[{"nodeType":"YulAssignment","src":"9343:21:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9354:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9359:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9350:3:27"},"nodeType":"YulFunctionCall","src":"9350:14:27"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"9343:3:27"}]}]},"pre":{"nodeType":"YulBlock","src":"9303:21:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9305:17:27","value":{"name":"offset","nodeType":"YulIdentifier","src":"9316:6:27"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"9309:3:27","type":""}]}]},"src":"9299:434:27"}]},"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8878:6:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"8886:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"8894:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8902:5:27","type":""}],"src":"8797:942:27"},{"body":{"nodeType":"YulBlock","src":"9846:302:27","statements":[{"body":{"nodeType":"YulBlock","src":"9895:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9897:77:27"},"nodeType":"YulFunctionCall","src":"9897:79:27"},"nodeType":"YulExpressionStatement","src":"9897:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9874:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9882:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9870:3:27"},"nodeType":"YulFunctionCall","src":"9870:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"9889:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9866:3:27"},"nodeType":"YulFunctionCall","src":"9866:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9859:6:27"},"nodeType":"YulFunctionCall","src":"9859:35:27"},"nodeType":"YulIf","src":"9856:122:27"},{"nodeType":"YulVariableDeclaration","src":"9987:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10014:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10001:12:27"},"nodeType":"YulFunctionCall","src":"10001:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9991:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10030:112:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10115:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10123:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10111:3:27"},"nodeType":"YulFunctionCall","src":"10111:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"10130:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"10138:3:27"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10039:71:27"},"nodeType":"YulFunctionCall","src":"10039:103:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10030:5:27"}]}]},"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9824:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"9832:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9840:5:27","type":""}],"src":"9760:388:27"},{"body":{"nodeType":"YulBlock","src":"10296:770:27","statements":[{"body":{"nodeType":"YulBlock","src":"10342:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10344:77:27"},"nodeType":"YulFunctionCall","src":"10344:79:27"},"nodeType":"YulExpressionStatement","src":"10344:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10317:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"10326:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10313:3:27"},"nodeType":"YulFunctionCall","src":"10313:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"10338:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10309:3:27"},"nodeType":"YulFunctionCall","src":"10309:32:27"},"nodeType":"YulIf","src":"10306:119:27"},{"nodeType":"YulBlock","src":"10435:302:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10450:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10481:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10492:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10477:3:27"},"nodeType":"YulFunctionCall","src":"10477:17:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10464:12:27"},"nodeType":"YulFunctionCall","src":"10464:31:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10454:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"10542:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10544:77:27"},"nodeType":"YulFunctionCall","src":"10544:79:27"},"nodeType":"YulExpressionStatement","src":"10544:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10514:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10522:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10511:2:27"},"nodeType":"YulFunctionCall","src":"10511:30:27"},"nodeType":"YulIf","src":"10508:117:27"},{"nodeType":"YulAssignment","src":"10639:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10699:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10710:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10695:3:27"},"nodeType":"YulFunctionCall","src":"10695:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10719:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10649:45:27"},"nodeType":"YulFunctionCall","src":"10649:78:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10639:6:27"}]}]},{"nodeType":"YulBlock","src":"10747:312:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10762:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10793:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10804:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10789:3:27"},"nodeType":"YulFunctionCall","src":"10789:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10776:12:27"},"nodeType":"YulFunctionCall","src":"10776:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10766:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"10855:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10857:77:27"},"nodeType":"YulFunctionCall","src":"10857:79:27"},"nodeType":"YulExpressionStatement","src":"10857:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10827:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10835:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10824:2:27"},"nodeType":"YulFunctionCall","src":"10824:30:27"},"nodeType":"YulIf","src":"10821:117:27"},{"nodeType":"YulAssignment","src":"10952:97:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11021:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"11032:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11017:3:27"},"nodeType":"YulFunctionCall","src":"11017:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11041:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10962:54:27"},"nodeType":"YulFunctionCall","src":"10962:87:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10952:6:27"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10258:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10269:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10281:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10289:6:27","type":""}],"src":"10154:912:27"},{"body":{"nodeType":"YulBlock","src":"11163:448:27","statements":[{"body":{"nodeType":"YulBlock","src":"11209:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11211:77:27"},"nodeType":"YulFunctionCall","src":"11211:79:27"},"nodeType":"YulExpressionStatement","src":"11211:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11184:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11193:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11180:3:27"},"nodeType":"YulFunctionCall","src":"11180:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"11205:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11176:3:27"},"nodeType":"YulFunctionCall","src":"11176:32:27"},"nodeType":"YulIf","src":"11173:119:27"},{"nodeType":"YulBlock","src":"11302:302:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11317:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11348:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11359:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11344:3:27"},"nodeType":"YulFunctionCall","src":"11344:17:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11331:12:27"},"nodeType":"YulFunctionCall","src":"11331:31:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11321:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"11409:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11411:77:27"},"nodeType":"YulFunctionCall","src":"11411:79:27"},"nodeType":"YulExpressionStatement","src":"11411:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11381:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11389:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11378:2:27"},"nodeType":"YulFunctionCall","src":"11378:30:27"},"nodeType":"YulIf","src":"11375:117:27"},{"nodeType":"YulAssignment","src":"11506:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11566:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"11577:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11562:3:27"},"nodeType":"YulFunctionCall","src":"11562:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11586:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11516:45:27"},"nodeType":"YulFunctionCall","src":"11516:78:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11506:6:27"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11133:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11144:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11156:6:27","type":""}],"src":"11072:539:27"},{"body":{"nodeType":"YulBlock","src":"11700:40:27","statements":[{"nodeType":"YulAssignment","src":"11711:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11727:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11721:5:27"},"nodeType":"YulFunctionCall","src":"11721:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11711:6:27"}]}]},"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11683:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11693:6:27","type":""}],"src":"11617:123:27"},{"body":{"nodeType":"YulBlock","src":"11866:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11883:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"11888:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11876:6:27"},"nodeType":"YulFunctionCall","src":"11876:19:27"},"nodeType":"YulExpressionStatement","src":"11876:19:27"},{"nodeType":"YulAssignment","src":"11904:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11923:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11928:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11919:3:27"},"nodeType":"YulFunctionCall","src":"11919:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11904:11:27"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11838:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"11843:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11854:11:27","type":""}],"src":"11746:193:27"},{"body":{"nodeType":"YulBlock","src":"12026:60:27","statements":[{"nodeType":"YulAssignment","src":"12036:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12044:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12036:4:27"}]},{"nodeType":"YulAssignment","src":"12057:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12069:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12074:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12065:3:27"},"nodeType":"YulFunctionCall","src":"12065:14:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12057:4:27"}]}]},"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12013:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12021:4:27","type":""}],"src":"11945:141:27"},{"body":{"nodeType":"YulBlock","src":"12177:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12194:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"12199:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12187:6:27"},"nodeType":"YulFunctionCall","src":"12187:19:27"},"nodeType":"YulExpressionStatement","src":"12187:19:27"},{"nodeType":"YulAssignment","src":"12215:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12234:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12239:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12230:3:27"},"nodeType":"YulFunctionCall","src":"12230:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12215:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12149:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"12154:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12165:11:27","type":""}],"src":"12092:158:27"},{"body":{"nodeType":"YulBlock","src":"12336:273:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12346:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12392:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12360:31:27"},"nodeType":"YulFunctionCall","src":"12360:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12350:6:27","type":""}]},{"nodeType":"YulAssignment","src":"12407:67:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12462:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"12467:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12414:47:27"},"nodeType":"YulFunctionCall","src":"12414:60:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12407:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12522:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"12529:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12518:3:27"},"nodeType":"YulFunctionCall","src":"12518:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"12536:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"12541:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12483:34:27"},"nodeType":"YulFunctionCall","src":"12483:65:27"},"nodeType":"YulExpressionStatement","src":"12483:65:27"},{"nodeType":"YulAssignment","src":"12557:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12568:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12595:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12573:21:27"},"nodeType":"YulFunctionCall","src":"12573:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12564:3:27"},"nodeType":"YulFunctionCall","src":"12564:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12557:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12317:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12324:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12332:3:27","type":""}],"src":"12256:353:27"},{"body":{"nodeType":"YulBlock","src":"12713:94:27","statements":[{"nodeType":"YulAssignment","src":"12723:78:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12789:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"12797:3:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12737:51:27"},"nodeType":"YulFunctionCall","src":"12737:64:27"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"12723:10:27"}]}]},"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"12686:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12694:3:27","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"12702:10:27","type":""}],"src":"12615:192:27"},{"body":{"nodeType":"YulBlock","src":"12897:38:27","statements":[{"nodeType":"YulAssignment","src":"12907:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12919:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12924:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12915:3:27"},"nodeType":"YulFunctionCall","src":"12915:14:27"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"12907:4:27"}]}]},"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12884:3:27","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"12892:4:27","type":""}],"src":"12813:122:27"},{"body":{"nodeType":"YulBlock","src":"13109:841:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13119:77:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13190:5:27"}],"functionName":{"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13133:56:27"},"nodeType":"YulFunctionCall","src":"13133:63:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13123:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13205:102:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13295:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"13300:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13212:82:27"},"nodeType":"YulFunctionCall","src":"13212:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13205:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"13316:20:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"13333:3:27"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"13320:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13345:39:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13361:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13370:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13378:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13366:3:27"},"nodeType":"YulFunctionCall","src":"13366:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13357:3:27"},"nodeType":"YulFunctionCall","src":"13357:27:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"13349:4:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13393:80:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13467:5:27"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13408:58:27"},"nodeType":"YulFunctionCall","src":"13408:65:27"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13397:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13482:21:27","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"13496:7:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13486:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"13572:333:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13593:3:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13602:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13608:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13598:3:27"},"nodeType":"YulFunctionCall","src":"13598:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13586:6:27"},"nodeType":"YulFunctionCall","src":"13586:33:27"},"nodeType":"YulExpressionStatement","src":"13586:33:27"},{"nodeType":"YulVariableDeclaration","src":"13632:34:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13659:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13653:5:27"},"nodeType":"YulFunctionCall","src":"13653:13:27"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"13636:13:27","type":""}]},{"nodeType":"YulAssignment","src":"13679:90:27","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"13749:13:27"},{"name":"tail","nodeType":"YulIdentifier","src":"13764:4:27"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13687:61:27"},"nodeType":"YulFunctionCall","src":"13687:82:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13679:4:27"}]},{"nodeType":"YulAssignment","src":"13782:79:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13854:6:27"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13792:61:27"},"nodeType":"YulFunctionCall","src":"13792:69:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13782:6:27"}]},{"nodeType":"YulAssignment","src":"13874:21:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13885:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13890:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13881:3:27"},"nodeType":"YulFunctionCall","src":"13881:14:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13874:3:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13534:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"13537:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13531:2:27"},"nodeType":"YulFunctionCall","src":"13531:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13545:18:27","statements":[{"nodeType":"YulAssignment","src":"13547:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13556:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"13559:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13552:3:27"},"nodeType":"YulFunctionCall","src":"13552:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13547:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"13516:14:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13518:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13527:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13522:1:27","type":""}]}]},"src":"13512:393:27"},{"nodeType":"YulAssignment","src":"13914:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"13921:4:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13914:3:27"}]},{"nodeType":"YulAssignment","src":"13934:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"13941:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13934:3:27"}]}]},"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13088:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13095:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13104:3:27","type":""}],"src":"12967:983:27"},{"body":{"nodeType":"YulBlock","src":"14122:243:27","statements":[{"nodeType":"YulAssignment","src":"14132:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14144:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14155:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14140:3:27"},"nodeType":"YulFunctionCall","src":"14140:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14132:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14179:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14190:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14175:3:27"},"nodeType":"YulFunctionCall","src":"14175:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14198:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"14204:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14194:3:27"},"nodeType":"YulFunctionCall","src":"14194:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14168:6:27"},"nodeType":"YulFunctionCall","src":"14168:47:27"},"nodeType":"YulExpressionStatement","src":"14168:47:27"},{"nodeType":"YulAssignment","src":"14224:134:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14344:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"14353:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14232:111:27"},"nodeType":"YulFunctionCall","src":"14232:126:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14224:4:27"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14094:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14106:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14117:4:27","type":""}],"src":"13956:409:27"},{"body":{"nodeType":"YulBlock","src":"14414:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"14471:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14480:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14483:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14473:6:27"},"nodeType":"YulFunctionCall","src":"14473:12:27"},"nodeType":"YulExpressionStatement","src":"14473:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14437:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14462:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14444:17:27"},"nodeType":"YulFunctionCall","src":"14444:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14434:2:27"},"nodeType":"YulFunctionCall","src":"14434:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14427:6:27"},"nodeType":"YulFunctionCall","src":"14427:43:27"},"nodeType":"YulIf","src":"14424:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14407:5:27","type":""}],"src":"14371:122:27"},{"body":{"nodeType":"YulBlock","src":"14551:87:27","statements":[{"nodeType":"YulAssignment","src":"14561:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14583:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14570:12:27"},"nodeType":"YulFunctionCall","src":"14570:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14561:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14626:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"14599:26:27"},"nodeType":"YulFunctionCall","src":"14599:33:27"},"nodeType":"YulExpressionStatement","src":"14599:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14529:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"14537:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14545:5:27","type":""}],"src":"14499:139:27"},{"body":{"nodeType":"YulBlock","src":"14710:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"14756:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14758:77:27"},"nodeType":"YulFunctionCall","src":"14758:79:27"},"nodeType":"YulExpressionStatement","src":"14758:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14731:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"14740:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14727:3:27"},"nodeType":"YulFunctionCall","src":"14727:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"14752:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14723:3:27"},"nodeType":"YulFunctionCall","src":"14723:32:27"},"nodeType":"YulIf","src":"14720:119:27"},{"nodeType":"YulBlock","src":"14849:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14864:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14878:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14868:6:27","type":""}]},{"nodeType":"YulAssignment","src":"14893:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14928:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"14939:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14924:3:27"},"nodeType":"YulFunctionCall","src":"14924:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14948:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14903:20:27"},"nodeType":"YulFunctionCall","src":"14903:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14893:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14680:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14691:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14703:6:27","type":""}],"src":"14644:329:27"},{"body":{"nodeType":"YulBlock","src":"15007:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15024:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15027:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15017:6:27"},"nodeType":"YulFunctionCall","src":"15017:88:27"},"nodeType":"YulExpressionStatement","src":"15017:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15121:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15124:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15114:6:27"},"nodeType":"YulFunctionCall","src":"15114:15:27"},"nodeType":"YulExpressionStatement","src":"15114:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15145:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15148:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15138:6:27"},"nodeType":"YulFunctionCall","src":"15138:15:27"},"nodeType":"YulExpressionStatement","src":"15138:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14979:180:27"},{"body":{"nodeType":"YulBlock","src":"15261:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15278:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"15283:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15271:6:27"},"nodeType":"YulFunctionCall","src":"15271:19:27"},"nodeType":"YulExpressionStatement","src":"15271:19:27"},{"nodeType":"YulAssignment","src":"15299:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15318:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15323:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15314:3:27"},"nodeType":"YulFunctionCall","src":"15314:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15299:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15233:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"15238:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15249:11:27","type":""}],"src":"15165:169:27"},{"body":{"nodeType":"YulBlock","src":"15446:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15468:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15476:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15464:3:27"},"nodeType":"YulFunctionCall","src":"15464:14:27"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"15480:34:27","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15457:6:27"},"nodeType":"YulFunctionCall","src":"15457:58:27"},"nodeType":"YulExpressionStatement","src":"15457:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15536:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15544:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15532:3:27"},"nodeType":"YulFunctionCall","src":"15532:15:27"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"15549:8:27","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15525:6:27"},"nodeType":"YulFunctionCall","src":"15525:33:27"},"nodeType":"YulExpressionStatement","src":"15525:33:27"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15438:6:27","type":""}],"src":"15340:225:27"},{"body":{"nodeType":"YulBlock","src":"15717:220:27","statements":[{"nodeType":"YulAssignment","src":"15727:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15793:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15798:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15734:58:27"},"nodeType":"YulFunctionCall","src":"15734:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15727:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15899:3:27"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"15810:88:27"},"nodeType":"YulFunctionCall","src":"15810:93:27"},"nodeType":"YulExpressionStatement","src":"15810:93:27"},{"nodeType":"YulAssignment","src":"15912:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15923:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15928:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15919:3:27"},"nodeType":"YulFunctionCall","src":"15919:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15912:3:27"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15705:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15713:3:27","type":""}],"src":"15571:366:27"},{"body":{"nodeType":"YulBlock","src":"16114:248:27","statements":[{"nodeType":"YulAssignment","src":"16124:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16136:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16147:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16132:3:27"},"nodeType":"YulFunctionCall","src":"16132:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16124:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16171:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16182:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16167:3:27"},"nodeType":"YulFunctionCall","src":"16167:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16190:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"16196:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16186:3:27"},"nodeType":"YulFunctionCall","src":"16186:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16160:6:27"},"nodeType":"YulFunctionCall","src":"16160:47:27"},"nodeType":"YulExpressionStatement","src":"16160:47:27"},{"nodeType":"YulAssignment","src":"16216:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16350:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16224:124:27"},"nodeType":"YulFunctionCall","src":"16224:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16216:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16094:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16109:4:27","type":""}],"src":"15943:419:27"},{"body":{"nodeType":"YulBlock","src":"16396:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16413:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16416:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16406:6:27"},"nodeType":"YulFunctionCall","src":"16406:88:27"},"nodeType":"YulExpressionStatement","src":"16406:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16510:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16513:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16503:6:27"},"nodeType":"YulFunctionCall","src":"16503:15:27"},"nodeType":"YulExpressionStatement","src":"16503:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16534:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16537:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16527:6:27"},"nodeType":"YulFunctionCall","src":"16527:15:27"},"nodeType":"YulExpressionStatement","src":"16527:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"16368:180:27"},{"body":{"nodeType":"YulBlock","src":"16605:269:27","statements":[{"nodeType":"YulAssignment","src":"16615:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16629:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"16635:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16625:3:27"},"nodeType":"YulFunctionCall","src":"16625:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16615:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"16646:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16676:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"16682:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16672:3:27"},"nodeType":"YulFunctionCall","src":"16672:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"16650:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"16723:51:27","statements":[{"nodeType":"YulAssignment","src":"16737:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16751:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"16759:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16747:3:27"},"nodeType":"YulFunctionCall","src":"16747:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16737:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16703:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16696:6:27"},"nodeType":"YulFunctionCall","src":"16696:26:27"},"nodeType":"YulIf","src":"16693:81:27"},{"body":{"nodeType":"YulBlock","src":"16826:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16840:16:27"},"nodeType":"YulFunctionCall","src":"16840:18:27"},"nodeType":"YulExpressionStatement","src":"16840:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16790:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16813:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"16821:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16810:2:27"},"nodeType":"YulFunctionCall","src":"16810:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16787:2:27"},"nodeType":"YulFunctionCall","src":"16787:38:27"},"nodeType":"YulIf","src":"16784:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"16589:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16598:6:27","type":""}],"src":"16554:320:27"},{"body":{"nodeType":"YulBlock","src":"16986:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17008:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17016:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17004:3:27"},"nodeType":"YulFunctionCall","src":"17004:14:27"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"17020:34:27","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16997:6:27"},"nodeType":"YulFunctionCall","src":"16997:58:27"},"nodeType":"YulExpressionStatement","src":"16997:58:27"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16978:6:27","type":""}],"src":"16880:182:27"},{"body":{"nodeType":"YulBlock","src":"17214:220:27","statements":[{"nodeType":"YulAssignment","src":"17224:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17290:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17295:2:27","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17231:58:27"},"nodeType":"YulFunctionCall","src":"17231:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17224:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17396:3:27"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"17307:88:27"},"nodeType":"YulFunctionCall","src":"17307:93:27"},"nodeType":"YulExpressionStatement","src":"17307:93:27"},{"nodeType":"YulAssignment","src":"17409:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17420:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17425:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17416:3:27"},"nodeType":"YulFunctionCall","src":"17416:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17409:3:27"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17202:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17210:3:27","type":""}],"src":"17068:366:27"},{"body":{"nodeType":"YulBlock","src":"17611:248:27","statements":[{"nodeType":"YulAssignment","src":"17621:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17633:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17644:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17629:3:27"},"nodeType":"YulFunctionCall","src":"17629:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17621:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17668:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17679:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17664:3:27"},"nodeType":"YulFunctionCall","src":"17664:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17687:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"17693:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17683:3:27"},"nodeType":"YulFunctionCall","src":"17683:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17657:6:27"},"nodeType":"YulFunctionCall","src":"17657:47:27"},"nodeType":"YulExpressionStatement","src":"17657:47:27"},{"nodeType":"YulAssignment","src":"17713:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17847:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17721:124:27"},"nodeType":"YulFunctionCall","src":"17721:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17713:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17591:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17606:4:27","type":""}],"src":"17440:419:27"},{"body":{"nodeType":"YulBlock","src":"17918:87:27","statements":[{"nodeType":"YulAssignment","src":"17928:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17936:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17928:4:27"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17956:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"17959:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17949:6:27"},"nodeType":"YulFunctionCall","src":"17949:14:27"},"nodeType":"YulExpressionStatement","src":"17949:14:27"},{"nodeType":"YulAssignment","src":"17972:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17990:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17993:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17980:9:27"},"nodeType":"YulFunctionCall","src":"17980:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17972:4:27"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17905:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17913:4:27","type":""}],"src":"17865:140:27"},{"body":{"nodeType":"YulBlock","src":"18055:49:27","statements":[{"nodeType":"YulAssignment","src":"18065:33:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18083:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"18090:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18079:3:27"},"nodeType":"YulFunctionCall","src":"18079:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"18095:2:27","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18075:3:27"},"nodeType":"YulFunctionCall","src":"18075:23:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18065:6:27"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18038:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18048:6:27","type":""}],"src":"18011:93:27"},{"body":{"nodeType":"YulBlock","src":"18163:54:27","statements":[{"nodeType":"YulAssignment","src":"18173:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"18198:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"18204:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18194:3:27"},"nodeType":"YulFunctionCall","src":"18194:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"18173:8:27"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"18138:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"18144:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"18154:8:27","type":""}],"src":"18110:107:27"},{"body":{"nodeType":"YulBlock","src":"18299:317:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18309:35:27","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"18330:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"18342:1:27","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18326:3:27"},"nodeType":"YulFunctionCall","src":"18326:18:27"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"18313:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18353:109:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"18384:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18395:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"18365:18:27"},"nodeType":"YulFunctionCall","src":"18365:97:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"18357:4:27","type":""}]},{"nodeType":"YulAssignment","src":"18471:51:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"18502:9:27"},{"name":"toInsert","nodeType":"YulIdentifier","src":"18513:8:27"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"18483:18:27"},"nodeType":"YulFunctionCall","src":"18483:39:27"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"18471:8:27"}]},{"nodeType":"YulAssignment","src":"18531:30:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18544:5:27"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"18555:4:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18551:3:27"},"nodeType":"YulFunctionCall","src":"18551:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18540:3:27"},"nodeType":"YulFunctionCall","src":"18540:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18531:5:27"}]},{"nodeType":"YulAssignment","src":"18570:40:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18583:5:27"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"18594:8:27"},{"name":"mask","nodeType":"YulIdentifier","src":"18604:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18590:3:27"},"nodeType":"YulFunctionCall","src":"18590:19:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18580:2:27"},"nodeType":"YulFunctionCall","src":"18580:30:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18570:6:27"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18260:5:27","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"18267:10:27","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"18279:8:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18292:6:27","type":""}],"src":"18223:393:27"},{"body":{"nodeType":"YulBlock","src":"18667:32:27","statements":[{"nodeType":"YulAssignment","src":"18677:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"18688:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18677:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18649:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18659:7:27","type":""}],"src":"18622:77:27"},{"body":{"nodeType":"YulBlock","src":"18737:28:27","statements":[{"nodeType":"YulAssignment","src":"18747:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"18754:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18747:3:27"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18723:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18733:3:27","type":""}],"src":"18705:60:27"},{"body":{"nodeType":"YulBlock","src":"18831:82:27","statements":[{"nodeType":"YulAssignment","src":"18841:66:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18899:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18881:17:27"},"nodeType":"YulFunctionCall","src":"18881:24:27"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"18872:8:27"},"nodeType":"YulFunctionCall","src":"18872:34:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18854:17:27"},"nodeType":"YulFunctionCall","src":"18854:53:27"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"18841:9:27"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18811:5:27","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"18821:9:27","type":""}],"src":"18771:142:27"},{"body":{"nodeType":"YulBlock","src":"18966:28:27","statements":[{"nodeType":"YulAssignment","src":"18976:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"18983:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18976:3:27"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18952:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18962:3:27","type":""}],"src":"18919:75:27"},{"body":{"nodeType":"YulBlock","src":"19076:193:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19086:63:27","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"19141:7:27"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19110:30:27"},"nodeType":"YulFunctionCall","src":"19110:39:27"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"19090:16:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19165:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19205:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19199:5:27"},"nodeType":"YulFunctionCall","src":"19199:11:27"},{"name":"offset","nodeType":"YulIdentifier","src":"19212:6:27"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"19244:16:27"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"19220:23:27"},"nodeType":"YulFunctionCall","src":"19220:41:27"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"19171:27:27"},"nodeType":"YulFunctionCall","src":"19171:91:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19158:6:27"},"nodeType":"YulFunctionCall","src":"19158:105:27"},"nodeType":"YulExpressionStatement","src":"19158:105:27"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19053:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"19059:6:27","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"19067:7:27","type":""}],"src":"19000:269:27"},{"body":{"nodeType":"YulBlock","src":"19324:24:27","statements":[{"nodeType":"YulAssignment","src":"19334:8:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19341:1:27","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19334:3:27"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19320:3:27","type":""}],"src":"19275:73:27"},{"body":{"nodeType":"YulBlock","src":"19407:136:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19417:46:27","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"19431:30:27"},"nodeType":"YulFunctionCall","src":"19431:32:27"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"19421:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19516:4:27"},{"name":"offset","nodeType":"YulIdentifier","src":"19522:6:27"},{"name":"zero_0","nodeType":"YulIdentifier","src":"19530:6:27"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19472:43:27"},"nodeType":"YulFunctionCall","src":"19472:65:27"},"nodeType":"YulExpressionStatement","src":"19472:65:27"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19393:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"19399:6:27","type":""}],"src":"19354:189:27"},{"body":{"nodeType":"YulBlock","src":"19599:136:27","statements":[{"body":{"nodeType":"YulBlock","src":"19666:63:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19710:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"19717:1:27","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"19680:29:27"},"nodeType":"YulFunctionCall","src":"19680:39:27"},"nodeType":"YulExpressionStatement","src":"19680:39:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19619:5:27"},{"name":"end","nodeType":"YulIdentifier","src":"19626:3:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19616:2:27"},"nodeType":"YulFunctionCall","src":"19616:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19631:26:27","statements":[{"nodeType":"YulAssignment","src":"19633:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19646:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"19653:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19642:3:27"},"nodeType":"YulFunctionCall","src":"19642:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"19633:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"19613:2:27","statements":[]},"src":"19609:120:27"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"19587:5:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"19594:3:27","type":""}],"src":"19549:186:27"},{"body":{"nodeType":"YulBlock","src":"19819:463:27","statements":[{"body":{"nodeType":"YulBlock","src":"19845:430:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19859:53:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19906:5:27"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"19875:30:27"},"nodeType":"YulFunctionCall","src":"19875:37:27"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"19863:8:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19925:63:27","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"19948:8:27"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19976:10:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"19958:17:27"},"nodeType":"YulFunctionCall","src":"19958:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19944:3:27"},"nodeType":"YulFunctionCall","src":"19944:44:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"19929:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"20145:27:27","statements":[{"nodeType":"YulAssignment","src":"20147:23:27","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"20162:8:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"20147:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"20129:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"20141:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20126:2:27"},"nodeType":"YulFunctionCall","src":"20126:18:27"},"nodeType":"YulIf","src":"20123:49:27"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"20214:11:27"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"20231:8:27"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"20259:3:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"20241:17:27"},"nodeType":"YulFunctionCall","src":"20241:22:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20227:3:27"},"nodeType":"YulFunctionCall","src":"20227:37:27"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"20185:28:27"},"nodeType":"YulFunctionCall","src":"20185:80:27"},"nodeType":"YulExpressionStatement","src":"20185:80:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"19836:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19841:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19833:2:27"},"nodeType":"YulFunctionCall","src":"19833:11:27"},"nodeType":"YulIf","src":"19830:445:27"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"19795:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"19802:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"19807:10:27","type":""}],"src":"19741:541:27"},{"body":{"nodeType":"YulBlock","src":"20351:54:27","statements":[{"nodeType":"YulAssignment","src":"20361:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"20386:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"20392:5:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20382:3:27"},"nodeType":"YulFunctionCall","src":"20382:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"20361:8:27"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"20326:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"20332:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"20342:8:27","type":""}],"src":"20288:117:27"},{"body":{"nodeType":"YulBlock","src":"20462:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"20472:68:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20521:1:27","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"20524:5:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20517:3:27"},"nodeType":"YulFunctionCall","src":"20517:13:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20536:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20532:3:27"},"nodeType":"YulFunctionCall","src":"20532:6:27"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"20488:28:27"},"nodeType":"YulFunctionCall","src":"20488:51:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20484:3:27"},"nodeType":"YulFunctionCall","src":"20484:56:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"20476:4:27","type":""}]},{"nodeType":"YulAssignment","src":"20549:25:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20563:4:27"},{"name":"mask","nodeType":"YulIdentifier","src":"20569:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20559:3:27"},"nodeType":"YulFunctionCall","src":"20559:15:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20549:6:27"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20439:4:27","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"20445:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20455:6:27","type":""}],"src":"20411:169:27"},{"body":{"nodeType":"YulBlock","src":"20666:214:27","statements":[{"nodeType":"YulAssignment","src":"20799:37:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20826:4:27"},{"name":"len","nodeType":"YulIdentifier","src":"20832:3:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"20807:18:27"},"nodeType":"YulFunctionCall","src":"20807:29:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"20799:4:27"}]},{"nodeType":"YulAssignment","src":"20845:29:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20856:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20866:1:27","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"20869:3:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20862:3:27"},"nodeType":"YulFunctionCall","src":"20862:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"20853:2:27"},"nodeType":"YulFunctionCall","src":"20853:21:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"20845:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20647:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"20653:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"20661:4:27","type":""}],"src":"20585:295:27"},{"body":{"nodeType":"YulBlock","src":"20975:1300:27","statements":[{"nodeType":"YulVariableDeclaration","src":"20986:50:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21032:3:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21000:31:27"},"nodeType":"YulFunctionCall","src":"21000:36:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"20990:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"21121:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21123:16:27"},"nodeType":"YulFunctionCall","src":"21123:18:27"},"nodeType":"YulExpressionStatement","src":"21123:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21093:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21101:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21090:2:27"},"nodeType":"YulFunctionCall","src":"21090:30:27"},"nodeType":"YulIf","src":"21087:56:27"},{"nodeType":"YulVariableDeclaration","src":"21153:52:27","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21199:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21193:5:27"},"nodeType":"YulFunctionCall","src":"21193:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"21167:25:27"},"nodeType":"YulFunctionCall","src":"21167:38:27"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"21157:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21297:4:27"},{"name":"oldLen","nodeType":"YulIdentifier","src":"21303:6:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"21311:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"21252:44:27"},"nodeType":"YulFunctionCall","src":"21252:66:27"},"nodeType":"YulExpressionStatement","src":"21252:66:27"},{"nodeType":"YulVariableDeclaration","src":"21328:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"21345:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"21332:9:27","type":""}]},{"nodeType":"YulAssignment","src":"21356:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"21369:4:27","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21356:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"21420:610:27","statements":[{"nodeType":"YulVariableDeclaration","src":"21434:37:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21453:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21465:4:27","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21461:3:27"},"nodeType":"YulFunctionCall","src":"21461:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21449:3:27"},"nodeType":"YulFunctionCall","src":"21449:22:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"21438:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21485:50:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21530:4:27"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"21499:30:27"},"nodeType":"YulFunctionCall","src":"21499:36:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"21489:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21548:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"21557:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"21552:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"21616:163:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21641:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21659:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21664:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21655:3:27"},"nodeType":"YulFunctionCall","src":"21655:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21649:5:27"},"nodeType":"YulFunctionCall","src":"21649:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21634:6:27"},"nodeType":"YulFunctionCall","src":"21634:42:27"},"nodeType":"YulExpressionStatement","src":"21634:42:27"},{"nodeType":"YulAssignment","src":"21693:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21707:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21715:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21703:3:27"},"nodeType":"YulFunctionCall","src":"21703:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21693:6:27"}]},{"nodeType":"YulAssignment","src":"21734:31:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21751:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21762:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21747:3:27"},"nodeType":"YulFunctionCall","src":"21747:18:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21734:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21582:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"21585:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21579:2:27"},"nodeType":"YulFunctionCall","src":"21579:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21594:21:27","statements":[{"nodeType":"YulAssignment","src":"21596:17:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21605:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"21608:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21601:3:27"},"nodeType":"YulFunctionCall","src":"21601:12:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"21596:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"21575:3:27","statements":[]},"src":"21571:208:27"},{"body":{"nodeType":"YulBlock","src":"21815:156:27","statements":[{"nodeType":"YulVariableDeclaration","src":"21833:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21860:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21865:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21856:3:27"},"nodeType":"YulFunctionCall","src":"21856:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21850:5:27"},"nodeType":"YulFunctionCall","src":"21850:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"21837:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21900:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"21927:9:27"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21942:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21950:4:27","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21938:3:27"},"nodeType":"YulFunctionCall","src":"21938:17:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"21908:18:27"},"nodeType":"YulFunctionCall","src":"21908:48:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21893:6:27"},"nodeType":"YulFunctionCall","src":"21893:64:27"},"nodeType":"YulExpressionStatement","src":"21893:64:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"21798:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"21807:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21795:2:27"},"nodeType":"YulFunctionCall","src":"21795:19:27"},"nodeType":"YulIf","src":"21792:179:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21991:4:27"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22005:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22013:1:27","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22001:3:27"},"nodeType":"YulFunctionCall","src":"22001:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"22017:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21997:3:27"},"nodeType":"YulFunctionCall","src":"21997:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21984:6:27"},"nodeType":"YulFunctionCall","src":"21984:36:27"},"nodeType":"YulExpressionStatement","src":"21984:36:27"}]},"nodeType":"YulCase","src":"21413:617:27","value":{"kind":"number","nodeType":"YulLiteral","src":"21418:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"22047:222:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22061:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22074:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22065:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"22098:67:27","statements":[{"nodeType":"YulAssignment","src":"22116:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22135:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22140:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22131:3:27"},"nodeType":"YulFunctionCall","src":"22131:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22125:5:27"},"nodeType":"YulFunctionCall","src":"22125:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22116:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"22091:6:27"},"nodeType":"YulIf","src":"22088:77:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22185:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22244:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"22251:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"22191:52:27"},"nodeType":"YulFunctionCall","src":"22191:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22178:6:27"},"nodeType":"YulFunctionCall","src":"22178:81:27"},"nodeType":"YulExpressionStatement","src":"22178:81:27"}]},"nodeType":"YulCase","src":"22039:230:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21393:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21401:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21390:2:27"},"nodeType":"YulFunctionCall","src":"21390:14:27"},"nodeType":"YulSwitch","src":"21383:886:27"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"20964:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"20970:3:27","type":""}],"src":"20885:1390:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461012d5780639790242114610158578063dedff9c614610174578063f2fde38b146101b15761007b565b806301ffc9a71461008057806354f6127f146100bd578063715018a6146100fa5780637f23690c14610111575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610850565b6101da565b6040516100b49190610898565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df91906108e9565b61023b565b6040516100f191906109a6565b60405180910390f35b34801561010657600080fd5b5061010f61024d565b005b61012b60048036038101906101269190610afd565b610261565b005b34801561013957600080fd5b506101426102b1565b60405161014f9190610b9a565b60405180910390f35b610172600480360381019061016d9190610d5e565b6102da565b005b34801561018057600080fd5b5061019b60048036038101906101969190610dd6565b61032a565b6040516101a89190610f2b565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190610f79565b6103db565b005b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061023457506102338261045e565b5b9050919050565b6060610246826104c8565b9050919050565b61025561056d565b61025f60006105eb565b565b61026961056d565b600034146102a3576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ad82826106af565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102e261056d565b6000341461031c576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610326828261070c565b5050565b6060815167ffffffffffffffff811115610347576103466109d2565b5b60405190808252806020026020018201604052801561037a57816020015b60608152602001906001900390816103655790505b50905060005b82518110156103d5576103ac83828151811061039f5761039e610fa6565b5b60200260200101516104c8565b8282815181106103bf576103be610fa6565b5b6020026020010181905250806001019050610380565b50919050565b6103e361056d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044990611058565b60405180910390fd5b61045b816105eb565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606001600083815260200190815260200160002080546104e8906110a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610514906110a7565b80156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b50505050509050919050565b6105756107dc565b73ffffffffffffffffffffffffffffffffffffffff166105936102b1565b73ffffffffffffffffffffffffffffffffffffffff16146105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e090611124565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b806001600084815260200190815260200160002090816106cf91906112fa565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405161070091906109a6565b60405180910390a25050565b8051825114610747576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000825103610782576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156107d7576107cc8382815181106107a4576107a3610fa6565b5b60200260200101518383815181106107bf576107be610fa6565b5b60200260200101516106af565b806001019050610785565b505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61082d816107f8565b811461083857600080fd5b50565b60008135905061084a81610824565b92915050565b600060208284031215610866576108656107ee565b5b60006108748482850161083b565b91505092915050565b60008115159050919050565b6108928161087d565b82525050565b60006020820190506108ad6000830184610889565b92915050565b6000819050919050565b6108c6816108b3565b81146108d157600080fd5b50565b6000813590506108e3816108bd565b92915050565b6000602082840312156108ff576108fe6107ee565b5b600061090d848285016108d4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610950578082015181840152602081019050610935565b60008484015250505050565b6000601f19601f8301169050919050565b600061097882610916565b6109828185610921565b9350610992818560208601610932565b61099b8161095c565b840191505092915050565b600060208201905081810360008301526109c0818461096d565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a0a8261095c565b810181811067ffffffffffffffff82111715610a2957610a286109d2565b5b80604052505050565b6000610a3c6107e4565b9050610a488282610a01565b919050565b600067ffffffffffffffff821115610a6857610a676109d2565b5b610a718261095c565b9050602081019050919050565b82818337600083830152505050565b6000610aa0610a9b84610a4d565b610a32565b905082815260208101848484011115610abc57610abb6109cd565b5b610ac7848285610a7e565b509392505050565b600082601f830112610ae457610ae36109c8565b5b8135610af4848260208601610a8d565b91505092915050565b60008060408385031215610b1457610b136107ee565b5b6000610b22858286016108d4565b925050602083013567ffffffffffffffff811115610b4357610b426107f3565b5b610b4f85828601610acf565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8482610b59565b9050919050565b610b9481610b79565b82525050565b6000602082019050610baf6000830184610b8b565b92915050565b600067ffffffffffffffff821115610bd057610bcf6109d2565b5b602082029050602081019050919050565b600080fd5b6000610bf9610bf484610bb5565b610a32565b90508083825260208201905060208402830185811115610c1c57610c1b610be1565b5b835b81811015610c455780610c3188826108d4565b845260208401935050602081019050610c1e565b5050509392505050565b600082601f830112610c6457610c636109c8565b5b8135610c74848260208601610be6565b91505092915050565b600067ffffffffffffffff821115610c9857610c976109d2565b5b602082029050602081019050919050565b6000610cbc610cb784610c7d565b610a32565b90508083825260208201905060208402830185811115610cdf57610cde610be1565b5b835b81811015610d2657803567ffffffffffffffff811115610d0457610d036109c8565b5b808601610d118982610acf565b85526020850194505050602081019050610ce1565b5050509392505050565b600082601f830112610d4557610d446109c8565b5b8135610d55848260208601610ca9565b91505092915050565b60008060408385031215610d7557610d746107ee565b5b600083013567ffffffffffffffff811115610d9357610d926107f3565b5b610d9f85828601610c4f565b925050602083013567ffffffffffffffff811115610dc057610dbf6107f3565b5b610dcc85828601610d30565b9150509250929050565b600060208284031215610dec57610deb6107ee565b5b600082013567ffffffffffffffff811115610e0a57610e096107f3565b5b610e1684828501610c4f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610e6782610916565b610e718185610e4b565b9350610e81818560208601610932565b610e8a8161095c565b840191505092915050565b6000610ea18383610e5c565b905092915050565b6000602082019050919050565b6000610ec182610e1f565b610ecb8185610e2a565b935083602082028501610edd85610e3b565b8060005b85811015610f195784840389528151610efa8582610e95565b9450610f0583610ea9565b925060208a01995050600181019050610ee1565b50829750879550505050505092915050565b60006020820190508181036000830152610f458184610eb6565b905092915050565b610f5681610b79565b8114610f6157600080fd5b50565b600081359050610f7381610f4d565b92915050565b600060208284031215610f8f57610f8e6107ee565b5b6000610f9d84828501610f64565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611042602683610fd5565b915061104d82610fe6565b604082019050919050565b6000602082019050818103600083015261107181611035565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110bf57607f821691505b6020821081036110d2576110d1611078565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061110e602083610fd5565b9150611119826110d8565b602082019050919050565b6000602082019050818103600083015261113d81611101565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111a67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611169565b6111b08683611169565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006111f76111f26111ed846111c8565b6111d2565b6111c8565b9050919050565b6000819050919050565b611211836111dc565b61122561121d826111fe565b848454611176565b825550505050565b600090565b61123a61122d565b611245818484611208565b505050565b5b818110156112695761125e600082611232565b60018101905061124b565b5050565b601f8211156112ae5761127f81611144565b61128884611159565b81016020851015611297578190505b6112ab6112a385611159565b83018261124a565b50505b505050565b600082821c905092915050565b60006112d1600019846008026112b3565b1980831691505092915050565b60006112ea83836112c0565b9150826002028217905092915050565b61130382610916565b67ffffffffffffffff81111561131c5761131b6109d2565b5b61132682546110a7565b61133182828561126d565b600060209050601f8311600181146113645760008415611352578287015190505b61135c85826112de565b8655506113c4565b601f19841661137286611144565b60005b8281101561139a57848901518255600182019150602085019450602081019050611375565b868310156113b757848901516113b3601f8916826112c0565b8355505b6001600288020188555050505b50505050505056fea26469706673582212201f5cca8c76f06eacba4b2ef498c7cf16fc25ded315f4f4cde92f565fdbbb998864736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B1 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x234 JUMPI POP PUSH2 0x233 DUP3 PUSH2 0x45E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x246 DUP3 PUSH2 0x4C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x255 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 PUSH2 0x5EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x269 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AD DUP3 DUP3 PUSH2 0x6AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x326 DUP3 DUP3 PUSH2 0x70C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x347 JUMPI PUSH2 0x346 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x37A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x365 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x3AC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x39F JUMPI PUSH2 0x39E PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4C8 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3BF JUMPI PUSH2 0x3BE PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x380 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x449 SWAP1 PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x45B DUP2 PUSH2 0x5EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x4E8 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x514 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x561 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x536 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x561 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x544 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x575 PUSH2 0x7DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x593 PUSH2 0x2B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E0 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD SUB PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x7D7 JUMPI PUSH2 0x7CC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7A4 JUMPI PUSH2 0x7A3 PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7BF JUMPI PUSH2 0x7BE PUSH2 0xFA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6AF JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x785 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82D DUP2 PUSH2 0x7F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x84A DUP2 PUSH2 0x824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x874 DUP5 DUP3 DUP6 ADD PUSH2 0x83B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x892 DUP2 PUSH2 0x87D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x889 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C6 DUP2 PUSH2 0x8B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E3 DUP2 PUSH2 0x8BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FF JUMPI PUSH2 0x8FE PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x90D DUP5 DUP3 DUP6 ADD PUSH2 0x8D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x978 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x982 DUP2 DUP6 PUSH2 0x921 JUMP JUMPDEST SWAP4 POP PUSH2 0x992 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x932 JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0x95C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9C0 DUP2 DUP5 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA0A DUP3 PUSH2 0x95C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA29 JUMPI PUSH2 0xA28 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH2 0xA48 DUP3 DUP3 PUSH2 0xA01 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA68 JUMPI PUSH2 0xA67 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH2 0xA71 DUP3 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 PUSH2 0xA9B DUP5 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0x9CD JUMP JUMPDEST JUMPDEST PUSH2 0xAC7 DUP5 DUP3 DUP6 PUSH2 0xA7E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAE4 JUMPI PUSH2 0xAE3 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAF4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB14 JUMPI PUSH2 0xB13 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB22 DUP6 DUP3 DUP7 ADD PUSH2 0x8D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB43 JUMPI PUSH2 0xB42 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xB4F DUP6 DUP3 DUP7 ADD PUSH2 0xACF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB84 DUP3 PUSH2 0xB59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB94 DUP2 PUSH2 0xB79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBD0 JUMPI PUSH2 0xBCF PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBF9 PUSH2 0xBF4 DUP5 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1B PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC45 JUMPI DUP1 PUSH2 0xC31 DUP9 DUP3 PUSH2 0x8D4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC1E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC74 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC98 JUMPI PUSH2 0xC97 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBC PUSH2 0xCB7 DUP5 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xCDF JUMPI PUSH2 0xCDE PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD26 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xD11 DUP10 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCE1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD45 JUMPI PUSH2 0xD44 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD55 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD92 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xD9F DUP6 DUP3 DUP7 ADD PUSH2 0xC4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xDCC DUP6 DUP3 DUP7 ADD PUSH2 0xD30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEC JUMPI PUSH2 0xDEB PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0A JUMPI PUSH2 0xE09 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xE16 DUP5 DUP3 DUP6 ADD PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE67 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH2 0xE71 DUP2 DUP6 PUSH2 0xE4B JUMP JUMPDEST SWAP4 POP PUSH2 0xE81 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x932 JUMP JUMPDEST PUSH2 0xE8A DUP2 PUSH2 0x95C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA1 DUP4 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC1 DUP3 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0xECB DUP2 DUP6 PUSH2 0xE2A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xEDD DUP6 PUSH2 0xE3B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xF19 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xEFA DUP6 DUP3 PUSH2 0xE95 JUMP JUMPDEST SWAP5 POP PUSH2 0xF05 DUP4 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xEE1 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF45 DUP2 DUP5 PUSH2 0xEB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF56 DUP2 PUSH2 0xB79 JUMP JUMPDEST DUP2 EQ PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF73 DUP2 PUSH2 0xF4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8E PUSH2 0x7EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF9D DUP5 DUP3 DUP6 ADD PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1042 PUSH1 0x26 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x104D DUP3 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1071 DUP2 PUSH2 0x1035 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10D2 JUMPI PUSH2 0x10D1 PUSH2 0x1078 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110E PUSH1 0x20 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1119 DUP3 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x113D DUP2 PUSH2 0x1101 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x11A6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x11B0 DUP7 DUP4 PUSH2 0x1169 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 PUSH2 0x11F2 PUSH2 0x11ED DUP5 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1211 DUP4 PUSH2 0x11DC JUMP JUMPDEST PUSH2 0x1225 PUSH2 0x121D DUP3 PUSH2 0x11FE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1176 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x123A PUSH2 0x122D JUMP JUMPDEST PUSH2 0x1245 DUP2 DUP5 DUP5 PUSH2 0x1208 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1269 JUMPI PUSH2 0x125E PUSH1 0x0 DUP3 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x124B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x12AE JUMPI PUSH2 0x127F DUP2 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x1288 DUP5 PUSH2 0x1159 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1297 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x12AB PUSH2 0x12A3 DUP6 PUSH2 0x1159 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x124A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x12B3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EA DUP4 DUP4 PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1303 DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x131C JUMPI PUSH2 0x131B PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST PUSH2 0x1326 DUP3 SLOAD PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x1331 DUP3 DUP3 DUP6 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1364 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1352 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x135C DUP6 DUP3 PUSH2 0x12DE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1372 DUP7 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x139A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1375 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x13B7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x13B3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x12C0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0x5C 0xCA DUP13 PUSH23 0xF06EACBA4B2EF498C7CF16FC25DED315F4F4CDE92F565F 0xDB 0xBB SWAP10 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1009:6184:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6963:228;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1815:151;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:20;;;;;;;;;;;;;:::i;:::-;;3076:232:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3963:341:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2016:458;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6963:228:0;7062:4;178:10:1;7112:20:0;;7097:35;;;:11;:35;;;;:87;;;;7148:36;7172:11;7148:23;:36::i;:::-;7097:87;7078:106;;6963:228;;;:::o;1815:151::-;1901:22;1942:17;1951:7;1942:8;:17::i;:::-;1935:24;;1815:151;;;:::o;1824:101:20:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;3076:232:0:-;1094:13:20;:11;:13::i;:::-;3225:1:0::1;3212:9;:14;3208:55;;3235:28;;;;;;;;;;;;;;3208:55;3273:28;3282:7;3291:9;3273:8;:28::i;:::-;3076:232:::0;;:::o;1201:85:20:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3963:341:0:-;1094:13:20;:11;:13::i;:::-;4214:1:0::1;4201:9;:14;4197:55;;4224:28;;;;;;;;;;;;;;4197:55;4262:35;4276:8;4286:10;4262:13;:35::i;:::-;3963:341:::0;;:::o;2016:458::-;2117:25;2179:8;:15;2167:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:41;;2211:9;2206:234;2230:8;:15;2226:1;:19;2206:234;;;2279:21;2288:8;2297:1;2288:11;;;;;;;;:::i;:::-;;;;;;;;2279:8;:21::i;:::-;2263:10;2274:1;2263:13;;;;;;;;:::i;:::-;;;;;;;:37;;;;2412:3;;;;;2206:234;;;;2016:458;;;:::o;2074:198:20:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;829:155:22:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;4799:143:0:-;4879:22;4920:6;:15;4927:7;4920:15;;;;;;;;;;;4913:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4799:143;;;:::o;1359:130:20:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;5496:188:0:-;5622:9;5604:6;:15;5611:7;5604:15;;;;;;;;;;;:27;;;;;;:::i;:::-;;5658:7;5646:31;5667:9;5646:31;;;;;;:::i;:::-;;;;;;;;5496:188;;:::o;6326:589::-;6475:10;:17;6456:8;:15;:36;6452:112;;6515:38;;;;;;;;;;;;;;6452:112;6597:1;6578:8;:15;:20;6574:92;;6621:34;;;;;;;;;;;;;;6574:92;6681:9;6676:233;6700:8;:15;6696:1;:19;6676:233;;;6733:36;6742:8;6751:1;6742:11;;;;;;;;:::i;:::-;;;;;;;;6755:10;6766:1;6755:13;;;;;;;;:::i;:::-;;;;;;;;6733:8;:36::i;:::-;6881:3;;;;;6676:233;;;;6326:589;;:::o;655:96:21:-;708:7;734:10;727:17;;655:96;:::o;7:75:27:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:98::-;2260:6;2294:5;2288:12;2278:22;;2209:98;;;:::o;2313:168::-;2396:11;2430:6;2425:3;2418:19;2470:4;2465:3;2461:14;2446:29;;2313:168;;;;:::o;2487:246::-;2568:1;2578:113;2592:6;2589:1;2586:13;2578:113;;;2677:1;2672:3;2668:11;2662:18;2658:1;2653:3;2649:11;2642:39;2614:2;2611:1;2607:10;2602:15;;2578:113;;;2725:1;2716:6;2711:3;2707:16;2700:27;2549:184;2487:246;;;:::o;2739:102::-;2780:6;2831:2;2827:7;2822:2;2815:5;2811:14;2807:28;2797:38;;2739:102;;;:::o;2847:373::-;2933:3;2961:38;2993:5;2961:38;:::i;:::-;3015:70;3078:6;3073:3;3015:70;:::i;:::-;3008:77;;3094:65;3152:6;3147:3;3140:4;3133:5;3129:16;3094:65;:::i;:::-;3184:29;3206:6;3184:29;:::i;:::-;3179:3;3175:39;3168:46;;2937:283;2847:373;;;;:::o;3226:309::-;3337:4;3375:2;3364:9;3360:18;3352:26;;3424:9;3418:4;3414:20;3410:1;3399:9;3395:17;3388:47;3452:76;3523:4;3514:6;3452:76;:::i;:::-;3444:84;;3226:309;;;;:::o;3541:117::-;3650:1;3647;3640:12;3664:117;3773:1;3770;3763:12;3787:180;3835:77;3832:1;3825:88;3932:4;3929:1;3922:15;3956:4;3953:1;3946:15;3973:281;4056:27;4078:4;4056:27;:::i;:::-;4048:6;4044:40;4186:6;4174:10;4171:22;4150:18;4138:10;4135:34;4132:62;4129:88;;;4197:18;;:::i;:::-;4129:88;4237:10;4233:2;4226:22;4016:238;3973:281;;:::o;4260:129::-;4294:6;4321:20;;:::i;:::-;4311:30;;4350:33;4378:4;4370:6;4350:33;:::i;:::-;4260:129;;;:::o;4395:307::-;4456:4;4546:18;4538:6;4535:30;4532:56;;;4568:18;;:::i;:::-;4532:56;4606:29;4628:6;4606:29;:::i;:::-;4598:37;;4690:4;4684;4680:15;4672:23;;4395:307;;;:::o;4708:146::-;4805:6;4800:3;4795;4782:30;4846:1;4837:6;4832:3;4828:16;4821:27;4708:146;;;:::o;4860:423::-;4937:5;4962:65;4978:48;5019:6;4978:48;:::i;:::-;4962:65;:::i;:::-;4953:74;;5050:6;5043:5;5036:21;5088:4;5081:5;5077:16;5126:3;5117:6;5112:3;5108:16;5105:25;5102:112;;;5133:79;;:::i;:::-;5102:112;5223:54;5270:6;5265:3;5260;5223:54;:::i;:::-;4943:340;4860:423;;;;;:::o;5302:338::-;5357:5;5406:3;5399:4;5391:6;5387:17;5383:27;5373:122;;5414:79;;:::i;:::-;5373:122;5531:6;5518:20;5556:78;5630:3;5622:6;5615:4;5607:6;5603:17;5556:78;:::i;:::-;5547:87;;5363:277;5302:338;;;;:::o;5646:652::-;5723:6;5731;5780:2;5768:9;5759:7;5755:23;5751:32;5748:119;;;5786:79;;:::i;:::-;5748:119;5906:1;5931:53;5976:7;5967:6;5956:9;5952:22;5931:53;:::i;:::-;5921:63;;5877:117;6061:2;6050:9;6046:18;6033:32;6092:18;6084:6;6081:30;6078:117;;;6114:79;;:::i;:::-;6078:117;6219:62;6273:7;6264:6;6253:9;6249:22;6219:62;:::i;:::-;6209:72;;6004:287;5646:652;;;;;:::o;6304:126::-;6341:7;6381:42;6374:5;6370:54;6359:65;;6304:126;;;:::o;6436:96::-;6473:7;6502:24;6520:5;6502:24;:::i;:::-;6491:35;;6436:96;;;:::o;6538:118::-;6625:24;6643:5;6625:24;:::i;:::-;6620:3;6613:37;6538:118;;:::o;6662:222::-;6755:4;6793:2;6782:9;6778:18;6770:26;;6806:71;6874:1;6863:9;6859:17;6850:6;6806:71;:::i;:::-;6662:222;;;;:::o;6890:311::-;6967:4;7057:18;7049:6;7046:30;7043:56;;;7079:18;;:::i;:::-;7043:56;7129:4;7121:6;7117:17;7109:25;;7189:4;7183;7179:15;7171:23;;6890:311;;;:::o;7207:117::-;7316:1;7313;7306:12;7347:710;7443:5;7468:81;7484:64;7541:6;7484:64;:::i;:::-;7468:81;:::i;:::-;7459:90;;7569:5;7598:6;7591:5;7584:21;7632:4;7625:5;7621:16;7614:23;;7685:4;7677:6;7673:17;7665:6;7661:30;7714:3;7706:6;7703:15;7700:122;;;7733:79;;:::i;:::-;7700:122;7848:6;7831:220;7865:6;7860:3;7857:15;7831:220;;;7940:3;7969:37;8002:3;7990:10;7969:37;:::i;:::-;7964:3;7957:50;8036:4;8031:3;8027:14;8020:21;;7907:144;7891:4;7886:3;7882:14;7875:21;;7831:220;;;7835:21;7449:608;;7347:710;;;;;:::o;8080:370::-;8151:5;8200:3;8193:4;8185:6;8181:17;8177:27;8167:122;;8208:79;;:::i;:::-;8167:122;8325:6;8312:20;8350:94;8440:3;8432:6;8425:4;8417:6;8413:17;8350:94;:::i;:::-;8341:103;;8157:293;8080:370;;;;:::o;8456:320::-;8542:4;8632:18;8624:6;8621:30;8618:56;;;8654:18;;:::i;:::-;8618:56;8704:4;8696:6;8692:17;8684:25;;8764:4;8758;8754:15;8746:23;;8456:320;;;:::o;8797:942::-;8902:5;8927:90;8943:73;9009:6;8943:73;:::i;:::-;8927:90;:::i;:::-;8918:99;;9037:5;9066:6;9059:5;9052:21;9100:4;9093:5;9089:16;9082:23;;9153:4;9145:6;9141:17;9133:6;9129:30;9182:3;9174:6;9171:15;9168:122;;;9201:79;;:::i;:::-;9168:122;9316:6;9299:434;9333:6;9328:3;9325:15;9299:434;;;9422:3;9409:17;9458:18;9445:11;9442:35;9439:122;;;9480:79;;:::i;:::-;9439:122;9604:11;9596:6;9592:24;9642:46;9684:3;9672:10;9642:46;:::i;:::-;9637:3;9630:59;9718:4;9713:3;9709:14;9702:21;;9375:358;;9359:4;9354:3;9350:14;9343:21;;9299:434;;;9303:21;8908:831;;8797:942;;;;;:::o;9760:388::-;9840:5;9889:3;9882:4;9874:6;9870:17;9866:27;9856:122;;9897:79;;:::i;:::-;9856:122;10014:6;10001:20;10039:103;10138:3;10130:6;10123:4;10115:6;10111:17;10039:103;:::i;:::-;10030:112;;9846:302;9760:388;;;;:::o;10154:912::-;10281:6;10289;10338:2;10326:9;10317:7;10313:23;10309:32;10306:119;;;10344:79;;:::i;:::-;10306:119;10492:1;10481:9;10477:17;10464:31;10522:18;10514:6;10511:30;10508:117;;;10544:79;;:::i;:::-;10508:117;10649:78;10719:7;10710:6;10699:9;10695:22;10649:78;:::i;:::-;10639:88;;10435:302;10804:2;10793:9;10789:18;10776:32;10835:18;10827:6;10824:30;10821:117;;;10857:79;;:::i;:::-;10821:117;10962:87;11041:7;11032:6;11021:9;11017:22;10962:87;:::i;:::-;10952:97;;10747:312;10154:912;;;;;:::o;11072:539::-;11156:6;11205:2;11193:9;11184:7;11180:23;11176:32;11173:119;;;11211:79;;:::i;:::-;11173:119;11359:1;11348:9;11344:17;11331:31;11389:18;11381:6;11378:30;11375:117;;;11411:79;;:::i;:::-;11375:117;11516:78;11586:7;11577:6;11566:9;11562:22;11516:78;:::i;:::-;11506:88;;11302:302;11072:539;;;;:::o;11617:123::-;11693:6;11727:5;11721:12;11711:22;;11617:123;;;:::o;11746:193::-;11854:11;11888:6;11883:3;11876:19;11928:4;11923:3;11919:14;11904:29;;11746:193;;;;:::o;11945:141::-;12021:4;12044:3;12036:11;;12074:4;12069:3;12065:14;12057:22;;11945:141;;;:::o;12092:158::-;12165:11;12199:6;12194:3;12187:19;12239:4;12234:3;12230:14;12215:29;;12092:158;;;;:::o;12256:353::-;12332:3;12360:38;12392:5;12360:38;:::i;:::-;12414:60;12467:6;12462:3;12414:60;:::i;:::-;12407:67;;12483:65;12541:6;12536:3;12529:4;12522:5;12518:16;12483:65;:::i;:::-;12573:29;12595:6;12573:29;:::i;:::-;12568:3;12564:39;12557:46;;12336:273;12256:353;;;;:::o;12615:192::-;12702:10;12737:64;12797:3;12789:6;12737:64;:::i;:::-;12723:78;;12615:192;;;;:::o;12813:122::-;12892:4;12924;12919:3;12915:14;12907:22;;12813:122;;;:::o;12967:983::-;13104:3;13133:63;13190:5;13133:63;:::i;:::-;13212:95;13300:6;13295:3;13212:95;:::i;:::-;13205:102;;13333:3;13378:4;13370:6;13366:17;13361:3;13357:27;13408:65;13467:5;13408:65;:::i;:::-;13496:7;13527:1;13512:393;13537:6;13534:1;13531:13;13512:393;;;13608:9;13602:4;13598:20;13593:3;13586:33;13659:6;13653:13;13687:82;13764:4;13749:13;13687:82;:::i;:::-;13679:90;;13792:69;13854:6;13792:69;:::i;:::-;13782:79;;13890:4;13885:3;13881:14;13874:21;;13572:333;13559:1;13556;13552:9;13547:14;;13512:393;;;13516:14;13921:4;13914:11;;13941:3;13934:10;;13109:841;;;;;12967:983;;;;:::o;13956:409::-;14117:4;14155:2;14144:9;14140:18;14132:26;;14204:9;14198:4;14194:20;14190:1;14179:9;14175:17;14168:47;14232:126;14353:4;14344:6;14232:126;:::i;:::-;14224:134;;13956:409;;;;:::o;14371:122::-;14444:24;14462:5;14444:24;:::i;:::-;14437:5;14434:35;14424:63;;14483:1;14480;14473:12;14424:63;14371:122;:::o;14499:139::-;14545:5;14583:6;14570:20;14561:29;;14599:33;14626:5;14599:33;:::i;:::-;14499:139;;;;:::o;14644:329::-;14703:6;14752:2;14740:9;14731:7;14727:23;14723:32;14720:119;;;14758:79;;:::i;:::-;14720:119;14878:1;14903:53;14948:7;14939:6;14928:9;14924:22;14903:53;:::i;:::-;14893:63;;14849:117;14644:329;;;;:::o;14979:180::-;15027:77;15024:1;15017:88;15124:4;15121:1;15114:15;15148:4;15145:1;15138:15;15165:169;15249:11;15283:6;15278:3;15271:19;15323:4;15318:3;15314:14;15299:29;;15165:169;;;;:::o;15340:225::-;15480:34;15476:1;15468:6;15464:14;15457:58;15549:8;15544:2;15536:6;15532:15;15525:33;15340:225;:::o;15571:366::-;15713:3;15734:67;15798:2;15793:3;15734:67;:::i;:::-;15727:74;;15810:93;15899:3;15810:93;:::i;:::-;15928:2;15923:3;15919:12;15912:19;;15571:366;;;:::o;15943:419::-;16109:4;16147:2;16136:9;16132:18;16124:26;;16196:9;16190:4;16186:20;16182:1;16171:9;16167:17;16160:47;16224:131;16350:4;16224:131;:::i;:::-;16216:139;;15943:419;;;:::o;16368:180::-;16416:77;16413:1;16406:88;16513:4;16510:1;16503:15;16537:4;16534:1;16527:15;16554:320;16598:6;16635:1;16629:4;16625:12;16615:22;;16682:1;16676:4;16672:12;16703:18;16693:81;;16759:4;16751:6;16747:17;16737:27;;16693:81;16821:2;16813:6;16810:14;16790:18;16787:38;16784:84;;16840:18;;:::i;:::-;16784:84;16605:269;16554:320;;;:::o;16880:182::-;17020:34;17016:1;17008:6;17004:14;16997:58;16880:182;:::o;17068:366::-;17210:3;17231:67;17295:2;17290:3;17231:67;:::i;:::-;17224:74;;17307:93;17396:3;17307:93;:::i;:::-;17425:2;17420:3;17416:12;17409:19;;17068:366;;;:::o;17440:419::-;17606:4;17644:2;17633:9;17629:18;17621:26;;17693:9;17687:4;17683:20;17679:1;17668:9;17664:17;17657:47;17721:131;17847:4;17721:131;:::i;:::-;17713:139;;17440:419;;;:::o;17865:140::-;17913:4;17936:3;17928:11;;17959:3;17956:1;17949:14;17993:4;17990:1;17980:18;17972:26;;17865:140;;;:::o;18011:93::-;18048:6;18095:2;18090;18083:5;18079:14;18075:23;18065:33;;18011:93;;;:::o;18110:107::-;18154:8;18204:5;18198:4;18194:16;18173:37;;18110:107;;;;:::o;18223:393::-;18292:6;18342:1;18330:10;18326:18;18365:97;18395:66;18384:9;18365:97;:::i;:::-;18483:39;18513:8;18502:9;18483:39;:::i;:::-;18471:51;;18555:4;18551:9;18544:5;18540:21;18531:30;;18604:4;18594:8;18590:19;18583:5;18580:30;18570:40;;18299:317;;18223:393;;;;;:::o;18622:77::-;18659:7;18688:5;18677:16;;18622:77;;;:::o;18705:60::-;18733:3;18754:5;18747:12;;18705:60;;;:::o;18771:142::-;18821:9;18854:53;18872:34;18881:24;18899:5;18881:24;:::i;:::-;18872:34;:::i;:::-;18854:53;:::i;:::-;18841:66;;18771:142;;;:::o;18919:75::-;18962:3;18983:5;18976:12;;18919:75;;;:::o;19000:269::-;19110:39;19141:7;19110:39;:::i;:::-;19171:91;19220:41;19244:16;19220:41;:::i;:::-;19212:6;19205:4;19199:11;19171:91;:::i;:::-;19165:4;19158:105;19076:193;19000:269;;;:::o;19275:73::-;19320:3;19275:73;:::o;19354:189::-;19431:32;;:::i;:::-;19472:65;19530:6;19522;19516:4;19472:65;:::i;:::-;19407:136;19354:189;;:::o;19549:186::-;19609:120;19626:3;19619:5;19616:14;19609:120;;;19680:39;19717:1;19710:5;19680:39;:::i;:::-;19653:1;19646:5;19642:13;19633:22;;19609:120;;;19549:186;;:::o;19741:541::-;19841:2;19836:3;19833:11;19830:445;;;19875:37;19906:5;19875:37;:::i;:::-;19958:29;19976:10;19958:29;:::i;:::-;19948:8;19944:44;20141:2;20129:10;20126:18;20123:49;;;20162:8;20147:23;;20123:49;20185:80;20241:22;20259:3;20241:22;:::i;:::-;20231:8;20227:37;20214:11;20185:80;:::i;:::-;19845:430;;19830:445;19741:541;;;:::o;20288:117::-;20342:8;20392:5;20386:4;20382:16;20361:37;;20288:117;;;;:::o;20411:169::-;20455:6;20488:51;20536:1;20532:6;20524:5;20521:1;20517:13;20488:51;:::i;:::-;20484:56;20569:4;20563;20559:15;20549:25;;20462:118;20411:169;;;;:::o;20585:295::-;20661:4;20807:29;20832:3;20826:4;20807:29;:::i;:::-;20799:37;;20869:3;20866:1;20862:11;20856:4;20853:21;20845:29;;20585:295;;;;:::o;20885:1390::-;21000:36;21032:3;21000:36;:::i;:::-;21101:18;21093:6;21090:30;21087:56;;;21123:18;;:::i;:::-;21087:56;21167:38;21199:4;21193:11;21167:38;:::i;:::-;21252:66;21311:6;21303;21297:4;21252:66;:::i;:::-;21345:1;21369:4;21356:17;;21401:2;21393:6;21390:14;21418:1;21413:617;;;;22074:1;22091:6;22088:77;;;22140:9;22135:3;22131:19;22125:26;22116:35;;22088:77;22191:67;22251:6;22244:5;22191:67;:::i;:::-;22185:4;22178:81;22047:222;21383:886;;21413:617;21465:4;21461:9;21453:6;21449:22;21499:36;21530:4;21499:36;:::i;:::-;21557:1;21571:208;21585:7;21582:1;21579:14;21571:208;;;21664:9;21659:3;21655:19;21649:26;21641:6;21634:42;21715:1;21707:6;21703:14;21693:24;;21762:2;21751:9;21747:18;21734:31;;21608:4;21605:1;21601:12;21596:17;;21571:208;;;21807:6;21798:7;21795:19;21792:179;;;21865:9;21860:3;21856:19;21850:26;21908:48;21950:4;21942:6;21938:17;21927:9;21908:48;:::i;:::-;21900:6;21893:64;21815:156;21792:179;22017:1;22013;22005:6;22001:14;21997:22;21991:4;21984:36;21420:610;;;21383:886;;20975:1300;;;20885:1390;;:::o"},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network> and <CJ42>, <YamenMerhi>, <B00ste>, <SkimaHarvey>\",\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:requirements\":\"- `initialOwner` CANNOT be the zero address.\",\"details\":\"Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\",\"params\":{\"initialOwner\":\"the owner of the contract.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_store\":{\"details\":\"Map `bytes32` data keys to their `bytes` data values.\"}},\"title\":\"Deployable implementation with `constructor` of ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":\"ERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol":{"IERC725Y":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}}},\"title\":\"The interface for ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":\"IERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"IERC725Y":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The interface for ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":\"IERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"ILSP1UniversalReceiver":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"typeId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"receivedData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"returnedValue","type":"bytes"}],"name":"UniversalReceiver","type":"event"},{"inputs":[{"internalType":"bytes32","name":"typeId","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"universalReceiver","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"universalReceiver(bytes32,bytes)":"6bb56a14"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"receivedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnedValue\",\"type\":\"bytes\"}],\"name\":\"UniversalReceiver\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"universalReceiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\",\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"details\":\"Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\",\"params\":{\"from\":\"The address of the EOA or smart contract that called the {universalReceiver(...)} function.\",\"receivedData\":\"Any arbitrary data that was sent to the {universalReceiver(...)} function.\",\"returnedValue\":\"The value returned by the {universalReceiver(...)} function.\",\"typeId\":\"A `bytes32` unique identifier (= _\\\"hook\\\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\",\"value\":\"The amount sent to the {universalReceiver(...)} function.\"}}},\"kind\":\"dev\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"custom:events\":\"{UniversalReceiver} event.\",\"details\":\"Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\",\"params\":{\"data\":\"The arbitrary data received with the call.\",\"typeId\":\"The hash of a specific standard or a hook.\"}}},\"title\":\"Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\",\"version\":1},\"userdoc\":{\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"notice\":\"Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\"}},\"kind\":\"user\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"notice\":\"Reacted on received notification with `typeId` & `data`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":\"ILSP1UniversalReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]}},\"version\":1}"}},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"LSP1Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d3230f0719b91a7e00b75f7d1b54425762fe4730749f41133ee49ad7c7a14064736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD3 0x23 0xF SMOD NOT 0xB9 BYTE PUSH31 0xB75F7D1B54425762FE4730749F41133EE49AD7C7A14064736F6C63430008 SGT STOP CALLER ","sourceMap":"877:2519:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d3230f0719b91a7e00b75f7d1b54425762fe4730749f41133ee49ad7c7a14064736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD3 0x23 0xF SMOD NOT 0xB9 BYTE PUSH31 0xB75F7D1B54425762FE4730749F41133EE49AD7C7A14064736F6C63430008 SGT STOP CALLER ","sourceMap":"877:2519:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract that implements LSP1 and retrieve informations related to LSP1 `typeId`. Based on LSP1 Universal Receiver standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP1 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":\"LSP1Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0xa81bf1910c3b56b43bf58d0be2105c434ed3b65cfb3674e282b5aba3fd35afb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://374e7bef39522d65cf8e45c365178eb54d159b9267d0c2a2b97dfea10e52d41f\",\"dweb:/ipfs/QmfVYVnVSTRVAAifFSyFk8icePgw3eeqpjAKWAwfHMu6vX\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"LSP17Extendable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard. This module can be inherited to extend the functionality of the parent contract when calling a function that doesn't exist on the parent contract via forwarding the call to an extension mapped to the function selector being called, set originally by the parent contract\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Module to add more functionalities to a contract using extensions.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":\"LSP17Extendable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x4536ed09238f33ca9d40ed2e7c6254aac84bf81010b3524711524ae7fd30227c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abaed57358cb811d3b368d52f66db3c1327b96c38301d6eccf2ffaa6d5fa5928\",\"dweb:/ipfs/QmS1FtQH4Gn6xYrHCTHWJwxgAURvGvvfypsuQ2rRhrkPgi\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"LSP2Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fe371c16e0993d29b27ecd7c18aaa92398c722b861a9d95cf85d0be160b792664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xE3 PUSH18 0xC16E0993D29B27ECD7C18AAA92398C722B86 BYTE SWAP14 SWAP6 0xCF DUP6 0xD0 0xBE AND SIGNEXTEND PUSH26 0x2664736F6C634300081300330000000000000000000000000000 ","sourceMap":"482:15762:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fe371c16e0993d29b27ecd7c18aaa92398c722b861a9d95cf85d0be160b792664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xE3 PUSH18 0xC16E0993D29B27ECD7C18AAA92398C722B86 BYTE SWAP14 SWAP6 0xCF DUP6 0xD0 0xBE AND SIGNEXTEND PUSH26 0x2664736F6C634300081300330000000000000000000000000000 ","sourceMap":"482:15762:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP2Utils is a library of utility functions that can be used to encode data key of different key type defined on the LSP2 standard. Based on LSP2 ERC725Y JSON Schema standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP2 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":\"LSP2Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"LSP4DigitalAssetMetadata":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Standard Implementation of the LSP4 standard.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"initialOwner_\":\"The owner of the token contract.\",\"lsp4TokenType_\":\"The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\",\"name_\":\"The name of the token.\",\"symbol_\":\"The symbol of the token.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploying a digital asset `name_` with the `symbol_` symbol.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":\"LSP4DigitalAssetMetadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x6a718979925b05064c15e4de4b376dadec8d107d720aa762d22a06e44ed67fa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c82f6c8133c4d35d8cbbfc4da647204989acc5f38980be787263881e9f732f5\",\"dweb:/ipfs/QmdhHBnJvvo4Ax183HgHkL7w5A4w3ADXDQuewocnTVqsW6\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol":{"ILSP8IdentifiableDigitalAsset":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValues","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValues\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"custom:events\":\"{OperatorAuthorizationChanged} event.\",\"custom:requirements\":\"- `tokenId` must exist. - caller MUST be the {tokenOwnerOf} `tokenId`. - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address). - `operator` cannot be the zero address.\",\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValues\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"custom:info\":\"The tokenOwner is its own operator.\",\"custom:requirements\":\"- `tokenId` must exist. - caller must be the current {tokenOwnerOf} `tokenId`.\",\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"revokeOperator(address,bytes32,bool,bytes)\":{\"custom:events\":\"{OperatorRevoked} event with address of the operator being revoked for the caller (token owner)..\",\"custom:requirements\":\"- `tokenId` must exist. - caller must be the {tokenOwnerOf} `tokenId`. - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address). - `operator` cannot be the zero address.\",\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"custom:events\":\"{TokenIdDataChanged} event for each pair.\",\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"custom:events\":\"{TokenIdDataChanged} event.\",\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"custom:info\":\"if the `tokenId` is not owned by any address, the returned address will be `address(0)`\",\"custom:requirements\":\"`tokenId` must exist.\",\"details\":\"Returns the address that owns a given `tokenId`.\",\"params\":{\"tokenId\":\"The token ID to query the owner for.\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"custom:events\":\"- {Transfer} event when the `tokenId` is successfully transferred.\",\"custom:hint\":\"The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\",\"custom:info\":\"if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\",\"custom:requirements\":\"- `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself). - `from` must own the given `tokenId`. - If the caller is not `from`, it must be an operator for the `tokenId`.\",\"custom:warning\":\"Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified. This even if the `force` was set to `true`.\",\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"custom:events\":\"- {Transfer} events on each successful token transfer.\",\"custom:requirements\":\"- The arrays of `from`, `to` and `tokenId` must have the same length. - no values in the `from` array can be the zero address. - no values in the `to` array can be the zero address. - `from` and `to` cannot be the same address at the same index on each arrays. - each `tokenId` must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`.\",\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}}},\"title\":\"Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":\"ILSP8IdentifiableDigitalAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x2ca5a81c6c006030e2204d2a9997b15e954bc0696959c051a570c8a19eac4786\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bef5bbbad59c2dbd09e9e80ffe2dcf6dc3da5101d4f4b8beedcb0245d04b7b8a\",\"dweb:/ipfs/QmQYeCHfTtCTQVpy36De1d1vFacvbjTNipxDRNWuCQPNo6\"]}},\"version\":1}"}},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol":{"LSP8IdentifiableDigitalAsset":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"bytes","name":"storedData","type":"bytes"}],"name":"InvalidExtensionAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"InvalidFunctionSelector","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP8BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP8CannotSendToAddressZero","type":"error"},{"inputs":[],"name":"LSP8CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[],"name":"LSP8InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistentTokenId","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistingOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOperator","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOwner","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8OperatorAlreadyAuthorized","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8RevokeOperatorNotAuthorized","type":"error"},{"inputs":[],"name":"LSP8TokenContractCannotHoldValue","type":"error"},{"inputs":[],"name":"LSP8TokenIdFormatNotEditable","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataEmptyArray","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataLengthMismatch","type":"error"},{"inputs":[],"name":"LSP8TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"oldOwner","type":"address"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"LSP8TokenOwnerChanged","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8RevokeOperatorNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdFormatNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"LSP8TokenOwnerChanged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Standard implementation contract of the LSP8 standard. Minting and transferring are done by providing a unique `tokenId`. This implementation is agnostic to the way tokens are created. A supply mechanism has to be added in a derived contract using {_mint} For a generic mechanism, see {LSP7Mintable}.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8RevokeOperatorNotAuthorized(address,address,bytes32)\":[{\"details\":\"Reverts when the call to revoke operator is not authorized.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP8 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP8TokenIdFormatNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed. The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract. It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"LSP8TokenOwnerChanged(bytes32,address,address)\":[{\"details\":\"Reverts when the token owner changed inside the {_beforeTokenTransfer} hook.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"constructor\":{\"custom:warning\":\"Make sure the tokenId format provided on deployment is correct, as it can only be set once and cannot be changed in the ERC725Y storage after the contract has been deployed.\",\"details\":\"Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract. This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\",\"params\":{\"lsp4TokenType_\":\"The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\",\"lsp8TokenIdFormat_\":\"The format of tokenIds (= NFTs) that this contract will create.\",\"name_\":\"The name of the token\",\"newOwner_\":\"The owner of the the token-Metadata\",\"symbol_\":\"The symbol of the token\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the address that owns a given `tokenId`.\",\"params\":{\"tokenId\":\"The token ID to query the owner for.\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"notice\":\"LSP8 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"constructor\":{\"notice\":\"Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_` with tokenId format `lsp8TokenIdFormat_`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":\"LSP8IdentifiableDigitalAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0xa81bf1910c3b56b43bf58d0be2105c434ed3b65cfb3674e282b5aba3fd35afb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://374e7bef39522d65cf8e45c365178eb54d159b9267d0c2a2b97dfea10e52d41f\",\"dweb:/ipfs/QmfVYVnVSTRVAAifFSyFk8icePgw3eeqpjAKWAwfHMu6vX\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x4536ed09238f33ca9d40ed2e7c6254aac84bf81010b3524711524ae7fd30227c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abaed57358cb811d3b368d52f66db3c1327b96c38301d6eccf2ffaa6d5fa5928\",\"dweb:/ipfs/QmS1FtQH4Gn6xYrHCTHWJwxgAURvGvvfypsuQ2rRhrkPgi\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x6a718979925b05064c15e4de4b376dadec8d107d720aa762d22a06e44ed67fa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c82f6c8133c4d35d8cbbfc4da647204989acc5f38980be787263881e9f732f5\",\"dweb:/ipfs/QmdhHBnJvvo4Ax183HgHkL7w5A4w3ADXDQuewocnTVqsW6\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x2ca5a81c6c006030e2204d2a9997b15e954bc0696959c051a570c8a19eac4786\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bef5bbbad59c2dbd09e9e80ffe2dcf6dc3da5101d4f4b8beedcb0245d04b7b8a\",\"dweb:/ipfs/QmQYeCHfTtCTQVpy36De1d1vFacvbjTNipxDRNWuCQPNo6\"]},\"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\":{\"keccak256\":\"0xe958d7d5ab694eb054df65ef6fb37864ff9da33604a28a14ca42e25c23629065\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41f8b02e4c05b6eb3cfc447dae5862e38ba100269c56bb8d23ab26255085a41e\",\"dweb:/ipfs/QmVgeWYBovEJR1Xqph5AuJoP5EizSuY77gUUDmt48wmgWm\"]},\"@lukso/lsp8-contracts/contracts/LSP8Errors.sol\":{\"keccak256\":\"0xff2c1791043272eb4a7c05bc77fa0a0234678991b0700f84d92edbd31fefd905\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72b32242e8a4b7c12355de3f1c463437a81d8d5f8d34b3a8d25d726340b891c0\",\"dweb:/ipfs/Qmbhz53zdudSQbPwES2qMHqLHaph4GhigNETC481VWwK6J\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x1f707425bbcd5a84c7de2ad8ba9c2f620617b5f6483074c27ad6f259d91b7dd2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://799901e6bb5e3465a610d88dd4d314bac0aa787e8aaffd69e960e3e0975bda60\",\"dweb:/ipfs/QmVtLccrrEmvJuMiTFDrbxFuBQcSR8u9St14jXtFB9tmE8\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ERC165Checker":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c20731e4a0c8aa26588e7f7c408bd327ed3fc550da1bfc0792731b34a1fedb3c64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SMOD BALANCE 0xE4 LOG0 0xC8 0xAA 0x26 PC DUP15 PUSH32 0x7C408BD327ED3FC550DA1BFC0792731B34A1FEDB3C64736F6C63430008130033 ","sourceMap":"449:4621:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c20731e4a0c8aa26588e7f7c408bd327ed3fc550da1bfc0792731b34a1fedb3c64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SMOD BALANCE 0xE4 LOG0 0xC8 0xAA 0x26 PC DUP15 PUSH32 0x7C408BD327ED3FC550DA1BFC0792731B34A1FEDB3C64736F6C63430008130033 ","sourceMap":"449:4621:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":\"ERC165Checker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220132f5c7c8da4283aa45946987e4245121b7eef11c4e9859346044daf722bcf0764736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0x2F 0x5C PUSH29 0x8DA4283AA45946987E4245121B7EEF11C4E9859346044DAF722BCF0764 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"1329:11630:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220132f5c7c8da4283aa45946987e4245121b7eef11c4e9859346044daf722bcf0764736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0x2F 0x5C PUSH29 0x8DA4283AA45946987E4245121B7EEF11C4E9859346044DAF722BCF0764 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"1329:11630:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/typingGae.sol":{"TypingLeaderboardNFT":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"address","name":"newOwner_","type":"address"},{"internalType":"uint256","name":"lsp4TokenType_","type":"uint256"},{"internalType":"uint256","name":"lsp8TokenIdFormat_","type":"uint256"},{"internalType":"string","name":"secretCode_","type":"string"},{"internalType":"string[]","name":"metadataURIs_","type":"string[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"bytes","name":"storedData","type":"bytes"}],"name":"InvalidExtensionAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"InvalidFunctionSelector","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP8BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP8CannotSendToAddressZero","type":"error"},{"inputs":[],"name":"LSP8CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[],"name":"LSP8InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistentTokenId","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistingOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOperator","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOwner","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8OperatorAlreadyAuthorized","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8RevokeOperatorNotAuthorized","type":"error"},{"inputs":[],"name":"LSP8TokenContractCannotHoldValue","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8TokenIdAlreadyMinted","type":"error"},{"inputs":[],"name":"LSP8TokenIdFormatNotEditable","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataEmptyArray","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataLengthMismatch","type":"error"},{"inputs":[],"name":"LSP8TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"enum TypingLeaderboardNFT.Difficulty","name":"difficulty","type":"uint8"},{"indexed":true,"internalType":"address","name":"previousPlayer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"NFTRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"enum TypingLeaderboardNFT.Difficulty","name":"difficulty","type":"uint8"},{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"NFTRewarded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"enum TypingLeaderboardNFT.Difficulty","name":"difficulty","type":"uint8"},{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"score","type":"uint256"}],"name":"ScoreUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum TypingLeaderboardNFT.Difficulty","name":"","type":"uint8"}],"name":"difficultyMetadataURIs","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getTokenMetadata","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"enum TypingLeaderboardNFT.Difficulty","name":"","type":"uint8"}],"name":"hasFirstPlaceNFT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"enum TypingLeaderboardNFT.Difficulty","name":"difficulty","type":"uint8"},{"internalType":"string","name":"secretCode","type":"string"}],"name":"submitScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum TypingLeaderboardNFT.Difficulty","name":"","type":"uint8"}],"name":"topScorers","outputs":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1570":{"entryPoint":null,"id":1570,"parameterSlots":4,"returnSlots":0},"@_2114":{"entryPoint":null,"id":2114,"parameterSlots":5,"returnSlots":0},"@_3636":{"entryPoint":null,"id":3636,"parameterSlots":0,"returnSlots":0},"@_4802":{"entryPoint":null,"id":4802,"parameterSlots":7,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_add_4038":{"entryPoint":4894,"id":4038,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_3531":{"entryPoint":4097,"id":3531,"parameterSlots":5,"returnSlots":0},"@_beforeTokenTransfer_3516":{"entryPoint":4059,"id":3516,"parameterSlots":5,"returnSlots":0},"@_contains_4141":{"entryPoint":5410,"id":4141,"parameterSlots":2,"returnSlots":1},"@_exists_3088":{"entryPoint":3951,"id":3088,"parameterSlots":1,"returnSlots":1},"@_mint_3219":{"entryPoint":2354,"id":3219,"parameterSlots":4,"returnSlots":0},"@_msgSender_3737":{"entryPoint":1677,"id":3737,"parameterSlots":0,"returnSlots":1},"@_notifyTokenOperator_3548":{"entryPoint":4836,"id":3548,"parameterSlots":2,"returnSlots":0},"@_notifyTokenReceiver_3611":{"entryPoint":4104,"id":3611,"parameterSlots":3,"returnSlots":0},"@_setData_1616":{"entryPoint":1978,"id":1616,"parameterSlots":2,"returnSlots":0},"@_setData_196":{"entryPoint":1881,"id":196,"parameterSlots":2,"returnSlots":0},"@_setData_2312":{"entryPoint":4483,"id":2312,"parameterSlots":2,"returnSlots":0},"@_setTokenMetadata_5008":{"entryPoint":3045,"id":5008,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_3724":{"entryPoint":1685,"id":3724,"parameterSlots":1,"returnSlots":0},"@add_4208":{"entryPoint":4066,"id":4208,"parameterSlots":2,"returnSlots":1},"@add_4338":{"entryPoint":4780,"id":4338,"parameterSlots":2,"returnSlots":1},"@authorizeOperator_2711":{"entryPoint":3317,"id":2711,"parameterSlots":3,"returnSlots":0},"@notifyUniversalReceiver_522":{"entryPoint":5211,"id":522,"parameterSlots":3,"returnSlots":0},"@supportsERC165InterfaceUnchecked_3972":{"entryPoint":5016,"id":3972,"parameterSlots":2,"returnSlots":1},"@tokenOwnerOf_2368":{"entryPoint":4598,"id":2368,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":6060,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":9368,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":5722,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":5926,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":6209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":9443,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":5797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":9494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256t_string_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":6260,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8741,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":7786,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8770,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8618,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":7957,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":9648,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Difficulty_$4607_to_t_uint8_nonPadded_inplace_fromStack":{"entryPoint":7910,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6762,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9_to_t_string_memory_ptr_fromStack":{"entryPoint":6667,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8995,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6563,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_enum$_Difficulty_$4607_t_bytes32__to_t_address_t_uint8_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":7984,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6817,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9034,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8855,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8787,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":9133,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed":{"entryPoint":9072,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9178,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":8635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9262,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":9665,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6706,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6580,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":5593,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5445,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":6008,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":9314,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":5624,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":8168,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":7036,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8157,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6740,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8500,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6609,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6751,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":8189,"id":null,"parameterSlots":3,"returnSlots":0},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":7347,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":5880,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8758,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":9604,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Difficulty_$4607":{"entryPoint":7836,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5848,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5949,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8098,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":7308,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_enum$_Difficulty_$4607_to_t_uint8":{"entryPoint":7857,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":7182,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":8269,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":7502,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5678,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":7057,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6983,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":7472,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":5539,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":7172,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":8664,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint8":{"entryPoint":8111,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":7766,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":7947,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":7746,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint8":{"entryPoint":7890,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":7440,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":8051,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6889,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6936,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6842,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5492,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":7222,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5465,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":6055,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5470,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5460,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5455,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5475,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_248":{"entryPoint":7877,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":7733,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":7073,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":7427,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":7280,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9":{"entryPoint":6626,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863":{"entryPoint":8955,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":7086,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":7232,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_t_enum$_Difficulty_$4607":{"entryPoint":7813,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5900,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5959,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":7275,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:28417:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"423:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:27"},"nodeType":"YulFunctionCall","src":"433:12:27"},"nodeType":"YulExpressionStatement","src":"433:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:27"},{"body":{"nodeType":"YulBlock","src":"546:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:27"},"nodeType":"YulFunctionCall","src":"556:12:27"},"nodeType":"YulExpressionStatement","src":"556:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:27"},{"body":{"nodeType":"YulBlock","src":"628:54:27","statements":[{"nodeType":"YulAssignment","src":"638:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:27"},"nodeType":"YulFunctionCall","src":"652:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:27"},"nodeType":"YulFunctionCall","src":"668:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:27"},"nodeType":"YulFunctionCall","src":"648:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:27","type":""}],"src":"580:102:27"},{"body":{"nodeType":"YulBlock","src":"716:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:27"},"nodeType":"YulFunctionCall","src":"726:88:27"},"nodeType":"YulExpressionStatement","src":"726:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:27"},"nodeType":"YulFunctionCall","src":"823:15:27"},"nodeType":"YulExpressionStatement","src":"823:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:27"},"nodeType":"YulFunctionCall","src":"847:15:27"},"nodeType":"YulExpressionStatement","src":"847:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:27"},{"body":{"nodeType":"YulBlock","src":"917:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:27"},"nodeType":"YulFunctionCall","src":"957:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:27"},"nodeType":"YulFunctionCall","src":"945:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:27"},"nodeType":"YulFunctionCall","src":"1098:18:27"},"nodeType":"YulExpressionStatement","src":"1098:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:27"},"nodeType":"YulFunctionCall","src":"1036:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:27"},"nodeType":"YulFunctionCall","src":"1072:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:27"},"nodeType":"YulFunctionCall","src":"1033:62:27"},"nodeType":"YulIf","src":"1030:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:27"},"nodeType":"YulFunctionCall","src":"1127:22:27"},"nodeType":"YulExpressionStatement","src":"1127:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:27","type":""}],"src":"874:281:27"},{"body":{"nodeType":"YulBlock","src":"1202:88:27","statements":[{"nodeType":"YulAssignment","src":"1212:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:27"},"nodeType":"YulFunctionCall","src":"1222:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:27"},"nodeType":"YulFunctionCall","src":"1251:33:27"},"nodeType":"YulExpressionStatement","src":"1251:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:27","type":""}],"src":"1161:129:27"},{"body":{"nodeType":"YulBlock","src":"1363:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:27"},"nodeType":"YulFunctionCall","src":"1470:18:27"},"nodeType":"YulExpressionStatement","src":"1470:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:27"},"nodeType":"YulFunctionCall","src":"1437:30:27"},"nodeType":"YulIf","src":"1434:56:27"},{"nodeType":"YulAssignment","src":"1500:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:27"},"nodeType":"YulFunctionCall","src":"1508:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:27"}]},{"nodeType":"YulAssignment","src":"1574:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:27"},"nodeType":"YulFunctionCall","src":"1582:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:27","type":""}],"src":"1296:308:27"},{"body":{"nodeType":"YulBlock","src":"1672:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:27"},"nodeType":"YulFunctionCall","src":"1772:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:27"},"nodeType":"YulFunctionCall","src":"1791:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:27"},"nodeType":"YulFunctionCall","src":"1785:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:27"},"nodeType":"YulFunctionCall","src":"1765:39:27"},"nodeType":"YulExpressionStatement","src":"1765:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:27"},"nodeType":"YulFunctionCall","src":"1709:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:27","statements":[{"nodeType":"YulAssignment","src":"1725:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:27"},"nodeType":"YulFunctionCall","src":"1730:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:27","statements":[]},"src":"1701:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:27"},"nodeType":"YulFunctionCall","src":"1830:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:27"},"nodeType":"YulFunctionCall","src":"1823:27:27"},"nodeType":"YulExpressionStatement","src":"1823:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:27","type":""}],"src":"1610:246:27"},{"body":{"nodeType":"YulBlock","src":"1957:339:27","statements":[{"nodeType":"YulAssignment","src":"1967:75:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:27"},"nodeType":"YulFunctionCall","src":"1992:49:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:27"},"nodeType":"YulFunctionCall","src":"1976:66:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:27"},"nodeType":"YulFunctionCall","src":"2051:21:27"},"nodeType":"YulExpressionStatement","src":"2051:21:27"},{"nodeType":"YulVariableDeclaration","src":"2081:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:27"},"nodeType":"YulFunctionCall","src":"2092:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:27"},"nodeType":"YulFunctionCall","src":"2148:79:27"},"nodeType":"YulExpressionStatement","src":"2148:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:27"},"nodeType":"YulFunctionCall","src":"2123:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:27"},"nodeType":"YulFunctionCall","src":"2120:25:27"},"nodeType":"YulIf","src":"2117:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:27"},"nodeType":"YulFunctionCall","src":"2238:52:27"},"nodeType":"YulExpressionStatement","src":"2238:52:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:27","type":""}],"src":"1862:434:27"},{"body":{"nodeType":"YulBlock","src":"2389:282:27","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:27"},"nodeType":"YulFunctionCall","src":"2440:79:27"},"nodeType":"YulExpressionStatement","src":"2440:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:27"},"nodeType":"YulFunctionCall","src":"2413:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:27"},"nodeType":"YulFunctionCall","src":"2409:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:27"},"nodeType":"YulFunctionCall","src":"2402:35:27"},"nodeType":"YulIf","src":"2399:122:27"},{"nodeType":"YulVariableDeclaration","src":"2530:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:27"},"nodeType":"YulFunctionCall","src":"2544:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:27"},"nodeType":"YulFunctionCall","src":"2634:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:27"},"nodeType":"YulFunctionCall","src":"2575:90:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:27","type":""}],"src":"2316:355:27"},{"body":{"nodeType":"YulBlock","src":"2722:81:27","statements":[{"nodeType":"YulAssignment","src":"2732:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2747:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2754:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2743:3:27"},"nodeType":"YulFunctionCall","src":"2743:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2732:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2704:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2714:7:27","type":""}],"src":"2677:126:27"},{"body":{"nodeType":"YulBlock","src":"2854:51:27","statements":[{"nodeType":"YulAssignment","src":"2864:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2893:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2875:17:27"},"nodeType":"YulFunctionCall","src":"2875:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2864:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2836:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2846:7:27","type":""}],"src":"2809:96:27"},{"body":{"nodeType":"YulBlock","src":"2954:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"3011:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3020:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3023:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3013:6:27"},"nodeType":"YulFunctionCall","src":"3013:12:27"},"nodeType":"YulExpressionStatement","src":"3013:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2977:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3002:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2984:17:27"},"nodeType":"YulFunctionCall","src":"2984:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2974:2:27"},"nodeType":"YulFunctionCall","src":"2974:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2967:6:27"},"nodeType":"YulFunctionCall","src":"2967:43:27"},"nodeType":"YulIf","src":"2964:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2947:5:27","type":""}],"src":"2911:122:27"},{"body":{"nodeType":"YulBlock","src":"3102:80:27","statements":[{"nodeType":"YulAssignment","src":"3112:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3127:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3121:5:27"},"nodeType":"YulFunctionCall","src":"3121:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3112:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3170:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3143:26:27"},"nodeType":"YulFunctionCall","src":"3143:33:27"},"nodeType":"YulExpressionStatement","src":"3143:33:27"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3080:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"3088:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3096:5:27","type":""}],"src":"3039:143:27"},{"body":{"nodeType":"YulBlock","src":"3233:32:27","statements":[{"nodeType":"YulAssignment","src":"3243:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"3254:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3243:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3215:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3225:7:27","type":""}],"src":"3188:77:27"},{"body":{"nodeType":"YulBlock","src":"3314:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"3371:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3380:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3383:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3373:6:27"},"nodeType":"YulFunctionCall","src":"3373:12:27"},"nodeType":"YulExpressionStatement","src":"3373:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3337:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3362:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3344:17:27"},"nodeType":"YulFunctionCall","src":"3344:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3334:2:27"},"nodeType":"YulFunctionCall","src":"3334:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3327:6:27"},"nodeType":"YulFunctionCall","src":"3327:43:27"},"nodeType":"YulIf","src":"3324:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3307:5:27","type":""}],"src":"3271:122:27"},{"body":{"nodeType":"YulBlock","src":"3462:80:27","statements":[{"nodeType":"YulAssignment","src":"3472:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3487:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3481:5:27"},"nodeType":"YulFunctionCall","src":"3481:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3472:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3530:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3503:26:27"},"nodeType":"YulFunctionCall","src":"3503:33:27"},"nodeType":"YulExpressionStatement","src":"3503:33:27"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"3448:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3456:5:27","type":""}],"src":"3399:143:27"},{"body":{"nodeType":"YulBlock","src":"3640:229:27","statements":[{"body":{"nodeType":"YulBlock","src":"3745:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3747:16:27"},"nodeType":"YulFunctionCall","src":"3747:18:27"},"nodeType":"YulExpressionStatement","src":"3747:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3717:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3725:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3714:2:27"},"nodeType":"YulFunctionCall","src":"3714:30:27"},"nodeType":"YulIf","src":"3711:56:27"},{"nodeType":"YulAssignment","src":"3777:25:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3789:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3797:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3785:3:27"},"nodeType":"YulFunctionCall","src":"3785:17:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3777:4:27"}]},{"nodeType":"YulAssignment","src":"3839:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3851:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3857:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3847:3:27"},"nodeType":"YulFunctionCall","src":"3847:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3839:4:27"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3624:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3635:4:27","type":""}],"src":"3548:321:27"},{"body":{"nodeType":"YulBlock","src":"3964:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3981:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3984:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3974:6:27"},"nodeType":"YulFunctionCall","src":"3974:12:27"},"nodeType":"YulExpressionStatement","src":"3974:12:27"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3875:117:27"},{"body":{"nodeType":"YulBlock","src":"4137:837:27","statements":[{"nodeType":"YulAssignment","src":"4147:100:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4239:6:27"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4172:66:27"},"nodeType":"YulFunctionCall","src":"4172:74:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4156:15:27"},"nodeType":"YulFunctionCall","src":"4156:91:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4147:5:27"}]},{"nodeType":"YulVariableDeclaration","src":"4256:16:27","value":{"name":"array","nodeType":"YulIdentifier","src":"4267:5:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4260:3:27","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4289:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"4296:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4282:6:27"},"nodeType":"YulFunctionCall","src":"4282:21:27"},"nodeType":"YulExpressionStatement","src":"4282:21:27"},{"nodeType":"YulAssignment","src":"4312:23:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4323:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4330:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4319:3:27"},"nodeType":"YulFunctionCall","src":"4319:16:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4312:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"4345:44:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4363:6:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4375:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4383:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4371:3:27"},"nodeType":"YulFunctionCall","src":"4371:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4359:3:27"},"nodeType":"YulFunctionCall","src":"4359:30:27"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4349:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4417:103:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4431:77:27"},"nodeType":"YulFunctionCall","src":"4431:79:27"},"nodeType":"YulExpressionStatement","src":"4431:79:27"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4404:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"4412:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4401:2:27"},"nodeType":"YulFunctionCall","src":"4401:15:27"},"nodeType":"YulIf","src":"4398:122:27"},{"body":{"nodeType":"YulBlock","src":"4605:363:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4620:29:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4645:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4639:5:27"},"nodeType":"YulFunctionCall","src":"4639:10:27"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"4624:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4701:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4703:77:27"},"nodeType":"YulFunctionCall","src":"4703:79:27"},"nodeType":"YulExpressionStatement","src":"4703:79:27"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"4668:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"4681:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4665:2:27"},"nodeType":"YulFunctionCall","src":"4665:35:27"},"nodeType":"YulIf","src":"4662:122:27"},{"nodeType":"YulVariableDeclaration","src":"4797:42:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4819:6:27"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"4827:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4815:3:27"},"nodeType":"YulFunctionCall","src":"4815:24:27"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"4801:10:27","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4860:3:27"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"4907:10:27"},{"name":"end","nodeType":"YulIdentifier","src":"4919:3:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4865:41:27"},"nodeType":"YulFunctionCall","src":"4865:58:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4853:6:27"},"nodeType":"YulFunctionCall","src":"4853:71:27"},"nodeType":"YulExpressionStatement","src":"4853:71:27"},{"nodeType":"YulAssignment","src":"4937:21:27","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4948:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"4953:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4944:3:27"},"nodeType":"YulFunctionCall","src":"4944:14:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4937:3:27"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4558:3:27"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4563:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4555:2:27"},"nodeType":"YulFunctionCall","src":"4555:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4571:25:27","statements":[{"nodeType":"YulAssignment","src":"4573:21:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4584:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"4589:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4580:3:27"},"nodeType":"YulFunctionCall","src":"4580:14:27"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4573:3:27"}]}]},"pre":{"nodeType":"YulBlock","src":"4533:21:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4535:17:27","value":{"name":"offset","nodeType":"YulIdentifier","src":"4546:6:27"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4539:3:27","type":""}]}]},"src":"4529:439:27"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4107:6:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"4115:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"4123:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4131:5:27","type":""}],"src":"4014:960:27"},{"body":{"nodeType":"YulBlock","src":"5094:307:27","statements":[{"body":{"nodeType":"YulBlock","src":"5143:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5145:77:27"},"nodeType":"YulFunctionCall","src":"5145:79:27"},"nodeType":"YulExpressionStatement","src":"5145:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5122:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5130:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5118:3:27"},"nodeType":"YulFunctionCall","src":"5118:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"5137:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5114:3:27"},"nodeType":"YulFunctionCall","src":"5114:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5107:6:27"},"nodeType":"YulFunctionCall","src":"5107:35:27"},"nodeType":"YulIf","src":"5104:122:27"},{"nodeType":"YulVariableDeclaration","src":"5235:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5255:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5249:5:27"},"nodeType":"YulFunctionCall","src":"5249:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5239:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5271:124:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5368:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5376:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5364:3:27"},"nodeType":"YulFunctionCall","src":"5364:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"5383:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"5391:3:27"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5280:83:27"},"nodeType":"YulFunctionCall","src":"5280:115:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5271:5:27"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5072:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"5080:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5088:5:27","type":""}],"src":"4996:405:27"},{"body":{"nodeType":"YulBlock","src":"5651:1789:27","statements":[{"body":{"nodeType":"YulBlock","src":"5698:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5700:77:27"},"nodeType":"YulFunctionCall","src":"5700:79:27"},"nodeType":"YulExpressionStatement","src":"5700:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5672:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5681:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5668:3:27"},"nodeType":"YulFunctionCall","src":"5668:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5693:3:27","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5664:3:27"},"nodeType":"YulFunctionCall","src":"5664:33:27"},"nodeType":"YulIf","src":"5661:120:27"},{"nodeType":"YulBlock","src":"5791:291:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5806:38:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5830:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5841:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5826:3:27"},"nodeType":"YulFunctionCall","src":"5826:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5820:5:27"},"nodeType":"YulFunctionCall","src":"5820:24:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5810:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5891:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5893:77:27"},"nodeType":"YulFunctionCall","src":"5893:79:27"},"nodeType":"YulExpressionStatement","src":"5893:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5863:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5871:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5860:2:27"},"nodeType":"YulFunctionCall","src":"5860:30:27"},"nodeType":"YulIf","src":"5857:117:27"},{"nodeType":"YulAssignment","src":"5988:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6044:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6055:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6040:3:27"},"nodeType":"YulFunctionCall","src":"6040:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6064:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5998:41:27"},"nodeType":"YulFunctionCall","src":"5998:74:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5988:6:27"}]}]},{"nodeType":"YulBlock","src":"6092:292:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6107:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6131:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6142:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6127:3:27"},"nodeType":"YulFunctionCall","src":"6127:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6121:5:27"},"nodeType":"YulFunctionCall","src":"6121:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6111:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6193:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6195:77:27"},"nodeType":"YulFunctionCall","src":"6195:79:27"},"nodeType":"YulExpressionStatement","src":"6195:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6165:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6173:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6162:2:27"},"nodeType":"YulFunctionCall","src":"6162:30:27"},"nodeType":"YulIf","src":"6159:117:27"},{"nodeType":"YulAssignment","src":"6290:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6346:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6357:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6342:3:27"},"nodeType":"YulFunctionCall","src":"6342:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6366:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"6300:41:27"},"nodeType":"YulFunctionCall","src":"6300:74:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6290:6:27"}]}]},{"nodeType":"YulBlock","src":"6394:129:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6409:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6423:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6413:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6439:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6485:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6496:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6481:3:27"},"nodeType":"YulFunctionCall","src":"6481:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6505:7:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"6449:31:27"},"nodeType":"YulFunctionCall","src":"6449:64:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6439:6:27"}]}]},{"nodeType":"YulBlock","src":"6533:129:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6548:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6562:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6552:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6578:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6624:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6635:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6620:3:27"},"nodeType":"YulFunctionCall","src":"6620:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6644:7:27"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"6588:31:27"},"nodeType":"YulFunctionCall","src":"6588:64:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6578:6:27"}]}]},{"nodeType":"YulBlock","src":"6672:130:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6687:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6701:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6691:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6718:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6764:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6775:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6760:3:27"},"nodeType":"YulFunctionCall","src":"6760:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6784:7:27"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"6728:31:27"},"nodeType":"YulFunctionCall","src":"6728:64:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6718:6:27"}]}]},{"nodeType":"YulBlock","src":"6812:293:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6827:40:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6851:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6862:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6847:3:27"},"nodeType":"YulFunctionCall","src":"6847:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6841:5:27"},"nodeType":"YulFunctionCall","src":"6841:26:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6831:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6914:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6916:77:27"},"nodeType":"YulFunctionCall","src":"6916:79:27"},"nodeType":"YulExpressionStatement","src":"6916:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6886:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6894:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6883:2:27"},"nodeType":"YulFunctionCall","src":"6883:30:27"},"nodeType":"YulIf","src":"6880:117:27"},{"nodeType":"YulAssignment","src":"7011:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7067:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"7078:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7063:3:27"},"nodeType":"YulFunctionCall","src":"7063:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7087:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7021:41:27"},"nodeType":"YulFunctionCall","src":"7021:74:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7011:6:27"}]}]},{"nodeType":"YulBlock","src":"7115:318:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7130:40:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7154:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7165:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7150:3:27"},"nodeType":"YulFunctionCall","src":"7150:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7144:5:27"},"nodeType":"YulFunctionCall","src":"7144:26:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7134:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7217:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7219:77:27"},"nodeType":"YulFunctionCall","src":"7219:79:27"},"nodeType":"YulExpressionStatement","src":"7219:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7189:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7197:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7186:2:27"},"nodeType":"YulFunctionCall","src":"7186:30:27"},"nodeType":"YulIf","src":"7183:117:27"},{"nodeType":"YulAssignment","src":"7314:109:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7395:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"7406:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7391:3:27"},"nodeType":"YulFunctionCall","src":"7391:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7415:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7324:66:27"},"nodeType":"YulFunctionCall","src":"7324:99:27"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7314:6:27"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256t_string_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5573:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5584:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5596:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5604:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5612:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5620:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5628:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5636:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5644:6:27","type":""}],"src":"5407:2033:27"},{"body":{"nodeType":"YulBlock","src":"7511:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7528:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7551:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7533:17:27"},"nodeType":"YulFunctionCall","src":"7533:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7521:6:27"},"nodeType":"YulFunctionCall","src":"7521:37:27"},"nodeType":"YulExpressionStatement","src":"7521:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7499:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7506:3:27","type":""}],"src":"7446:118:27"},{"body":{"nodeType":"YulBlock","src":"7668:124:27","statements":[{"nodeType":"YulAssignment","src":"7678:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7690:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7701:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7686:3:27"},"nodeType":"YulFunctionCall","src":"7686:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7678:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7758:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7771:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7782:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7767:3:27"},"nodeType":"YulFunctionCall","src":"7767:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7714:43:27"},"nodeType":"YulFunctionCall","src":"7714:71:27"},"nodeType":"YulExpressionStatement","src":"7714:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7640:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7652:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7663:4:27","type":""}],"src":"7570:222:27"},{"body":{"nodeType":"YulBlock","src":"7894:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7911:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"7916:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7904:6:27"},"nodeType":"YulFunctionCall","src":"7904:19:27"},"nodeType":"YulExpressionStatement","src":"7904:19:27"},{"nodeType":"YulAssignment","src":"7932:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7951:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7956:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7947:3:27"},"nodeType":"YulFunctionCall","src":"7947:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7932:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7866:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"7871:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7882:11:27","type":""}],"src":"7798:169:27"},{"body":{"nodeType":"YulBlock","src":"8079:72:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8101:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8109:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8097:3:27"},"nodeType":"YulFunctionCall","src":"8097:14:27"},{"hexValue":"4d7573742070726f766964652033206d657461646174612055524973","kind":"string","nodeType":"YulLiteral","src":"8113:30:27","type":"","value":"Must provide 3 metadata URIs"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8090:6:27"},"nodeType":"YulFunctionCall","src":"8090:54:27"},"nodeType":"YulExpressionStatement","src":"8090:54:27"}]},"name":"store_literal_in_memory_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8071:6:27","type":""}],"src":"7973:178:27"},{"body":{"nodeType":"YulBlock","src":"8303:220:27","statements":[{"nodeType":"YulAssignment","src":"8313:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8379:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8384:2:27","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8320:58:27"},"nodeType":"YulFunctionCall","src":"8320:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8313:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8485:3:27"}],"functionName":{"name":"store_literal_in_memory_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9","nodeType":"YulIdentifier","src":"8396:88:27"},"nodeType":"YulFunctionCall","src":"8396:93:27"},"nodeType":"YulExpressionStatement","src":"8396:93:27"},{"nodeType":"YulAssignment","src":"8498:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8509:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8514:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8505:3:27"},"nodeType":"YulFunctionCall","src":"8505:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8498:3:27"}]}]},"name":"abi_encode_t_stringliteral_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8291:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8299:3:27","type":""}],"src":"8157:366:27"},{"body":{"nodeType":"YulBlock","src":"8700:248:27","statements":[{"nodeType":"YulAssignment","src":"8710:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8722:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8733:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8718:3:27"},"nodeType":"YulFunctionCall","src":"8718:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8710:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8757:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8768:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8753:3:27"},"nodeType":"YulFunctionCall","src":"8753:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8776:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"8782:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8772:3:27"},"nodeType":"YulFunctionCall","src":"8772:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8746:6:27"},"nodeType":"YulFunctionCall","src":"8746:47:27"},"nodeType":"YulExpressionStatement","src":"8746:47:27"},{"nodeType":"YulAssignment","src":"8802:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8936:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8810:124:27"},"nodeType":"YulFunctionCall","src":"8810:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8802:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8680:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8695:4:27","type":""}],"src":"8529:419:27"},{"body":{"nodeType":"YulBlock","src":"9013:40:27","statements":[{"nodeType":"YulAssignment","src":"9024:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9040:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9034:5:27"},"nodeType":"YulFunctionCall","src":"9034:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9024:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8996:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9006:6:27","type":""}],"src":"8954:99:27"},{"body":{"nodeType":"YulBlock","src":"9173:34:27","statements":[{"nodeType":"YulAssignment","src":"9183:18:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"9198:3:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9183:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9145:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"9150:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9161:11:27","type":""}],"src":"9059:148:27"},{"body":{"nodeType":"YulBlock","src":"9323:280:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9333:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9380:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9347:32:27"},"nodeType":"YulFunctionCall","src":"9347:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9337:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9395:96:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9479:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"9484:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9402:76:27"},"nodeType":"YulFunctionCall","src":"9402:89:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9395:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9539:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"9546:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9535:3:27"},"nodeType":"YulFunctionCall","src":"9535:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"9553:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"9558:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9500:34:27"},"nodeType":"YulFunctionCall","src":"9500:65:27"},"nodeType":"YulExpressionStatement","src":"9500:65:27"},{"nodeType":"YulAssignment","src":"9574:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9585:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"9590:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9581:3:27"},"nodeType":"YulFunctionCall","src":"9581:16:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9574:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9304:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9311:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9319:3:27","type":""}],"src":"9213:390:27"},{"body":{"nodeType":"YulBlock","src":"9745:139:27","statements":[{"nodeType":"YulAssignment","src":"9756:102:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9845:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"9854:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9763:81:27"},"nodeType":"YulFunctionCall","src":"9763:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9756:3:27"}]},{"nodeType":"YulAssignment","src":"9868:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"9875:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9868:3:27"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9724:3:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9730:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9741:3:27","type":""}],"src":"9609:275:27"},{"body":{"nodeType":"YulBlock","src":"9918:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9935:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9938:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9928:6:27"},"nodeType":"YulFunctionCall","src":"9928:88:27"},"nodeType":"YulExpressionStatement","src":"9928:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10032:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10035:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10025:6:27"},"nodeType":"YulFunctionCall","src":"10025:15:27"},"nodeType":"YulExpressionStatement","src":"10025:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10056:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10059:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10049:6:27"},"nodeType":"YulFunctionCall","src":"10049:15:27"},"nodeType":"YulExpressionStatement","src":"10049:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9890:180:27"},{"body":{"nodeType":"YulBlock","src":"10104:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10121:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10124:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10114:6:27"},"nodeType":"YulFunctionCall","src":"10114:88:27"},"nodeType":"YulExpressionStatement","src":"10114:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10218:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10221:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10211:6:27"},"nodeType":"YulFunctionCall","src":"10211:15:27"},"nodeType":"YulExpressionStatement","src":"10211:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10242:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10245:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10235:6:27"},"nodeType":"YulFunctionCall","src":"10235:15:27"},"nodeType":"YulExpressionStatement","src":"10235:15:27"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"10076:180:27"},{"body":{"nodeType":"YulBlock","src":"10290:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10307:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10310:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10300:6:27"},"nodeType":"YulFunctionCall","src":"10300:88:27"},"nodeType":"YulExpressionStatement","src":"10300:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10404:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10407:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10397:6:27"},"nodeType":"YulFunctionCall","src":"10397:15:27"},"nodeType":"YulExpressionStatement","src":"10397:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10428:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10431:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10421:6:27"},"nodeType":"YulFunctionCall","src":"10421:15:27"},"nodeType":"YulExpressionStatement","src":"10421:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10262:180:27"},{"body":{"nodeType":"YulBlock","src":"10499:269:27","statements":[{"nodeType":"YulAssignment","src":"10509:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10523:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"10529:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10519:3:27"},"nodeType":"YulFunctionCall","src":"10519:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10509:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"10540:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10570:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"10576:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10566:3:27"},"nodeType":"YulFunctionCall","src":"10566:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10544:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"10617:51:27","statements":[{"nodeType":"YulAssignment","src":"10631:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10645:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10653:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10641:3:27"},"nodeType":"YulFunctionCall","src":"10641:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10631:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10597:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10590:6:27"},"nodeType":"YulFunctionCall","src":"10590:26:27"},"nodeType":"YulIf","src":"10587:81:27"},{"body":{"nodeType":"YulBlock","src":"10720:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10734:16:27"},"nodeType":"YulFunctionCall","src":"10734:18:27"},"nodeType":"YulExpressionStatement","src":"10734:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10684:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10707:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10715:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10704:2:27"},"nodeType":"YulFunctionCall","src":"10704:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10681:2:27"},"nodeType":"YulFunctionCall","src":"10681:38:27"},"nodeType":"YulIf","src":"10678:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10483:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10492:6:27","type":""}],"src":"10448:320:27"},{"body":{"nodeType":"YulBlock","src":"10828:87:27","statements":[{"nodeType":"YulAssignment","src":"10838:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"10846:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10838:4:27"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10866:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"10869:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10859:6:27"},"nodeType":"YulFunctionCall","src":"10859:14:27"},"nodeType":"YulExpressionStatement","src":"10859:14:27"},{"nodeType":"YulAssignment","src":"10882:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10900:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10903:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10890:9:27"},"nodeType":"YulFunctionCall","src":"10890:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10882:4:27"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10815:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10823:4:27","type":""}],"src":"10774:141:27"},{"body":{"nodeType":"YulBlock","src":"10965:49:27","statements":[{"nodeType":"YulAssignment","src":"10975:33:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10993:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11000:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10989:3:27"},"nodeType":"YulFunctionCall","src":"10989:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"11005:2:27","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10985:3:27"},"nodeType":"YulFunctionCall","src":"10985:23:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10975:6:27"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10948:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"10958:6:27","type":""}],"src":"10921:93:27"},{"body":{"nodeType":"YulBlock","src":"11073:54:27","statements":[{"nodeType":"YulAssignment","src":"11083:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"11108:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"11114:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11104:3:27"},"nodeType":"YulFunctionCall","src":"11104:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"11083:8:27"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"11048:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"11054:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"11064:8:27","type":""}],"src":"11020:107:27"},{"body":{"nodeType":"YulBlock","src":"11209:317:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11219:35:27","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"11240:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"11252:1:27","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11236:3:27"},"nodeType":"YulFunctionCall","src":"11236:18:27"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"11223:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11263:109:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"11294:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11305:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"11275:18:27"},"nodeType":"YulFunctionCall","src":"11275:97:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"11267:4:27","type":""}]},{"nodeType":"YulAssignment","src":"11381:51:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"11412:9:27"},{"name":"toInsert","nodeType":"YulIdentifier","src":"11423:8:27"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"11393:18:27"},"nodeType":"YulFunctionCall","src":"11393:39:27"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"11381:8:27"}]},{"nodeType":"YulAssignment","src":"11441:30:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11454:5:27"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"11465:4:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11461:3:27"},"nodeType":"YulFunctionCall","src":"11461:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11450:3:27"},"nodeType":"YulFunctionCall","src":"11450:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11441:5:27"}]},{"nodeType":"YulAssignment","src":"11480:40:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11493:5:27"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"11504:8:27"},{"name":"mask","nodeType":"YulIdentifier","src":"11514:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11500:3:27"},"nodeType":"YulFunctionCall","src":"11500:19:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11490:2:27"},"nodeType":"YulFunctionCall","src":"11490:30:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11480:6:27"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11170:5:27","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"11177:10:27","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"11189:8:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11202:6:27","type":""}],"src":"11133:393:27"},{"body":{"nodeType":"YulBlock","src":"11564:28:27","statements":[{"nodeType":"YulAssignment","src":"11574:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"11581:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11574:3:27"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11550:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11560:3:27","type":""}],"src":"11532:60:27"},{"body":{"nodeType":"YulBlock","src":"11658:82:27","statements":[{"nodeType":"YulAssignment","src":"11668:66:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11726:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11708:17:27"},"nodeType":"YulFunctionCall","src":"11708:24:27"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"11699:8:27"},"nodeType":"YulFunctionCall","src":"11699:34:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11681:17:27"},"nodeType":"YulFunctionCall","src":"11681:53:27"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11668:9:27"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11638:5:27","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11648:9:27","type":""}],"src":"11598:142:27"},{"body":{"nodeType":"YulBlock","src":"11793:28:27","statements":[{"nodeType":"YulAssignment","src":"11803:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"11810:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11803:3:27"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11779:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11789:3:27","type":""}],"src":"11746:75:27"},{"body":{"nodeType":"YulBlock","src":"11903:193:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11913:63:27","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"11968:7:27"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11937:30:27"},"nodeType":"YulFunctionCall","src":"11937:39:27"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"11917:16:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11992:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12032:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12026:5:27"},"nodeType":"YulFunctionCall","src":"12026:11:27"},{"name":"offset","nodeType":"YulIdentifier","src":"12039:6:27"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"12071:16:27"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"12047:23:27"},"nodeType":"YulFunctionCall","src":"12047:41:27"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"11998:27:27"},"nodeType":"YulFunctionCall","src":"11998:91:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11985:6:27"},"nodeType":"YulFunctionCall","src":"11985:105:27"},"nodeType":"YulExpressionStatement","src":"11985:105:27"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11880:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"11886:6:27","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"11894:7:27","type":""}],"src":"11827:269:27"},{"body":{"nodeType":"YulBlock","src":"12151:24:27","statements":[{"nodeType":"YulAssignment","src":"12161:8:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12168:1:27","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12161:3:27"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12147:3:27","type":""}],"src":"12102:73:27"},{"body":{"nodeType":"YulBlock","src":"12234:136:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12244:46:27","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"12258:30:27"},"nodeType":"YulFunctionCall","src":"12258:32:27"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"12248:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12343:4:27"},{"name":"offset","nodeType":"YulIdentifier","src":"12349:6:27"},{"name":"zero_0","nodeType":"YulIdentifier","src":"12357:6:27"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12299:43:27"},"nodeType":"YulFunctionCall","src":"12299:65:27"},"nodeType":"YulExpressionStatement","src":"12299:65:27"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12220:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"12226:6:27","type":""}],"src":"12181:189:27"},{"body":{"nodeType":"YulBlock","src":"12426:136:27","statements":[{"body":{"nodeType":"YulBlock","src":"12493:63:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12537:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"12544:1:27","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"12507:29:27"},"nodeType":"YulFunctionCall","src":"12507:39:27"},"nodeType":"YulExpressionStatement","src":"12507:39:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12446:5:27"},{"name":"end","nodeType":"YulIdentifier","src":"12453:3:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12443:2:27"},"nodeType":"YulFunctionCall","src":"12443:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12458:26:27","statements":[{"nodeType":"YulAssignment","src":"12460:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12473:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"12480:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12469:3:27"},"nodeType":"YulFunctionCall","src":"12469:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"12460:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"12440:2:27","statements":[]},"src":"12436:120:27"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"12414:5:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"12421:3:27","type":""}],"src":"12376:186:27"},{"body":{"nodeType":"YulBlock","src":"12647:464:27","statements":[{"body":{"nodeType":"YulBlock","src":"12673:431:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12687:54:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12735:5:27"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"12703:31:27"},"nodeType":"YulFunctionCall","src":"12703:38:27"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"12691:8:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12754:63:27","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"12777:8:27"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"12805:10:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"12787:17:27"},"nodeType":"YulFunctionCall","src":"12787:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12773:3:27"},"nodeType":"YulFunctionCall","src":"12773:44:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"12758:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"12974:27:27","statements":[{"nodeType":"YulAssignment","src":"12976:23:27","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"12991:8:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"12976:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"12958:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"12970:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12955:2:27"},"nodeType":"YulFunctionCall","src":"12955:18:27"},"nodeType":"YulIf","src":"12952:49:27"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13043:11:27"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13060:8:27"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13088:3:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"13070:17:27"},"nodeType":"YulFunctionCall","src":"13070:22:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13056:3:27"},"nodeType":"YulFunctionCall","src":"13056:37:27"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"13014:28:27"},"nodeType":"YulFunctionCall","src":"13014:80:27"},"nodeType":"YulExpressionStatement","src":"13014:80:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"12664:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12669:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12661:2:27"},"nodeType":"YulFunctionCall","src":"12661:11:27"},"nodeType":"YulIf","src":"12658:446:27"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"12623:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"12630:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"12635:10:27","type":""}],"src":"12568:543:27"},{"body":{"nodeType":"YulBlock","src":"13180:54:27","statements":[{"nodeType":"YulAssignment","src":"13190:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"13215:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"13221:5:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13211:3:27"},"nodeType":"YulFunctionCall","src":"13211:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13190:8:27"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"13155:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"13161:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13171:8:27","type":""}],"src":"13117:117:27"},{"body":{"nodeType":"YulBlock","src":"13291:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13301:68:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13350:1:27","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"13353:5:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13346:3:27"},"nodeType":"YulFunctionCall","src":"13346:13:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13365:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13361:3:27"},"nodeType":"YulFunctionCall","src":"13361:6:27"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"13317:28:27"},"nodeType":"YulFunctionCall","src":"13317:51:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13313:3:27"},"nodeType":"YulFunctionCall","src":"13313:56:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"13305:4:27","type":""}]},{"nodeType":"YulAssignment","src":"13378:25:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13392:4:27"},{"name":"mask","nodeType":"YulIdentifier","src":"13398:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13388:3:27"},"nodeType":"YulFunctionCall","src":"13388:15:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13378:6:27"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13268:4:27","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"13274:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13284:6:27","type":""}],"src":"13240:169:27"},{"body":{"nodeType":"YulBlock","src":"13495:214:27","statements":[{"nodeType":"YulAssignment","src":"13628:37:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13655:4:27"},{"name":"len","nodeType":"YulIdentifier","src":"13661:3:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"13636:18:27"},"nodeType":"YulFunctionCall","src":"13636:29:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13628:4:27"}]},{"nodeType":"YulAssignment","src":"13674:29:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13685:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13695:1:27","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"13698:3:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13691:3:27"},"nodeType":"YulFunctionCall","src":"13691:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13682:2:27"},"nodeType":"YulFunctionCall","src":"13682:21:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"13674:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13476:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"13482:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"13490:4:27","type":""}],"src":"13414:295:27"},{"body":{"nodeType":"YulBlock","src":"13806:1303:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13817:51:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13864:3:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13831:32:27"},"nodeType":"YulFunctionCall","src":"13831:37:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"13821:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"13953:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13955:16:27"},"nodeType":"YulFunctionCall","src":"13955:18:27"},"nodeType":"YulExpressionStatement","src":"13955:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13925:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13933:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13922:2:27"},"nodeType":"YulFunctionCall","src":"13922:30:27"},"nodeType":"YulIf","src":"13919:56:27"},{"nodeType":"YulVariableDeclaration","src":"13985:52:27","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14031:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14025:5:27"},"nodeType":"YulFunctionCall","src":"14025:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"13999:25:27"},"nodeType":"YulFunctionCall","src":"13999:38:27"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"13989:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14130:4:27"},{"name":"oldLen","nodeType":"YulIdentifier","src":"14136:6:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"14144:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"14084:45:27"},"nodeType":"YulFunctionCall","src":"14084:67:27"},"nodeType":"YulExpressionStatement","src":"14084:67:27"},{"nodeType":"YulVariableDeclaration","src":"14161:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14178:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"14165:9:27","type":""}]},{"nodeType":"YulAssignment","src":"14189:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14202:4:27","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14189:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14253:611:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14267:37:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14286:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14298:4:27","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14294:3:27"},"nodeType":"YulFunctionCall","src":"14294:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14282:3:27"},"nodeType":"YulFunctionCall","src":"14282:22:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"14271:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14318:51:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14364:4:27"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"14332:31:27"},"nodeType":"YulFunctionCall","src":"14332:37:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"14322:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14382:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14391:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14386:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"14450:163:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14475:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14493:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14498:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14489:3:27"},"nodeType":"YulFunctionCall","src":"14489:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14483:5:27"},"nodeType":"YulFunctionCall","src":"14483:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14468:6:27"},"nodeType":"YulFunctionCall","src":"14468:42:27"},"nodeType":"YulExpressionStatement","src":"14468:42:27"},{"nodeType":"YulAssignment","src":"14527:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14541:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14549:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14537:3:27"},"nodeType":"YulFunctionCall","src":"14537:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14527:6:27"}]},{"nodeType":"YulAssignment","src":"14568:31:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14585:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14596:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14581:3:27"},"nodeType":"YulFunctionCall","src":"14581:18:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14568:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14416:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"14419:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14413:2:27"},"nodeType":"YulFunctionCall","src":"14413:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14428:21:27","statements":[{"nodeType":"YulAssignment","src":"14430:17:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14439:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"14442:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14435:3:27"},"nodeType":"YulFunctionCall","src":"14435:12:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14430:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"14409:3:27","statements":[]},"src":"14405:208:27"},{"body":{"nodeType":"YulBlock","src":"14649:156:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14667:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14694:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14699:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14690:3:27"},"nodeType":"YulFunctionCall","src":"14690:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14684:5:27"},"nodeType":"YulFunctionCall","src":"14684:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"14671:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14734:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"14761:9:27"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14776:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14784:4:27","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14772:3:27"},"nodeType":"YulFunctionCall","src":"14772:17:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"14742:18:27"},"nodeType":"YulFunctionCall","src":"14742:48:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14727:6:27"},"nodeType":"YulFunctionCall","src":"14727:64:27"},"nodeType":"YulExpressionStatement","src":"14727:64:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"14632:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"14641:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14629:2:27"},"nodeType":"YulFunctionCall","src":"14629:19:27"},"nodeType":"YulIf","src":"14626:179:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14825:4:27"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14839:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14847:1:27","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14835:3:27"},"nodeType":"YulFunctionCall","src":"14835:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"14851:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14831:3:27"},"nodeType":"YulFunctionCall","src":"14831:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14818:6:27"},"nodeType":"YulFunctionCall","src":"14818:36:27"},"nodeType":"YulExpressionStatement","src":"14818:36:27"}]},"nodeType":"YulCase","src":"14246:618:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14251:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"14881:222:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14895:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14908:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14899:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"14932:67:27","statements":[{"nodeType":"YulAssignment","src":"14950:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14969:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14974:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14965:3:27"},"nodeType":"YulFunctionCall","src":"14965:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14959:5:27"},"nodeType":"YulFunctionCall","src":"14959:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14950:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"14925:6:27"},"nodeType":"YulIf","src":"14922:77:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15019:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15078:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"15085:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"15025:52:27"},"nodeType":"YulFunctionCall","src":"15025:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15012:6:27"},"nodeType":"YulFunctionCall","src":"15012:81:27"},"nodeType":"YulExpressionStatement","src":"15012:81:27"}]},"nodeType":"YulCase","src":"14873:230:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14226:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14234:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14223:2:27"},"nodeType":"YulFunctionCall","src":"14223:14:27"},"nodeType":"YulSwitch","src":"14216:887:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"13795:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"13801:3:27","type":""}],"src":"13714:1395:27"},{"body":{"nodeType":"YulBlock","src":"15157:52:27","statements":[{"nodeType":"YulAssignment","src":"15167:35:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15192:2:27","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"15196:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15188:3:27"},"nodeType":"YulFunctionCall","src":"15188:14:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"15167:8:27"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15138:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"15148:8:27","type":""}],"src":"15115:94:27"},{"body":{"nodeType":"YulBlock","src":"15262:47:27","statements":[{"nodeType":"YulAssignment","src":"15272:31:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15297:5:27"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"15283:13:27"},"nodeType":"YulFunctionCall","src":"15283:20:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"15272:7:27"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15244:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"15254:7:27","type":""}],"src":"15215:94:27"},{"body":{"nodeType":"YulBlock","src":"15362:53:27","statements":[{"nodeType":"YulAssignment","src":"15372:37:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15403:5:27"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"15383:19:27"},"nodeType":"YulFunctionCall","src":"15383:26:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"15372:7:27"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15344:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"15354:7:27","type":""}],"src":"15315:100:27"},{"body":{"nodeType":"YulBlock","src":"15504:74:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15521:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15564:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"15546:17:27"},"nodeType":"YulFunctionCall","src":"15546:24:27"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"15526:19:27"},"nodeType":"YulFunctionCall","src":"15526:45:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15514:6:27"},"nodeType":"YulFunctionCall","src":"15514:58:27"},"nodeType":"YulExpressionStatement","src":"15514:58:27"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15492:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15499:3:27","type":""}],"src":"15421:157:27"},{"body":{"nodeType":"YulBlock","src":"15642:62:27","statements":[{"body":{"nodeType":"YulBlock","src":"15676:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"15678:16:27"},"nodeType":"YulFunctionCall","src":"15678:18:27"},"nodeType":"YulExpressionStatement","src":"15678:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15665:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"15672:1:27","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15662:2:27"},"nodeType":"YulFunctionCall","src":"15662:12:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15655:6:27"},"nodeType":"YulFunctionCall","src":"15655:20:27"},"nodeType":"YulIf","src":"15652:46:27"}]},"name":"validator_assert_t_enum$_Difficulty_$4607","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15635:5:27","type":""}],"src":"15584:120:27"},{"body":{"nodeType":"YulBlock","src":"15770:81:27","statements":[{"nodeType":"YulAssignment","src":"15780:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"15791:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"15780:7:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15839:5:27"}],"functionName":{"name":"validator_assert_t_enum$_Difficulty_$4607","nodeType":"YulIdentifier","src":"15797:41:27"},"nodeType":"YulFunctionCall","src":"15797:48:27"},"nodeType":"YulExpressionStatement","src":"15797:48:27"}]},"name":"cleanup_t_enum$_Difficulty_$4607","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15752:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"15762:7:27","type":""}],"src":"15710:141:27"},{"body":{"nodeType":"YulBlock","src":"15930:68:27","statements":[{"nodeType":"YulAssignment","src":"15940:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15986:5:27"}],"functionName":{"name":"cleanup_t_enum$_Difficulty_$4607","nodeType":"YulIdentifier","src":"15953:32:27"},"nodeType":"YulFunctionCall","src":"15953:39:27"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"15940:9:27"}]}]},"name":"convert_t_enum$_Difficulty_$4607_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15910:5:27","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"15920:9:27","type":""}],"src":"15857:141:27"},{"body":{"nodeType":"YulBlock","src":"16047:53:27","statements":[{"nodeType":"YulAssignment","src":"16057:36:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16082:3:27","type":"","value":"248"},{"name":"value","nodeType":"YulIdentifier","src":"16087:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16078:3:27"},"nodeType":"YulFunctionCall","src":"16078:15:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"16057:8:27"}]}]},"name":"shift_left_248","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16028:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"16038:8:27","type":""}],"src":"16004:96:27"},{"body":{"nodeType":"YulBlock","src":"16151:48:27","statements":[{"nodeType":"YulAssignment","src":"16161:32:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16187:5:27"}],"functionName":{"name":"shift_left_248","nodeType":"YulIdentifier","src":"16172:14:27"},"nodeType":"YulFunctionCall","src":"16172:21:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"16161:7:27"}]}]},"name":"leftAlign_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16133:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"16143:7:27","type":""}],"src":"16106:93:27"},{"body":{"nodeType":"YulBlock","src":"16301:98:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16318:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16385:5:27"}],"functionName":{"name":"convert_t_enum$_Difficulty_$4607_to_t_uint8","nodeType":"YulIdentifier","src":"16341:43:27"},"nodeType":"YulFunctionCall","src":"16341:50:27"}],"functionName":{"name":"leftAlign_t_uint8","nodeType":"YulIdentifier","src":"16323:17:27"},"nodeType":"YulFunctionCall","src":"16323:69:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16311:6:27"},"nodeType":"YulFunctionCall","src":"16311:82:27"},"nodeType":"YulExpressionStatement","src":"16311:82:27"}]},"name":"abi_encode_t_enum$_Difficulty_$4607_to_t_uint8_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16289:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16296:3:27","type":""}],"src":"16205:194:27"},{"body":{"nodeType":"YulBlock","src":"16450:32:27","statements":[{"nodeType":"YulAssignment","src":"16460:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"16471:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16460:7:27"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16432:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16442:7:27","type":""}],"src":"16405:77:27"},{"body":{"nodeType":"YulBlock","src":"16535:32:27","statements":[{"nodeType":"YulAssignment","src":"16545:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"16556:5:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"16545:7:27"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16517:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"16527:7:27","type":""}],"src":"16488:79:27"},{"body":{"nodeType":"YulBlock","src":"16656:74:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16673:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16716:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"16698:17:27"},"nodeType":"YulFunctionCall","src":"16698:24:27"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"16678:19:27"},"nodeType":"YulFunctionCall","src":"16678:45:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16666:6:27"},"nodeType":"YulFunctionCall","src":"16666:58:27"},"nodeType":"YulExpressionStatement","src":"16666:58:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16644:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16651:3:27","type":""}],"src":"16573:157:27"},{"body":{"nodeType":"YulBlock","src":"16921:378:27","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16994:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"17003:3:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16932:61:27"},"nodeType":"YulFunctionCall","src":"16932:75:27"},"nodeType":"YulExpressionStatement","src":"16932:75:27"},{"nodeType":"YulAssignment","src":"17016:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17027:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17032:2:27","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17023:3:27"},"nodeType":"YulFunctionCall","src":"17023:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17016:3:27"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17120:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"17129:3:27"}],"functionName":{"name":"abi_encode_t_enum$_Difficulty_$4607_to_t_uint8_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17045:74:27"},"nodeType":"YulFunctionCall","src":"17045:88:27"},"nodeType":"YulExpressionStatement","src":"17045:88:27"},{"nodeType":"YulAssignment","src":"17142:18:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17153:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17158:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17149:3:27"},"nodeType":"YulFunctionCall","src":"17149:11:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17142:3:27"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17232:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"17241:3:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17170:61:27"},"nodeType":"YulFunctionCall","src":"17170:75:27"},"nodeType":"YulExpressionStatement","src":"17170:75:27"},{"nodeType":"YulAssignment","src":"17254:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17265:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17270:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17261:3:27"},"nodeType":"YulFunctionCall","src":"17261:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17254:3:27"}]},{"nodeType":"YulAssignment","src":"17283:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"17290:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17283:3:27"}]}]},"name":"abi_encode_tuple_packed_t_address_t_enum$_Difficulty_$4607_t_bytes32__to_t_address_t_uint8_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16884:3:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16890:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16898:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16906:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16917:3:27","type":""}],"src":"16736:563:27"},{"body":{"nodeType":"YulBlock","src":"17333:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17350:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17353:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17343:6:27"},"nodeType":"YulFunctionCall","src":"17343:88:27"},"nodeType":"YulExpressionStatement","src":"17343:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17447:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17450:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17440:6:27"},"nodeType":"YulFunctionCall","src":"17440:15:27"},"nodeType":"YulExpressionStatement","src":"17440:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17471:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17474:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17464:6:27"},"nodeType":"YulFunctionCall","src":"17464:15:27"},"nodeType":"YulExpressionStatement","src":"17464:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17305:180:27"},{"body":{"nodeType":"YulBlock","src":"17534:43:27","statements":[{"nodeType":"YulAssignment","src":"17544:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17559:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"17566:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17555:3:27"},"nodeType":"YulFunctionCall","src":"17555:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17544:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17516:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17526:7:27","type":""}],"src":"17491:86:27"},{"body":{"nodeType":"YulBlock","src":"17624:126:27","statements":[{"nodeType":"YulAssignment","src":"17634:31:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17659:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"17643:15:27"},"nodeType":"YulFunctionCall","src":"17643:22:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17634:5:27"}]},{"body":{"nodeType":"YulBlock","src":"17693:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17695:16:27"},"nodeType":"YulFunctionCall","src":"17695:18:27"},"nodeType":"YulExpressionStatement","src":"17695:18:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17680:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"17687:4:27","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17677:2:27"},"nodeType":"YulFunctionCall","src":"17677:15:27"},"nodeType":"YulIf","src":"17674:41:27"},{"nodeType":"YulAssignment","src":"17724:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17735:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"17742:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17731:3:27"},"nodeType":"YulFunctionCall","src":"17731:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17724:3:27"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17610:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17620:3:27","type":""}],"src":"17583:167:27"},{"body":{"nodeType":"YulBlock","src":"17814:40:27","statements":[{"nodeType":"YulAssignment","src":"17825:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17841:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17835:5:27"},"nodeType":"YulFunctionCall","src":"17835:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17825:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17797:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17807:6:27","type":""}],"src":"17756:98:27"},{"body":{"nodeType":"YulBlock","src":"17913:87:27","statements":[{"nodeType":"YulAssignment","src":"17923:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17931:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17923:4:27"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17951:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"17954:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17944:6:27"},"nodeType":"YulFunctionCall","src":"17944:14:27"},"nodeType":"YulExpressionStatement","src":"17944:14:27"},{"nodeType":"YulAssignment","src":"17967:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17985:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17988:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17975:9:27"},"nodeType":"YulFunctionCall","src":"17975:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17967:4:27"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17900:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17908:4:27","type":""}],"src":"17860:140:27"},{"body":{"nodeType":"YulBlock","src":"18084:463:27","statements":[{"body":{"nodeType":"YulBlock","src":"18110:430:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18124:53:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18171:5:27"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"18140:30:27"},"nodeType":"YulFunctionCall","src":"18140:37:27"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"18128:8:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18190:63:27","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"18213:8:27"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"18241:10:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"18223:17:27"},"nodeType":"YulFunctionCall","src":"18223:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18209:3:27"},"nodeType":"YulFunctionCall","src":"18209:44:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"18194:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"18410:27:27","statements":[{"nodeType":"YulAssignment","src":"18412:23:27","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"18427:8:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"18412:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"18394:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"18406:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18391:2:27"},"nodeType":"YulFunctionCall","src":"18391:18:27"},"nodeType":"YulIf","src":"18388:49:27"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"18479:11:27"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"18496:8:27"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18524:3:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"18506:17:27"},"nodeType":"YulFunctionCall","src":"18506:22:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18492:3:27"},"nodeType":"YulFunctionCall","src":"18492:37:27"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"18450:28:27"},"nodeType":"YulFunctionCall","src":"18450:80:27"},"nodeType":"YulExpressionStatement","src":"18450:80:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18101:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18106:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18098:2:27"},"nodeType":"YulFunctionCall","src":"18098:11:27"},"nodeType":"YulIf","src":"18095:445:27"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"18060:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"18067:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"18072:10:27","type":""}],"src":"18006:541:27"},{"body":{"nodeType":"YulBlock","src":"18643:1300:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18654:50:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18700:3:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"18668:31:27"},"nodeType":"YulFunctionCall","src":"18668:36:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"18658:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"18789:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18791:16:27"},"nodeType":"YulFunctionCall","src":"18791:18:27"},"nodeType":"YulExpressionStatement","src":"18791:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18761:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"18769:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18758:2:27"},"nodeType":"YulFunctionCall","src":"18758:30:27"},"nodeType":"YulIf","src":"18755:56:27"},{"nodeType":"YulVariableDeclaration","src":"18821:52:27","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18867:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18861:5:27"},"nodeType":"YulFunctionCall","src":"18861:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"18835:25:27"},"nodeType":"YulFunctionCall","src":"18835:38:27"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"18825:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18965:4:27"},{"name":"oldLen","nodeType":"YulIdentifier","src":"18971:6:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"18979:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"18920:44:27"},"nodeType":"YulFunctionCall","src":"18920:66:27"},"nodeType":"YulExpressionStatement","src":"18920:66:27"},{"nodeType":"YulVariableDeclaration","src":"18996:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19013:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"19000:9:27","type":""}]},{"nodeType":"YulAssignment","src":"19024:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19037:4:27","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19024:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"19088:610:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19102:37:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19121:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19133:4:27","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19129:3:27"},"nodeType":"YulFunctionCall","src":"19129:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19117:3:27"},"nodeType":"YulFunctionCall","src":"19117:22:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"19106:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19153:50:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19198:4:27"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"19167:30:27"},"nodeType":"YulFunctionCall","src":"19167:36:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"19157:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19216:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19225:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19220:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"19284:163:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19309:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19327:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19332:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19323:3:27"},"nodeType":"YulFunctionCall","src":"19323:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19317:5:27"},"nodeType":"YulFunctionCall","src":"19317:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19302:6:27"},"nodeType":"YulFunctionCall","src":"19302:42:27"},"nodeType":"YulExpressionStatement","src":"19302:42:27"},{"nodeType":"YulAssignment","src":"19361:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19375:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19383:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19371:3:27"},"nodeType":"YulFunctionCall","src":"19371:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19361:6:27"}]},{"nodeType":"YulAssignment","src":"19402:31:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19419:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19430:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19415:3:27"},"nodeType":"YulFunctionCall","src":"19415:18:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19402:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19250:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"19253:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19247:2:27"},"nodeType":"YulFunctionCall","src":"19247:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19262:21:27","statements":[{"nodeType":"YulAssignment","src":"19264:17:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19273:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"19276:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19269:3:27"},"nodeType":"YulFunctionCall","src":"19269:12:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19264:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"19243:3:27","statements":[]},"src":"19239:208:27"},{"body":{"nodeType":"YulBlock","src":"19483:156:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19501:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19528:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19533:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19524:3:27"},"nodeType":"YulFunctionCall","src":"19524:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19518:5:27"},"nodeType":"YulFunctionCall","src":"19518:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"19505:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19568:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"19595:9:27"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19610:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19618:4:27","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19606:3:27"},"nodeType":"YulFunctionCall","src":"19606:17:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"19576:18:27"},"nodeType":"YulFunctionCall","src":"19576:48:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19561:6:27"},"nodeType":"YulFunctionCall","src":"19561:64:27"},"nodeType":"YulExpressionStatement","src":"19561:64:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"19466:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"19475:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19463:2:27"},"nodeType":"YulFunctionCall","src":"19463:19:27"},"nodeType":"YulIf","src":"19460:179:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19659:4:27"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19673:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19681:1:27","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19669:3:27"},"nodeType":"YulFunctionCall","src":"19669:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"19685:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19665:3:27"},"nodeType":"YulFunctionCall","src":"19665:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19652:6:27"},"nodeType":"YulFunctionCall","src":"19652:36:27"},"nodeType":"YulExpressionStatement","src":"19652:36:27"}]},"nodeType":"YulCase","src":"19081:617:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19086:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19715:222:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19729:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19742:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"19733:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"19766:67:27","statements":[{"nodeType":"YulAssignment","src":"19784:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19803:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19808:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19799:3:27"},"nodeType":"YulFunctionCall","src":"19799:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19793:5:27"},"nodeType":"YulFunctionCall","src":"19793:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19784:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"19759:6:27"},"nodeType":"YulIf","src":"19756:77:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19853:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19912:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"19919:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"19859:52:27"},"nodeType":"YulFunctionCall","src":"19859:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19846:6:27"},"nodeType":"YulFunctionCall","src":"19846:81:27"},"nodeType":"YulExpressionStatement","src":"19846:81:27"}]},"nodeType":"YulCase","src":"19707:230:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19061:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19069:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19058:2:27"},"nodeType":"YulFunctionCall","src":"19058:14:27"},"nodeType":"YulSwitch","src":"19051:886:27"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18632:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"18638:3:27","type":""}],"src":"18553:1390:27"},{"body":{"nodeType":"YulBlock","src":"20044:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20061:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"20066:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20054:6:27"},"nodeType":"YulFunctionCall","src":"20054:19:27"},"nodeType":"YulExpressionStatement","src":"20054:19:27"},{"nodeType":"YulAssignment","src":"20082:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20101:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20106:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20097:3:27"},"nodeType":"YulFunctionCall","src":"20097:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20082:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20016:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"20021:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20032:11:27","type":""}],"src":"19949:168:27"},{"body":{"nodeType":"YulBlock","src":"20213:283:27","statements":[{"nodeType":"YulVariableDeclaration","src":"20223:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20269:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"20237:31:27"},"nodeType":"YulFunctionCall","src":"20237:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20227:6:27","type":""}]},{"nodeType":"YulAssignment","src":"20284:77:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20349:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"20354:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20291:57:27"},"nodeType":"YulFunctionCall","src":"20291:70:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20284:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20409:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"20416:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20405:3:27"},"nodeType":"YulFunctionCall","src":"20405:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"20423:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"20428:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"20370:34:27"},"nodeType":"YulFunctionCall","src":"20370:65:27"},"nodeType":"YulExpressionStatement","src":"20370:65:27"},{"nodeType":"YulAssignment","src":"20444:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20455:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20482:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"20460:21:27"},"nodeType":"YulFunctionCall","src":"20460:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20451:3:27"},"nodeType":"YulFunctionCall","src":"20451:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20444:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20194:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20201:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20209:3:27","type":""}],"src":"20123:373:27"},{"body":{"nodeType":"YulBlock","src":"20618:193:27","statements":[{"nodeType":"YulAssignment","src":"20628:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20640:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20651:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20636:3:27"},"nodeType":"YulFunctionCall","src":"20636:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20628:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20675:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20686:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20671:3:27"},"nodeType":"YulFunctionCall","src":"20671:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20694:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"20700:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20690:3:27"},"nodeType":"YulFunctionCall","src":"20690:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20664:6:27"},"nodeType":"YulFunctionCall","src":"20664:47:27"},"nodeType":"YulExpressionStatement","src":"20664:47:27"},{"nodeType":"YulAssignment","src":"20720:84:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20790:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"20799:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20728:61:27"},"nodeType":"YulFunctionCall","src":"20728:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20720:4:27"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20590:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20602:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20613:4:27","type":""}],"src":"20502:309:27"},{"body":{"nodeType":"YulBlock","src":"20882:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20899:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20922:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"20904:17:27"},"nodeType":"YulFunctionCall","src":"20904:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20892:6:27"},"nodeType":"YulFunctionCall","src":"20892:37:27"},"nodeType":"YulExpressionStatement","src":"20892:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20870:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20877:3:27","type":""}],"src":"20817:118:27"},{"body":{"nodeType":"YulBlock","src":"21039:124:27","statements":[{"nodeType":"YulAssignment","src":"21049:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21061:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21072:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21057:3:27"},"nodeType":"YulFunctionCall","src":"21057:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21049:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21129:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21142:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21153:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21138:3:27"},"nodeType":"YulFunctionCall","src":"21138:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21085:43:27"},"nodeType":"YulFunctionCall","src":"21085:71:27"},"nodeType":"YulExpressionStatement","src":"21085:71:27"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21011:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21023:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21034:4:27","type":""}],"src":"20941:222:27"},{"body":{"nodeType":"YulBlock","src":"21212:190:27","statements":[{"nodeType":"YulAssignment","src":"21222:33:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21249:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21231:17:27"},"nodeType":"YulFunctionCall","src":"21231:24:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21222:5:27"}]},{"body":{"nodeType":"YulBlock","src":"21345:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21347:16:27"},"nodeType":"YulFunctionCall","src":"21347:18:27"},"nodeType":"YulExpressionStatement","src":"21347:18:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21270:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"21277:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21267:2:27"},"nodeType":"YulFunctionCall","src":"21267:77:27"},"nodeType":"YulIf","src":"21264:103:27"},{"nodeType":"YulAssignment","src":"21376:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21387:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"21394:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21383:3:27"},"nodeType":"YulFunctionCall","src":"21383:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21376:3:27"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21198:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21208:3:27","type":""}],"src":"21169:233:27"},{"body":{"nodeType":"YulBlock","src":"21473:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21490:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21513:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"21495:17:27"},"nodeType":"YulFunctionCall","src":"21495:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21483:6:27"},"nodeType":"YulFunctionCall","src":"21483:37:27"},"nodeType":"YulExpressionStatement","src":"21483:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21461:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21468:3:27","type":""}],"src":"21408:118:27"},{"body":{"nodeType":"YulBlock","src":"21574:48:27","statements":[{"nodeType":"YulAssignment","src":"21584:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21609:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21602:6:27"},"nodeType":"YulFunctionCall","src":"21602:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21595:6:27"},"nodeType":"YulFunctionCall","src":"21595:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21584:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21556:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21566:7:27","type":""}],"src":"21532:90:27"},{"body":{"nodeType":"YulBlock","src":"21687:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21704:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21724:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"21709:14:27"},"nodeType":"YulFunctionCall","src":"21709:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21697:6:27"},"nodeType":"YulFunctionCall","src":"21697:34:27"},"nodeType":"YulExpressionStatement","src":"21697:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21675:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21682:3:27","type":""}],"src":"21628:109:27"},{"body":{"nodeType":"YulBlock","src":"21909:351:27","statements":[{"nodeType":"YulAssignment","src":"21919:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21931:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21942:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21927:3:27"},"nodeType":"YulFunctionCall","src":"21927:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21919:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21999:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22012:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22023:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22008:3:27"},"nodeType":"YulFunctionCall","src":"22008:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21955:43:27"},"nodeType":"YulFunctionCall","src":"21955:71:27"},"nodeType":"YulExpressionStatement","src":"21955:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22074:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22087:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22098:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22083:3:27"},"nodeType":"YulFunctionCall","src":"22083:18:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22036:37:27"},"nodeType":"YulFunctionCall","src":"22036:66:27"},"nodeType":"YulExpressionStatement","src":"22036:66:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22123:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22134:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22119:3:27"},"nodeType":"YulFunctionCall","src":"22119:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22143:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"22149:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22139:3:27"},"nodeType":"YulFunctionCall","src":"22139:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22112:6:27"},"nodeType":"YulFunctionCall","src":"22112:48:27"},"nodeType":"YulExpressionStatement","src":"22112:48:27"},{"nodeType":"YulAssignment","src":"22169:84:27","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22239:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"22248:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22177:61:27"},"nodeType":"YulFunctionCall","src":"22177:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22169:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21865:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21877:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21885:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21893:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21904:4:27","type":""}],"src":"21743:517:27"},{"body":{"nodeType":"YulBlock","src":"22494:523:27","statements":[{"nodeType":"YulAssignment","src":"22504:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22516:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22527:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22512:3:27"},"nodeType":"YulFunctionCall","src":"22512:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22504:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22585:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22598:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22609:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22594:3:27"},"nodeType":"YulFunctionCall","src":"22594:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22541:43:27"},"nodeType":"YulFunctionCall","src":"22541:71:27"},"nodeType":"YulExpressionStatement","src":"22541:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22666:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22679:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22690:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22675:3:27"},"nodeType":"YulFunctionCall","src":"22675:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22622:43:27"},"nodeType":"YulFunctionCall","src":"22622:72:27"},"nodeType":"YulExpressionStatement","src":"22622:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22748:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22761:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22772:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22757:3:27"},"nodeType":"YulFunctionCall","src":"22757:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22704:43:27"},"nodeType":"YulFunctionCall","src":"22704:72:27"},"nodeType":"YulExpressionStatement","src":"22704:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22830:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22843:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22854:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22839:3:27"},"nodeType":"YulFunctionCall","src":"22839:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"22786:43:27"},"nodeType":"YulFunctionCall","src":"22786:72:27"},"nodeType":"YulExpressionStatement","src":"22786:72:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22879:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22890:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22875:3:27"},"nodeType":"YulFunctionCall","src":"22875:19:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22900:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"22906:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22896:3:27"},"nodeType":"YulFunctionCall","src":"22896:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22868:6:27"},"nodeType":"YulFunctionCall","src":"22868:49:27"},"nodeType":"YulExpressionStatement","src":"22868:49:27"},{"nodeType":"YulAssignment","src":"22926:84:27","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"22996:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"23005:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22934:61:27"},"nodeType":"YulFunctionCall","src":"22934:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22926:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22434:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22446:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22454:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22462:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22470:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22478:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22489:4:27","type":""}],"src":"22266:751:27"},{"body":{"nodeType":"YulBlock","src":"23129:108:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23151:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23159:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23147:3:27"},"nodeType":"YulFunctionCall","src":"23147:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"23163:66:27","type":"","value":"0x0006000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23140:6:27"},"nodeType":"YulFunctionCall","src":"23140:90:27"},"nodeType":"YulExpressionStatement","src":"23140:90:27"}]},"name":"store_literal_in_memory_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23121:6:27","type":""}],"src":"23023:214:27"},{"body":{"nodeType":"YulBlock","src":"23407:236:27","statements":[{"nodeType":"YulAssignment","src":"23417:91:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23501:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23506:1:27","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23424:76:27"},"nodeType":"YulFunctionCall","src":"23424:84:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23417:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23606:3:27"}],"functionName":{"name":"store_literal_in_memory_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863","nodeType":"YulIdentifier","src":"23517:88:27"},"nodeType":"YulFunctionCall","src":"23517:93:27"},"nodeType":"YulExpressionStatement","src":"23517:93:27"},{"nodeType":"YulAssignment","src":"23619:18:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23630:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23635:1:27","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23626:3:27"},"nodeType":"YulFunctionCall","src":"23626:11:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23619:3:27"}]}]},"name":"abi_encode_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23395:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23403:3:27","type":""}],"src":"23243:400:27"},{"body":{"nodeType":"YulBlock","src":"23886:304:27","statements":[{"nodeType":"YulAssignment","src":"23897:155:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24048:3:27"}],"functionName":{"name":"abi_encode_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23904:142:27"},"nodeType":"YulFunctionCall","src":"23904:148:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23897:3:27"}]},{"nodeType":"YulAssignment","src":"24062:102:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24151:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"24160:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24069:81:27"},"nodeType":"YulFunctionCall","src":"24069:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24062:3:27"}]},{"nodeType":"YulAssignment","src":"24174:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"24181:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24174:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23865:3:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23871:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23882:3:27","type":""}],"src":"23649:541:27"},{"body":{"nodeType":"YulBlock","src":"24350:288:27","statements":[{"nodeType":"YulAssignment","src":"24360:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24372:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24383:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24368:3:27"},"nodeType":"YulFunctionCall","src":"24368:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24360:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24440:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24453:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24464:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24449:3:27"},"nodeType":"YulFunctionCall","src":"24449:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24396:43:27"},"nodeType":"YulFunctionCall","src":"24396:71:27"},"nodeType":"YulExpressionStatement","src":"24396:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24521:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24534:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24545:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24530:3:27"},"nodeType":"YulFunctionCall","src":"24530:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"24477:43:27"},"nodeType":"YulFunctionCall","src":"24477:72:27"},"nodeType":"YulExpressionStatement","src":"24477:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24603:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24616:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24627:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24612:3:27"},"nodeType":"YulFunctionCall","src":"24612:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24559:43:27"},"nodeType":"YulFunctionCall","src":"24559:72:27"},"nodeType":"YulExpressionStatement","src":"24559:72:27"}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24306:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24318:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24326:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24334:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24345:4:27","type":""}],"src":"24196:442:27"},{"body":{"nodeType":"YulBlock","src":"24770:206:27","statements":[{"nodeType":"YulAssignment","src":"24780:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24792:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24803:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24788:3:27"},"nodeType":"YulFunctionCall","src":"24788:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24780:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24860:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24873:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24884:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24869:3:27"},"nodeType":"YulFunctionCall","src":"24869:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24816:43:27"},"nodeType":"YulFunctionCall","src":"24816:71:27"},"nodeType":"YulExpressionStatement","src":"24816:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24941:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24954:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24965:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24950:3:27"},"nodeType":"YulFunctionCall","src":"24950:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"24897:43:27"},"nodeType":"YulFunctionCall","src":"24897:72:27"},"nodeType":"YulExpressionStatement","src":"24897:72:27"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24734:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24746:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24754:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24765:4:27","type":""}],"src":"24644:332:27"},{"body":{"nodeType":"YulBlock","src":"25176:434:27","statements":[{"nodeType":"YulAssignment","src":"25186:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25198:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25209:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25194:3:27"},"nodeType":"YulFunctionCall","src":"25194:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25186:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25267:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25280:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25291:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25276:3:27"},"nodeType":"YulFunctionCall","src":"25276:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25223:43:27"},"nodeType":"YulFunctionCall","src":"25223:71:27"},"nodeType":"YulExpressionStatement","src":"25223:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25348:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25361:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25372:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25357:3:27"},"nodeType":"YulFunctionCall","src":"25357:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"25304:43:27"},"nodeType":"YulFunctionCall","src":"25304:72:27"},"nodeType":"YulExpressionStatement","src":"25304:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25424:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25437:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25448:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25433:3:27"},"nodeType":"YulFunctionCall","src":"25433:18:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25386:37:27"},"nodeType":"YulFunctionCall","src":"25386:66:27"},"nodeType":"YulExpressionStatement","src":"25386:66:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25473:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25484:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25469:3:27"},"nodeType":"YulFunctionCall","src":"25469:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25493:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"25499:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25489:3:27"},"nodeType":"YulFunctionCall","src":"25489:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25462:6:27"},"nodeType":"YulFunctionCall","src":"25462:48:27"},"nodeType":"YulExpressionStatement","src":"25462:48:27"},{"nodeType":"YulAssignment","src":"25519:84:27","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25589:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"25598:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25527:61:27"},"nodeType":"YulFunctionCall","src":"25527:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25519:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25124:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25136:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25144:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25152:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25160:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25171:4:27","type":""}],"src":"24982:628:27"},{"body":{"nodeType":"YulBlock","src":"25760:275:27","statements":[{"nodeType":"YulAssignment","src":"25770:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25782:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25793:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25778:3:27"},"nodeType":"YulFunctionCall","src":"25778:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25770:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25850:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25863:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25874:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25859:3:27"},"nodeType":"YulFunctionCall","src":"25859:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"25806:43:27"},"nodeType":"YulFunctionCall","src":"25806:71:27"},"nodeType":"YulExpressionStatement","src":"25806:71:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25898:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25909:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25894:3:27"},"nodeType":"YulFunctionCall","src":"25894:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25918:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"25924:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25914:3:27"},"nodeType":"YulFunctionCall","src":"25914:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25887:6:27"},"nodeType":"YulFunctionCall","src":"25887:48:27"},"nodeType":"YulExpressionStatement","src":"25887:48:27"},{"nodeType":"YulAssignment","src":"25944:84:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26014:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"26023:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25952:61:27"},"nodeType":"YulFunctionCall","src":"25952:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25944:4:27"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25724:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25736:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25744:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25755:4:27","type":""}],"src":"25616:419:27"},{"body":{"nodeType":"YulBlock","src":"26107:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"26212:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"26214:16:27"},"nodeType":"YulFunctionCall","src":"26214:18:27"},"nodeType":"YulExpressionStatement","src":"26214:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26184:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"26192:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26181:2:27"},"nodeType":"YulFunctionCall","src":"26181:30:27"},"nodeType":"YulIf","src":"26178:56:27"},{"nodeType":"YulAssignment","src":"26244:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26274:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"26252:21:27"},"nodeType":"YulFunctionCall","src":"26252:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"26244:4:27"}]},{"nodeType":"YulAssignment","src":"26318:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"26330:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"26336:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26326:3:27"},"nodeType":"YulFunctionCall","src":"26326:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"26318:4:27"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"26091:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"26102:4:27","type":""}],"src":"26041:307:27"},{"body":{"nodeType":"YulBlock","src":"26448:338:27","statements":[{"nodeType":"YulAssignment","src":"26458:74:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26524:6:27"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"26483:40:27"},"nodeType":"YulFunctionCall","src":"26483:48:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"26467:15:27"},"nodeType":"YulFunctionCall","src":"26467:65:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"26458:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"26548:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"26555:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26541:6:27"},"nodeType":"YulFunctionCall","src":"26541:21:27"},"nodeType":"YulExpressionStatement","src":"26541:21:27"},{"nodeType":"YulVariableDeclaration","src":"26571:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"26586:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"26593:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26582:3:27"},"nodeType":"YulFunctionCall","src":"26582:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"26575:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"26636:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"26638:77:27"},"nodeType":"YulFunctionCall","src":"26638:79:27"},"nodeType":"YulExpressionStatement","src":"26638:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"26617:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"26622:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26613:3:27"},"nodeType":"YulFunctionCall","src":"26613:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"26631:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26610:2:27"},"nodeType":"YulFunctionCall","src":"26610:25:27"},"nodeType":"YulIf","src":"26607:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"26763:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"26768:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"26773:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26728:34:27"},"nodeType":"YulFunctionCall","src":"26728:52:27"},"nodeType":"YulExpressionStatement","src":"26728:52:27"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"26421:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"26426:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"26434:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"26442:5:27","type":""}],"src":"26354:432:27"},{"body":{"nodeType":"YulBlock","src":"26877:281:27","statements":[{"body":{"nodeType":"YulBlock","src":"26926:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"26928:77:27"},"nodeType":"YulFunctionCall","src":"26928:79:27"},"nodeType":"YulExpressionStatement","src":"26928:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26905:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"26913:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26901:3:27"},"nodeType":"YulFunctionCall","src":"26901:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"26920:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26897:3:27"},"nodeType":"YulFunctionCall","src":"26897:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26890:6:27"},"nodeType":"YulFunctionCall","src":"26890:35:27"},"nodeType":"YulIf","src":"26887:122:27"},{"nodeType":"YulVariableDeclaration","src":"27018:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27038:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27032:5:27"},"nodeType":"YulFunctionCall","src":"27032:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27022:6:27","type":""}]},{"nodeType":"YulAssignment","src":"27054:98:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27125:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27133:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27121:3:27"},"nodeType":"YulFunctionCall","src":"27121:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"27140:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"27148:3:27"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"27063:57:27"},"nodeType":"YulFunctionCall","src":"27063:89:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"27054:5:27"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"26855:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"26863:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"26871:5:27","type":""}],"src":"26805:353:27"},{"body":{"nodeType":"YulBlock","src":"27250:436:27","statements":[{"body":{"nodeType":"YulBlock","src":"27296:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"27298:77:27"},"nodeType":"YulFunctionCall","src":"27298:79:27"},"nodeType":"YulExpressionStatement","src":"27298:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"27271:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"27280:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27267:3:27"},"nodeType":"YulFunctionCall","src":"27267:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"27292:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27263:3:27"},"nodeType":"YulFunctionCall","src":"27263:32:27"},"nodeType":"YulIf","src":"27260:119:27"},{"nodeType":"YulBlock","src":"27389:290:27","statements":[{"nodeType":"YulVariableDeclaration","src":"27404:38:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27428:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27439:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27424:3:27"},"nodeType":"YulFunctionCall","src":"27424:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27418:5:27"},"nodeType":"YulFunctionCall","src":"27418:24:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27408:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"27489:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27491:77:27"},"nodeType":"YulFunctionCall","src":"27491:79:27"},"nodeType":"YulExpressionStatement","src":"27491:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27461:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27469:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27458:2:27"},"nodeType":"YulFunctionCall","src":"27458:30:27"},"nodeType":"YulIf","src":"27455:117:27"},{"nodeType":"YulAssignment","src":"27586:83:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27641:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"27652:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27637:3:27"},"nodeType":"YulFunctionCall","src":"27637:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27661:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"27596:40:27"},"nodeType":"YulFunctionCall","src":"27596:73:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"27586:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27220:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27231:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27243:6:27","type":""}],"src":"27164:522:27"},{"body":{"nodeType":"YulBlock","src":"27790:124:27","statements":[{"nodeType":"YulAssignment","src":"27800:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27812:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27823:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27808:3:27"},"nodeType":"YulFunctionCall","src":"27808:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27800:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27880:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27893:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27904:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27889:3:27"},"nodeType":"YulFunctionCall","src":"27889:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27836:43:27"},"nodeType":"YulFunctionCall","src":"27836:71:27"},"nodeType":"YulExpressionStatement","src":"27836:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27762:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27774:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27785:4:27","type":""}],"src":"27692:222:27"},{"body":{"nodeType":"YulBlock","src":"27964:105:27","statements":[{"nodeType":"YulAssignment","src":"27974:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27989:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"27996:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27985:3:27"},"nodeType":"YulFunctionCall","src":"27985:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"27974:7:27"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27946:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"27956:7:27","type":""}],"src":"27920:149:27"},{"body":{"nodeType":"YulBlock","src":"28138:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28155:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28177:5:27"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"28160:16:27"},"nodeType":"YulFunctionCall","src":"28160:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28148:6:27"},"nodeType":"YulFunctionCall","src":"28148:36:27"},"nodeType":"YulExpressionStatement","src":"28148:36:27"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28126:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28133:3:27","type":""}],"src":"28075:115:27"},{"body":{"nodeType":"YulBlock","src":"28292:122:27","statements":[{"nodeType":"YulAssignment","src":"28302:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28314:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28325:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28310:3:27"},"nodeType":"YulFunctionCall","src":"28310:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28302:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28380:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28393:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28404:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28389:3:27"},"nodeType":"YulFunctionCall","src":"28389:17:27"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"28338:41:27"},"nodeType":"YulFunctionCall","src":"28338:69:27"},"nodeType":"YulExpressionStatement","src":"28338:69:27"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28264:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28276:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28287:4:27","type":""}],"src":"28196:218:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256t_string_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 192))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must provide 3 metadata URIs\")\n\n    }\n\n    function abi_encode_t_stringliteral_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a117dc56390142f41c91638d137f25019b45d9fe7f2fd11460a0d1d89e3041f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function validator_assert_t_enum$_Difficulty_$4607(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Difficulty_$4607(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Difficulty_$4607(value)\n    }\n\n    function convert_t_enum$_Difficulty_$4607_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Difficulty_$4607(value)\n    }\n\n    function shift_left_248(value) -> newValue {\n        newValue :=\n\n        shl(248, value)\n\n    }\n\n    function leftAlign_t_uint8(value) -> aligned {\n        aligned := shift_left_248(value)\n    }\n\n    function abi_encode_t_enum$_Difficulty_$4607_to_t_uint8_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint8(convert_t_enum$_Difficulty_$4607_to_t_uint8(value)))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_enum$_Difficulty_$4607_t_bytes32__to_t_address_t_uint8_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_enum$_Difficulty_$4607_to_t_uint8_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 1)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function store_literal_in_memory_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0006000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162007f6938038062007f69833981810160405281019062000037919062001874565b8686868686848484848162000061620000556200068d60201b60201c565b6200069560201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000c8576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620000d9816200069560201b60201c565b50620001447feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b6040518060400160405280600481526020017fa4d96624000000000000000000000000000000000000000000000000000000008152506200075960201b60201c565b620001797fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b856200075960201b60201c565b620001ae7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b846200075960201b60201c565b620002047fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b82604051602001620001e99190620019b4565b6040516020818303038152906040526200075960201b60201c565b505050506200025e7ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d60001b82604051602001620002439190620019b4565b604051602081830303815290604052620007ba60201b60201c565b50505050506003815114620002aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002a19062001a32565b60405180910390fd5b81604051602001620002bd919062001aa1565b6040516020818303038152906040528051906020012060098190555080600081518110620002f057620002ef62001aba565b5b60200260200101516008600080600281111562000312576200031162001ae9565b5b600281111562000327576200032662001ae9565b5b8152602001908152602001600020908162000343919062001d4e565b50806001815181106200035b576200035a62001aba565b5b602002602001015160086000600160028111156200037e576200037d62001ae9565b5b600281111562000393576200039262001ae9565b5b81526020019081526020016000209081620003af919062001d4e565b5080600281518110620003c757620003c662001aba565b5b602002602001015160086000600280811115620003e957620003e862001ae9565b5b6002811115620003fe57620003fd62001ae9565b5b815260200190815260200160002090816200041a919062001d4e565b5060005b60038160ff1610156200067f5760008160ff16600281111562000446576200044562001ae9565b5b9050600087827f8c14e706f344a21eb23261ab6a4811d5599e56e890562777a6914925a5951273604051602001620004819392919062001f30565b604051602081830303815290604052805190602001209050620004e3888260016040518060400160405280601781526020017f496e697469616c20466972737420506c616365204e46540000000000000000008152506200093260201b60201c565b620004f5818362000be560201b60201c565b6200051730826040518060200160405280600081525062000cf560201b60201c565b60405180604001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600660008460028111156200055d576200055c62001ae9565b5b600281111562000572576200057162001ae9565b5b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050506001600760008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008460028111156200062d576200062c62001ae9565b5b600281111562000642576200064162001ae9565b5b815260200190815260200160002060006101000a81548160ff02191690831515021790555050508080620006769062001faf565b9150506200041e565b5050505050505050620025de565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b806001600084815260200190815260200160002090816200077b91906200204d565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051620007ae919062002186565b60405180910390a25050565b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b820362000817576040517f85c169bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b820362000874576040517f76755b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b8203620008d1576040517f4ef6d7fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160008481526020019081526020016000209081620008f391906200204d565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405162000926919062002186565b60405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160362000999576040517f24ecef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620009aa8362000f6f60201b60201c565b15620009ef57826040517f34c7b511000000000000000000000000000000000000000000000000000000008152600401620009e69190620021bb565b60405180910390fd5b62000a0560008585858562000fdb60201b60201c565b62000a168362000f6f60201b60201c565b1562000a5b57826040517f34c7b51100000000000000000000000000000000000000000000000000000000815260040162000a529190620021bb565b60405180910390fd5b60026000815462000a6c90620021d8565b9190508190555062000ac683600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002062000fe260201b90919060201c565b50836003600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf33868660405162000b7e9392919062002253565b60405180910390a462000b9c6000858585856200100160201b60201c565b600033600086868560405160200162000bba95949392919062002297565b604051602081830303815290604052905062000bde8584836200100860201b60201c565b5050505050565b60006008600083600281111562000c015762000c0062001ae9565b5b600281111562000c165762000c1562001ae9565b5b8152602001908152602001600020805462000c319062001b47565b80601f016020809104026020016040519081016040528092919081815260200182805462000c5f9062001b47565b801562000cb05780601f1062000c845761010080835404028352916020019162000cb0565b820191906000526020600020905b81548152906001019060200180831162000c9257829003601f168201915b5050505050905060008160405160200162000ccc91906200234a565b604051602081830303815290604052905062000cef84826200118360201b60201c565b50505050565b600062000d0883620011f660201b60201c565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000d81578083336040517f5b271ea200000000000000000000000000000000000000000000000000000000815260040162000d789392919062002370565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160362000de8576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000e4e576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600062000e778560056000878152602001908152602001600020620012ac60201b90919060201c565b90508062000ec05784846040517fa7626b6800000000000000000000000000000000000000000000000000000000815260040162000eb7929190620023ad565b60405180910390fd5b838273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc2366712158660405162000f20919062002186565b60405180910390a46000338560018660405160200162000f449493929190620023da565b604051602081830303815290604052905062000f678682620012e460201b60201c565b505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b5050505050565b600062000ff983600001836200131e60201b60201c565b905092915050565b5050505050565b6200102183636bb56a1460e01b6200139860201b60201c565b15620010d9578273ffffffffffffffffffffffffffffffffffffffff16636bb56a147f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d60001b836040518363ffffffff1660e01b8152600401620010879291906200242e565b6000604051808303816000875af1158015620010a7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620010d2919062002516565b506200117e565b816200117d5760008373ffffffffffffffffffffffffffffffffffffffff163b146200113e57826040517f4349776d00000000000000000000000000000000000000000000000000000000815260040162001135919062002567565b60405180910390fd5b826040517f0317313700000000000000000000000000000000000000000000000000000000815260040162001174919062002567565b60405180910390fd5b5b505050565b7ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d60001b8203620011e0576040517f3664800a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620011f28282620007ba60201b60201c565b5050565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620012a357826040517fae8f9a360000000000000000000000000000000000000000000000000000000081526004016200129a9190620021bb565b60405180910390fd5b80915050919050565b6000620012dc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200131e60201b60201c565b905092915050565b6200131a827f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097060001b836200145b60201b60201c565b5050565b60006200133283836200152260201b60201c565b6200138d57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062001392565b600090505b92915050565b6000806301ffc9a760e01b83604051602401620013b69190620025c1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d9150600051905082801562001442575060208210155b80156200144f5750600081115b94505050505092915050565b6200148d636bb56a1460e01b8473ffffffffffffffffffffffffffffffffffffffff166200139860201b90919060201c565b156200151d578273ffffffffffffffffffffffffffffffffffffffff16636bb56a1483836040518363ffffffff1660e01b8152600401620014d09291906200242e565b6000604051808303816000875af1158015620014f0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906200151b919062002516565b505b505050565b600080836001016000848152602001908152602001600020541415905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620015ae8262001563565b810181811067ffffffffffffffff82111715620015d057620015cf62001574565b5b80604052505050565b6000620015e562001545565b9050620015f38282620015a3565b919050565b600067ffffffffffffffff82111562001616576200161562001574565b5b620016218262001563565b9050602081019050919050565b60005b838110156200164e57808201518184015260208101905062001631565b60008484015250505050565b6000620016716200166b84620015f8565b620015d9565b90508281526020810184848401111562001690576200168f6200155e565b5b6200169d8482856200162e565b509392505050565b600082601f830112620016bd57620016bc62001559565b5b8151620016cf8482602086016200165a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200170582620016d8565b9050919050565b6200171781620016f8565b81146200172357600080fd5b50565b60008151905062001737816200170c565b92915050565b6000819050919050565b62001752816200173d565b81146200175e57600080fd5b50565b600081519050620017728162001747565b92915050565b600067ffffffffffffffff82111562001796576200179562001574565b5b602082029050602081019050919050565b600080fd5b6000620017c3620017bd8462001778565b620015d9565b90508083825260208201905060208402830185811115620017e957620017e8620017a7565b5b835b818110156200183757805167ffffffffffffffff81111562001812576200181162001559565b5b808601620018218982620016a5565b85526020850194505050602081019050620017eb565b5050509392505050565b600082601f83011262001859576200185862001559565b5b81516200186b848260208601620017ac565b91505092915050565b600080600080600080600060e0888a0312156200189657620018956200154f565b5b600088015167ffffffffffffffff811115620018b757620018b662001554565b5b620018c58a828b01620016a5565b975050602088015167ffffffffffffffff811115620018e957620018e862001554565b5b620018f78a828b01620016a5565b96505060406200190a8a828b0162001726565b95505060606200191d8a828b0162001761565b9450506080620019308a828b0162001761565b93505060a088015167ffffffffffffffff81111562001954576200195362001554565b5b620019628a828b01620016a5565b92505060c088015167ffffffffffffffff81111562001986576200198562001554565b5b620019948a828b0162001841565b91505092959891949750929550565b620019ae816200173d565b82525050565b6000602082019050620019cb6000830184620019a3565b92915050565b600082825260208201905092915050565b7f4d7573742070726f766964652033206d65746164617461205552497300000000600082015250565b600062001a1a601c83620019d1565b915062001a2782620019e2565b602082019050919050565b6000602082019050818103600083015262001a4d8162001a0b565b9050919050565b600081519050919050565b600081905092915050565b600062001a778262001a54565b62001a83818562001a5f565b935062001a958185602086016200162e565b80840191505092915050565b600062001aaf828462001a6a565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062001b6057607f821691505b60208210810362001b765762001b7562001b18565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262001be07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262001ba1565b62001bec868362001ba1565b95508019841693508086168417925050509392505050565b6000819050919050565b600062001c2f62001c2962001c23846200173d565b62001c04565b6200173d565b9050919050565b6000819050919050565b62001c4b8362001c0e565b62001c6362001c5a8262001c36565b84845462001bae565b825550505050565b600090565b62001c7a62001c6b565b62001c8781848462001c40565b505050565b5b8181101562001caf5762001ca360008262001c70565b60018101905062001c8d565b5050565b601f82111562001cfe5762001cc88162001b7c565b62001cd38462001b91565b8101602085101562001ce3578190505b62001cfb62001cf28562001b91565b83018262001c8c565b50505b505050565b600082821c905092915050565b600062001d236000198460080262001d03565b1980831691505092915050565b600062001d3e838362001d10565b9150826002028217905092915050565b62001d598262001a54565b67ffffffffffffffff81111562001d755762001d7462001574565b5b62001d81825462001b47565b62001d8e82828562001cb3565b600060209050601f83116001811462001dc6576000841562001db1578287015190505b62001dbd858262001d30565b86555062001e2d565b601f19841662001dd68662001b7c565b60005b8281101562001e005784890151825560018201915060208501945060208101905062001dd9565b8683101562001e20578489015162001e1c601f89168262001d10565b8355505b6001600288020188555050505b505050505050565b60008160601b9050919050565b600062001e4f8262001e35565b9050919050565b600062001e638262001e42565b9050919050565b62001e7f62001e7982620016f8565b62001e56565b82525050565b6003811062001e995762001e9862001ae9565b5b50565b600081905062001eac8262001e85565b919050565b600062001ebe8262001e9c565b9050919050565b60008160f81b9050919050565b600062001edf8262001ec5565b9050919050565b62001efb62001ef58262001eb1565b62001ed2565b82525050565b6000819050919050565b6000819050919050565b62001f2a62001f248262001f01565b62001f0b565b82525050565b600062001f3e828662001e6a565b60148201915062001f50828562001ee6565b60018201915062001f62828462001f15565b602082019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff82169050919050565b600062001fbc8262001fa2565b915060ff820362001fd25762001fd162001f73565b5b600182019050919050565b600081519050919050565b60008190508160005260206000209050919050565b601f8211156200204857620020128162001fe8565b6200201d8462001b91565b810160208510156200202d578190505b620020456200203c8562001b91565b83018262001c8c565b50505b505050565b620020588262001fdd565b67ffffffffffffffff81111562002074576200207362001574565b5b62002080825462001b47565b6200208d82828562001ffd565b600060209050601f831160018114620020c55760008415620020b0578287015190505b620020bc858262001d30565b8655506200212c565b601f198416620020d58662001fe8565b60005b82811015620020ff57848901518255600182019150602085019450602081019050620020d8565b868310156200211f57848901516200211b601f89168262001d10565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b6000620021528262001fdd565b6200215e818562002134565b9350620021708185602086016200162e565b6200217b8162001563565b840191505092915050565b60006020820190508181036000830152620021a2818462002145565b905092915050565b620021b58162001f01565b82525050565b6000602082019050620021d26000830184620021aa565b92915050565b6000620021e5826200173d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200221a576200221962001f73565b5b600182019050919050565b6200223081620016f8565b82525050565b60008115159050919050565b6200224d8162002236565b82525050565b60006060820190506200226a600083018662002225565b62002279602083018562002242565b81810360408301526200228d818462002145565b9050949350505050565b600060a082019050620022ae600083018862002225565b620022bd602083018762002225565b620022cc604083018662002225565b620022db6060830185620021aa565b8181036080830152620022ef818462002145565b90509695505050505050565b7e06000000000000000000000000000000000000000000000000000000000000600082015250565b60006200233260028362001a5f565b91506200233f82620022fb565b600282019050919050565b6000620023578262002323565b915062002365828462001a6a565b915081905092915050565b600060608201905062002387600083018662002225565b620023966020830185620021aa565b620023a5604083018462002225565b949350505050565b6000604082019050620023c4600083018562002225565b620023d36020830184620021aa565b9392505050565b6000608082019050620023f1600083018762002225565b620024006020830186620021aa565b6200240f604083018562002242565b818103606083015262002423818462002145565b905095945050505050565b6000604082019050620024456000830185620021aa565b818103602083015262002459818462002145565b90509392505050565b600067ffffffffffffffff82111562002480576200247f62001574565b5b6200248b8262001563565b9050602081019050919050565b6000620024af620024a98462002462565b620015d9565b905082815260208101848484011115620024ce57620024cd6200155e565b5b620024db8482856200162e565b509392505050565b600082601f830112620024fb57620024fa62001559565b5b81516200250d84826020860162002498565b91505092915050565b6000602082840312156200252f576200252e6200154f565b5b600082015167ffffffffffffffff81111562002550576200254f62001554565b5b6200255e84828501620024e3565b91505092915050565b60006020820190506200257e600083018462002225565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620025bb8162002584565b82525050565b6000602082019050620025d86000830184620025b0565b92915050565b61597b80620025ee6000396000f3fe6080604052600436106101bb5760003560e01c80637f23690c116100ec578063be9f0e6f1161008a578063db8c966311610064578063db8c966314610751578063dedff9c61461077a578063f2fde38b146107b7578063fffc2c94146107e057610235565b8063be9f0e6f146106d6578063cdca9f39146106ff578063d6c1407c1461072857610235565b80638da5cb5b116100c65780638da5cb5b146106155780638f22d85314610640578063979024211461067d578063a3b261f21461069957610235565b80637f23690c1461059357806386a10ddd146105af5780638d959c24146105d857610235565b80634fc4289c116101595780636963d438116101335780636963d438146104d957806370a0823114610516578063715018a6146105535780637e87632c1461056a57610235565b80634fc4289c14610436578063511b69521461047357806354f6127f1461049c57610235565b80631d26fce6116101955780631d26fce614610342578063217b22701461037f5780632a3654a4146103bc57806349a6078d146103f957610235565b806301ffc9a71461029d57806316e023b3146102da57806318160ddd1461031757610235565b366102355760003403610203576040517fe5099ee30000000000000000000000000000000000000000000000000000000081526004016101fa90613685565b60405180910390fd5b6040517f61f4944200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660606004600036905010156102865782826040517fe5099ee300000000000000000000000000000000000000000000000000000000815260040161027d9291906136f2565b60405180910390fd5b610290838361081e565b9050915050805190602001f35b3480156102a957600080fd5b506102c460048036038101906102bf9190613782565b61099c565b6040516102d191906137ca565b60405180910390f35b3480156102e657600080fd5b5061030160048036038101906102fc919061381b565b610a0d565b60405161030e91906138c9565b60405180910390f35b34801561032357600080fd5b5061032c610a21565b6040516103399190613904565b60405180910390f35b34801561034e57600080fd5b5061036960048036038101906103649190613a67565b610a2b565b6040516103769190613beb565b60405180910390f35b34801561038b57600080fd5b506103a660048036038101906103a19190613c0d565b610b33565b6040516103b39190613c7b565b60405180910390f35b3480156103c857600080fd5b506103e360048036038101906103de9190613cc2565b610be6565b6040516103f091906137ca565b60405180910390f35b34801561040557600080fd5b50610420600480360381019061041b9190613c0d565b610bfa565b60405161042d9190613dc0565b60405180910390f35b34801561044257600080fd5b5061045d60048036038101906104589190613e07565b610c27565b60405161046a9190613e89565b60405180910390f35b34801561047f57600080fd5b5061049a60048036038101906104959190613f7d565b610cc7565b005b3480156104a857600080fd5b506104c360048036038101906104be9190613c0d565b610d28565b6040516104d091906138c9565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb919061406f565b610d3a565b60405161050d9190613beb565b60405180910390f35b34801561052257600080fd5b5061053d600480360381019061053891906140bc565b610eb6565b60405161054a9190613904565b60405180910390f35b34801561055f57600080fd5b50610568610f06565b005b34801561057657600080fd5b50610591600480360381019061058c9190614350565b610f1a565b005b6105ad60048036038101906105a89190614457565b61102e565b005b3480156105bb57600080fd5b506105d660048036038101906105d191906144b3565b61107e565b005b3480156105e457600080fd5b506105ff60048036038101906105fa9190613c0d565b6112da565b60405161060c91906138c9565b60405180910390f35b34801561062157600080fd5b5061062a6112ec565b6040516106379190613c7b565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190614522565b611315565b60405161067491906137ca565b60405180910390f35b61069760048036038101906106929190614562565b611344565b005b3480156106a557600080fd5b506106c060048036038101906106bb91906140bc565b611394565b6040516106cd9190614698565b60405180910390f35b3480156106e257600080fd5b506106fd60048036038101906106f891906146ba565b6113e4565b005b34801561070b57600080fd5b506107266004803603810190610721919061482e565b6114e7565b005b34801561073457600080fd5b5061074f600480360381019061074a919061489d565b611be3565b005b34801561075d57600080fd5b506107786004803603810190610773919061490c565b611bfb565b005b34801561078657600080fd5b506107a1600480360381019061079c919061498f565b611dcc565b6040516107ae9190613beb565b60405180910390f35b3480156107c357600080fd5b506107de60048036038101906107d991906140bc565b611e7d565b005b3480156107ec57600080fd5b5061080760048036038101906108029190613e07565b611f00565b6040516108159291906149d8565b60405180910390f35b6060600061084f6000357fffffffff0000000000000000000000000000000000000000000000000000000016611f44565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e7576000357fffffffff00000000000000000000000000000000000000000000000000000000166040517fbb370b2b0000000000000000000000000000000000000000000000000000000081526004016108de9190614a10565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1634878733346040516020016109199493929190614ac4565b6040516020818303038152906040526040516109359190614b30565b60006040518083038185875af1925050503d8060008114610972576040519150601f19603f3d011682016040523d82523d6000602084013e610977565b606091505b5091509150811561098d57809350505050610996565b80518060208301fd5b92915050565b6000633a27170660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109f657506109f582611ffe565b5b80610a065750610a058261205f565b5b9050919050565b6060610a1983836120c6565b905092915050565b6000600254905090565b60608151835114610a68576040517f2fa71dfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825167ffffffffffffffff811115610a8357610a82613924565b5b604051908082528060200260200182016040528015610ab657816020015b6060815260200190600190039081610aa15790505b50905060005b8351811015610b2c57610b03848281518110610adb57610ada614b47565b5b6020026020010151848381518110610af657610af5614b47565b5b60200260200101516120c6565b828281518110610b1657610b15614b47565b5b6020026020010181905250806001019050610abc565b5092915050565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bdd57826040517fae8f9a36000000000000000000000000000000000000000000000000000000008152600401610bd49190614b85565b60405180910390fd5b80915050919050565b6000610bf28383612194565b905092915050565b6060610c0582612201565b610c206005600084815260200190815260200160002061224e565b9050919050565b60086020528060005260406000206000915090508054610c4690614bcf565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7290614bcf565b8015610cbf5780601f10610c9457610100808354040283529160200191610cbf565b820191906000526020600020905b815481529060010190602001808311610ca257829003601f168201915b505050505081565b610cd13384612194565b610d145782336040517f1294d2a9000000000000000000000000000000000000000000000000000000008152600401610d0b929190614c00565b60405180910390fd5b610d21858585858561226f565b5050505050565b6060610d33826122aa565b9050919050565b60608282905067ffffffffffffffff811115610d5957610d58613924565b5b604051908082528060200260200182016040528015610d8c57816020015b6060815260200190600190039081610d775790505b50905060005b83839050811015610eaf576000803073ffffffffffffffffffffffffffffffffffffffff16868685818110610dca57610dc9614b47565b5b9050602002810190610ddc9190614c38565b604051610dea929190614c9b565b600060405180830381855af49150503d8060008114610e25576040519150601f19603f3d011682016040523d82523d6000602084013e610e2a565b606091505b509150915081610e83576000815114610e465780518082602001fd5b826040517f234eb819000000000000000000000000000000000000000000000000000000008152600401610e7a9190613904565b60405180910390fd5b80848481518110610e9757610e96614b47565b5b60200260200101819052508260010192505050610d92565b5092915050565b6000610eff600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061234f565b9050919050565b610f0e612364565b610f1860006123e2565b565b600085519050845181141580610f31575083518114155b80610f3d575082518114155b80610f49575081518114155b15610f80576040517f93a8311900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b818110156110255761101a878281518110610fa157610fa0614b47565b5b6020026020010151878381518110610fbc57610fbb614b47565b5b6020026020010151878481518110610fd757610fd6614b47565b5b6020026020010151878581518110610ff257610ff1614b47565b5b602002602001015187868151811061100d5761100c614b47565b5b6020026020010151610cc7565b806001019050610f83565b50505050505050565b611036612364565b60003414611070576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61107a82826124a6565b5050565b600061108983610b33565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110ff578083336040517f5b271ea20000000000000000000000000000000000000000000000000000000081526004016110f693929190614cb4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611165576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ca576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006111f1856005600087815260200190815260200160002061251090919063ffffffff16565b9050806112375784846040517fa7626b6800000000000000000000000000000000000000000000000000000000815260040161122e929190614ceb565b60405180910390fd5b838273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc2366712158660405161129591906138c9565b60405180910390a4600033856001866040516020016112b79493929190614d14565b60405160208183030381529060405290506112d28682612540565b505050505050565b60606112e5826122aa565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60076020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b61134c612364565b60003414611386576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113908282612572565b5050565b60606113dd600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612642565b9050919050565b6113ec612364565b815183511415806113ff57508051825114155b15611436576040517f2fa71dfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000835103611471576040517f80c9830500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b83518110156114e1576114d684828151811061149357611492614b47565b5b60200260200101518483815181106114ae576114ad614b47565b5b60200260200101518484815181106114c9576114c8614b47565b5b6020026020010151612663565b806001019050611474565b50505050565b600954816040516020016114fb9190614d9c565b6040516020818303038152906040528051906020012014611551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154890614dff565b60405180910390fd5b60006006600084600281111561156a57611569614e1f565b5b600281111561157c5761157b614e1f565b5b81526020019081526020016000209050806001015484116115d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c990614e9a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611699578381600101819055503373ffffffffffffffffffffffffffffffffffffffff1683600281111561165c5761165b614e1f565b5b7f300ff980efdfcbf9315c1929dbd04369fe492b36170e95357766ec52103924f68660405161168b9190613904565b60405180910390a350611bde565b600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561179c5750600760008260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600281111561176d5761176c614e1f565b5b600281111561177f5761177e614e1f565b5b815260200190815260200160002060009054906101000a900460ff165b1561198b5760008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16847f8c14e706f344a21eb23261ab6a4811d5599e56e890562777a6914925a59512736040516020016117fc93929190614f4a565b604051602081830303815290604052805190602001209050611853816040518060400160405280601781526020017f466972737420506c616365204e4654207265766f6b65640000000000000000008152506126ea565b6000600760008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008660028111156118cd576118cc614e1f565b5b60028111156118df576118de614e1f565b5b815260200190815260200160002060006101000a81548160ff0219169083151502179055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1684600281111561195257611951614e1f565b5b7f6d74bd0bfb57711860bd7d6d0648d03e2fdff362f5f46a8f91388d8f39911d08836040516119819190614b85565b60405180910390a3505b600033847f8c14e706f344a21eb23261ab6a4811d5599e56e890562777a6914925a59512736040516020016119c293929190614f4a565b604051602081830303815290604052805190602001209050611a1c338260016040518060400160405280600f81526020017f466972737420506c616365204e46540000000000000000000000000000000000815250612871565b611a268185612aed565b611a4030826040518060200160405280600081525061107e565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000866002811115611a9657611a95614e1f565b5b6002811115611aa857611aa7614e1f565b5b815260200190815260200160002060006101000a81548160ff021916908315150217905550338260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508482600101819055503373ffffffffffffffffffffffffffffffffffffffff16846002811115611b4357611b42614e1f565b5b7f300ff980efdfcbf9315c1929dbd04369fe492b36170e95357766ec52103924f687604051611b729190613904565b60405180910390a33373ffffffffffffffffffffffffffffffffffffffff16846002811115611ba457611ba3614e1f565b5b7fb292d132bb6533ea558b88bbe806f164b9034ea4d33ee745e74e2dd96070181283604051611bd39190614b85565b60405180910390a350505b505050565b611beb612364565b611bf6838383612663565b505050565b6000611c0684610b33565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611cb0573373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611caf573381856040517f760b5acd000000000000000000000000000000000000000000000000000000008152600401611ca693929190614f87565b60405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611d16576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611d7b576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d888582868686612be5565b8215611dc55760008185600085604051602001611da89493929190614d14565b6040516020818303038152906040529050611dc38682612540565b505b5050505050565b6060815167ffffffffffffffff811115611de957611de8613924565b5b604051908082528060200260200182016040528015611e1c57816020015b6060815260200190600190039081611e075790505b50905060005b8251811015611e7757611e4e838281518110611e4157611e40614b47565b5b60200260200101516122aa565b828281518110611e6157611e60614b47565b5b6020026020010181905250806001019050611e22565b50919050565b611e85612364565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ef4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eeb90615030565b60405180910390fd5b611efd816123e2565b50565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000806000611f7f69cee78b4094da8601109660b01b857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916612cc2565b90506000611f8c826122aa565b90506014815114158015611fa257506000815114155b15611fe457806040517f42bfe79f000000000000000000000000000000000000000000000000000000008152600401611fdb91906138c9565b60405180910390fd5b80611fee906150ae565b60601c6001935093505050915091565b600063a918fa6b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612058575061205782612d02565b5b9050919050565b6000806120726301ffc9a760e01b611f44565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036120b35760009150506120c1565b6120bd8184612d63565b9150505b919050565b60606001600084846040516020016120df929190615115565b604051602081830303815290604052805190602001208152602001908152602001600020805461210e90614bcf565b80601f016020809104026020016040519081016040528092919081815260200182805461213a90614bcf565b80156121875780601f1061215c57610100808354040283529160200191612187565b820191906000526020600020905b81548152906001019060200180831161216a57829003601f168201915b5050505050905092915050565b600061219f82610b33565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806121f957506121f88360056000858152602001908152602001600020612e2290919063ffffffff16565b5b905092915050565b61220a81612e52565b61224b57806040517fae8f9a360000000000000000000000000000000000000000000000000000000081526004016122429190614b85565b60405180910390fd5b50565b6060600061225e83600001612ebe565b905060608190508092505050919050565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a1906151b3565b60405180910390fd5b60606001600083815260200190815260200160002080546122ca90614bcf565b80601f01602080910402602001604051908101604052809291908181526020018280546122f690614bcf565b80156123435780601f1061231857610100808354040283529160200191612343565b820191906000526020600020905b81548152906001019060200180831161232657829003601f168201915b50505050509050919050565b600061235d82600001612f1a565b9050919050565b61236c612f2b565b73ffffffffffffffffffffffffffffffffffffffff1661238a6112ec565b73ffffffffffffffffffffffffffffffffffffffff16146123e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123d79061521f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d60001b8203612502576040517f3664800a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61250c8282612f33565b5050565b6000612538836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6130a4565b905092915050565b61256e827f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097060001b83613114565b5050565b80518251146125ad576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008251036125e8576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561263d5761263283828151811061260a57612609614b47565b5b602002602001015183838151811061262557612624614b47565b5b60200260200101516124a6565b8060010190506125eb565b505050565b6060600061265283600001612ebe565b905060608190508092505050919050565b8060016000858560405160200161267b929190615115565b60405160208183030381529060405280519060200120815260200190815260200160002090816126ab91906153de565b5081837fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb836040516126dd91906138c9565b60405180910390a3505050565b60006126f583610b33565b9050612706816000856000866131d3565b61270f83610b33565b9050600260008154612720906154df565b9190508190555061273181846131da565b61278283600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061325090919063ffffffff16565b506003600084815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905582600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf3360008760405161281d93929190615508565b60405180910390a461283481600085600086613267565b6000338260008686604051602001612850959493929190615546565b604051602081830303815290604052905061286b828261326e565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036128d7576040517f24ecef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128e083612e52565b1561292257826040517f34c7b5110000000000000000000000000000000000000000000000000000000081526004016129199190614b85565b60405180910390fd5b6129306000858585856131d3565b61293983612e52565b1561297b57826040517f34c7b5110000000000000000000000000000000000000000000000000000000081526004016129729190614b85565b60405180910390fd5b60026000815461298a906155a0565b919050819055506129e283600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206132a090919063ffffffff16565b50836003600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf338686604051612a9893929190615508565b60405180910390a4612aae600085858585613267565b6000336000868685604051602001612aca959493929190615546565b6040516020818303038152906040529050612ae68584836132b7565b5050505050565b600060086000836002811115612b0657612b05614e1f565b5b6002811115612b1857612b17614e1f565b5b81526020019081526020016000208054612b3190614bcf565b80601f0160208091040260200160405190810160405280929190818152602001828054612b5d90614bcf565b8015612baa5780601f10612b7f57610100808354040283529160200191612baa565b820191906000526020600020905b815481529060010190602001808311612b8d57829003601f168201915b50505050509050600081604051602001612bc49190615633565b6040516020818303038152906040529050612bdf84826124a6565b50505050565b6000612c0c866005600087815260200190815260200160002061341d90919063ffffffff16565b905080612c525785846040517f4aa31a8c000000000000000000000000000000000000000000000000000000008152600401612c49929190614ceb565b60405180910390fd5b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c8686604051612cb2929190615655565b60405180910390a4505050505050565b60008083600060f01b84604051602001612cde93929190615740565b604051602081830303815290604052905080612cf990615792565b91505092915050565b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612d5c5750612d5b8261344d565b5b9050919050565b6000806301ffc9a760e01b83604051602401612d7f9190614a10565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015612e0a575060208210155b8015612e165750600081115b94505050505092915050565b6000612e4a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6134b7565b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b606081600001805480602002602001604051908101604052809291908181526020018280548015612f0e57602002820191906000526020600020905b815481526020019060010190808311612efa575b50505050509050919050565b600081600001805490509050919050565b600033905090565b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b8203612f8f576040517f85c169bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b8203612feb576040517f76755b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b8203613047576040517f4ef6d7fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060016000848152602001908152602001600020908161306791906153de565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405161309891906138c9565b60405180910390a25050565b60006130b083836134b7565b61310957826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061310e565b600090505b92915050565b613144636bb56a1460e01b8473ffffffffffffffffffffffffffffffffffffffff16612d6390919063ffffffff16565b156131ce578273ffffffffffffffffffffffffffffffffffffffff16636bb56a1483836040518363ffffffff1660e01b81526004016131849291906157f9565b6000604051808303816000875af11580156131a3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906131cc9190615899565b505b505050565b5050505050565b600060056000838152602001908152602001600020905060006131fc826134da565b90506000805b828110156132485761321e6000856134ef90919063ffffffff16565b915061323d828787600060405180602001604052806000815250612be5565b806001019050613202565b505050505050565b600061325f8360000183613509565b905092915050565b5050505050565b61329c827fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0060001b83613114565b5050565b60006132af83600001836130a4565b905092915050565b6132c883636bb56a1460e01b612d63565b15613379578273ffffffffffffffffffffffffffffffffffffffff16636bb56a147f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d60001b836040518363ffffffff1660e01b815260040161332b9291906157f9565b6000604051808303816000875af115801561334a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906133739190615899565b50613418565b816134175760008373ffffffffffffffffffffffffffffffffffffffff163b146133da57826040517f4349776d0000000000000000000000000000000000000000000000000000000081526004016133d19190613c7b565b60405180910390fd5b826040517f0317313700000000000000000000000000000000000000000000000000000000815260040161340e9190613c7b565b60405180910390fd5b5b505050565b6000613445836000018373ffffffffffffffffffffffffffffffffffffffff1660001b613509565b905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60006134e882600001612f1a565b9050919050565b60006134fe836000018361361d565b60001c905092915050565b6000808360010160008481526020019081526020016000205490506000811461361157600060018261353b91906158e2565b905060006001866000018054905061355391906158e2565b90508181146135c257600086600001828154811061357457613573614b47565b5b906000526020600020015490508087600001848154811061359857613597614b47565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806135d6576135d5615916565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050613617565b60009150505b92915050565b600082600001828154811061363557613634614b47565b5b9060005260206000200154905092915050565b600082825260208201905092915050565b60008082015250565b600061366f600483613648565b915061367a82613659565b602082019050919050565b6000602082019050818103600083015261369e81613662565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006136d18385613648565b93506136de8385846136a5565b6136e7836136b4565b840190509392505050565b6000602082019050818103600083015261370d8184866136c5565b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61375f8161372a565b811461376a57600080fd5b50565b60008135905061377c81613756565b92915050565b60006020828403121561379857613797613720565b5b60006137a68482850161376d565b91505092915050565b60008115159050919050565b6137c4816137af565b82525050565b60006020820190506137df60008301846137bb565b92915050565b6000819050919050565b6137f8816137e5565b811461380357600080fd5b50565b600081359050613815816137ef565b92915050565b6000806040838503121561383257613831613720565b5b600061384085828601613806565b925050602061385185828601613806565b9150509250929050565b600081519050919050565b60005b83811015613884578082015181840152602081019050613869565b60008484015250505050565b600061389b8261385b565b6138a58185613648565b93506138b5818560208601613866565b6138be816136b4565b840191505092915050565b600060208201905081810360008301526138e38184613890565b905092915050565b6000819050919050565b6138fe816138eb565b82525050565b600060208201905061391960008301846138f5565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61395c826136b4565b810181811067ffffffffffffffff8211171561397b5761397a613924565b5b80604052505050565b600061398e613716565b905061399a8282613953565b919050565b600067ffffffffffffffff8211156139ba576139b9613924565b5b602082029050602081019050919050565b600080fd5b60006139e36139de8461399f565b613984565b90508083825260208201905060208402830185811115613a0657613a056139cb565b5b835b81811015613a2f5780613a1b8882613806565b845260208401935050602081019050613a08565b5050509392505050565b600082601f830112613a4e57613a4d61391f565b5b8135613a5e8482602086016139d0565b91505092915050565b60008060408385031215613a7e57613a7d613720565b5b600083013567ffffffffffffffff811115613a9c57613a9b613725565b5b613aa885828601613a39565b925050602083013567ffffffffffffffff811115613ac957613ac8613725565b5b613ad585828601613a39565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000613b278261385b565b613b318185613b0b565b9350613b41818560208601613866565b613b4a816136b4565b840191505092915050565b6000613b618383613b1c565b905092915050565b6000602082019050919050565b6000613b8182613adf565b613b8b8185613aea565b935083602082028501613b9d85613afb565b8060005b85811015613bd95784840389528151613bba8582613b55565b9450613bc583613b69565b925060208a01995050600181019050613ba1565b50829750879550505050505092915050565b60006020820190508181036000830152613c058184613b76565b905092915050565b600060208284031215613c2357613c22613720565b5b6000613c3184828501613806565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613c6582613c3a565b9050919050565b613c7581613c5a565b82525050565b6000602082019050613c906000830184613c6c565b92915050565b613c9f81613c5a565b8114613caa57600080fd5b50565b600081359050613cbc81613c96565b92915050565b60008060408385031215613cd957613cd8613720565b5b6000613ce785828601613cad565b9250506020613cf885828601613806565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613d3781613c5a565b82525050565b6000613d498383613d2e565b60208301905092915050565b6000602082019050919050565b6000613d6d82613d02565b613d778185613d0d565b9350613d8283613d1e565b8060005b83811015613db3578151613d9a8882613d3d565b9750613da583613d55565b925050600181019050613d86565b5085935050505092915050565b60006020820190508181036000830152613dda8184613d62565b905092915050565b60038110613def57600080fd5b50565b600081359050613e0181613de2565b92915050565b600060208284031215613e1d57613e1c613720565b5b6000613e2b84828501613df2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000613e5b82613e34565b613e658185613e3f565b9350613e75818560208601613866565b613e7e816136b4565b840191505092915050565b60006020820190508181036000830152613ea38184613e50565b905092915050565b613eb4816137af565b8114613ebf57600080fd5b50565b600081359050613ed181613eab565b92915050565b600080fd5b600067ffffffffffffffff821115613ef757613ef6613924565b5b613f00826136b4565b9050602081019050919050565b6000613f20613f1b84613edc565b613984565b905082815260208101848484011115613f3c57613f3b613ed7565b5b613f478482856136a5565b509392505050565b600082601f830112613f6457613f6361391f565b5b8135613f74848260208601613f0d565b91505092915050565b600080600080600060a08688031215613f9957613f98613720565b5b6000613fa788828901613cad565b9550506020613fb888828901613cad565b9450506040613fc988828901613806565b9350506060613fda88828901613ec2565b925050608086013567ffffffffffffffff811115613ffb57613ffa613725565b5b61400788828901613f4f565b9150509295509295909350565b600080fd5b60008083601f84011261402f5761402e61391f565b5b8235905067ffffffffffffffff81111561404c5761404b614014565b5b602083019150836020820283011115614068576140676139cb565b5b9250929050565b6000806020838503121561408657614085613720565b5b600083013567ffffffffffffffff8111156140a4576140a3613725565b5b6140b085828601614019565b92509250509250929050565b6000602082840312156140d2576140d1613720565b5b60006140e084828501613cad565b91505092915050565b600067ffffffffffffffff82111561410457614103613924565b5b602082029050602081019050919050565b6000614128614123846140e9565b613984565b9050808382526020820190506020840283018581111561414b5761414a6139cb565b5b835b8181101561417457806141608882613cad565b84526020840193505060208101905061414d565b5050509392505050565b600082601f8301126141935761419261391f565b5b81356141a3848260208601614115565b91505092915050565b600067ffffffffffffffff8211156141c7576141c6613924565b5b602082029050602081019050919050565b60006141eb6141e6846141ac565b613984565b9050808382526020820190506020840283018581111561420e5761420d6139cb565b5b835b8181101561423757806142238882613ec2565b845260208401935050602081019050614210565b5050509392505050565b600082601f8301126142565761425561391f565b5b81356142668482602086016141d8565b91505092915050565b600067ffffffffffffffff82111561428a57614289613924565b5b602082029050602081019050919050565b60006142ae6142a98461426f565b613984565b905080838252602082019050602084028301858111156142d1576142d06139cb565b5b835b8181101561431857803567ffffffffffffffff8111156142f6576142f561391f565b5b8086016143038982613f4f565b855260208501945050506020810190506142d3565b5050509392505050565b600082601f8301126143375761433661391f565b5b813561434784826020860161429b565b91505092915050565b600080600080600060a0868803121561436c5761436b613720565b5b600086013567ffffffffffffffff81111561438a57614389613725565b5b6143968882890161417e565b955050602086013567ffffffffffffffff8111156143b7576143b6613725565b5b6143c38882890161417e565b945050604086013567ffffffffffffffff8111156143e4576143e3613725565b5b6143f088828901613a39565b935050606086013567ffffffffffffffff81111561441157614410613725565b5b61441d88828901614241565b925050608086013567ffffffffffffffff81111561443e5761443d613725565b5b61444a88828901614322565b9150509295509295909350565b6000806040838503121561446e5761446d613720565b5b600061447c85828601613806565b925050602083013567ffffffffffffffff81111561449d5761449c613725565b5b6144a985828601613f4f565b9150509250929050565b6000806000606084860312156144cc576144cb613720565b5b60006144da86828701613cad565b93505060206144eb86828701613806565b925050604084013567ffffffffffffffff81111561450c5761450b613725565b5b61451886828701613f4f565b9150509250925092565b6000806040838503121561453957614538613720565b5b600061454785828601613cad565b925050602061455885828601613df2565b9150509250929050565b6000806040838503121561457957614578613720565b5b600083013567ffffffffffffffff81111561459757614596613725565b5b6145a385828601613a39565b925050602083013567ffffffffffffffff8111156145c4576145c3613725565b5b6145d085828601614322565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61460f816137e5565b82525050565b60006146218383614606565b60208301905092915050565b6000602082019050919050565b6000614645826145da565b61464f81856145e5565b935061465a836145f6565b8060005b8381101561468b5781516146728882614615565b975061467d8361462d565b92505060018101905061465e565b5085935050505092915050565b600060208201905081810360008301526146b2818461463a565b905092915050565b6000806000606084860312156146d3576146d2613720565b5b600084013567ffffffffffffffff8111156146f1576146f0613725565b5b6146fd86828701613a39565b935050602084013567ffffffffffffffff81111561471e5761471d613725565b5b61472a86828701613a39565b925050604084013567ffffffffffffffff81111561474b5761474a613725565b5b61475786828701614322565b9150509250925092565b61476a816138eb565b811461477557600080fd5b50565b60008135905061478781614761565b92915050565b600067ffffffffffffffff8211156147a8576147a7613924565b5b6147b1826136b4565b9050602081019050919050565b60006147d16147cc8461478d565b613984565b9050828152602081018484840111156147ed576147ec613ed7565b5b6147f88482856136a5565b509392505050565b600082601f8301126148155761481461391f565b5b81356148258482602086016147be565b91505092915050565b60008060006060848603121561484757614846613720565b5b600061485586828701614778565b935050602061486686828701613df2565b925050604084013567ffffffffffffffff81111561488757614886613725565b5b61489386828701614800565b9150509250925092565b6000806000606084860312156148b6576148b5613720565b5b60006148c486828701613806565b93505060206148d586828701613806565b925050604084013567ffffffffffffffff8111156148f6576148f5613725565b5b61490286828701613f4f565b9150509250925092565b6000806000806080858703121561492657614925613720565b5b600061493487828801613cad565b945050602061494587828801613806565b935050604061495687828801613ec2565b925050606085013567ffffffffffffffff81111561497757614976613725565b5b61498387828801613f4f565b91505092959194509250565b6000602082840312156149a5576149a4613720565b5b600082013567ffffffffffffffff8111156149c3576149c2613725565b5b6149cf84828501613a39565b91505092915050565b60006040820190506149ed6000830185613c6c565b6149fa60208301846138f5565b9392505050565b614a0a8161372a565b82525050565b6000602082019050614a256000830184614a01565b92915050565b600081905092915050565b6000614a428385614a2b565b9350614a4f8385846136a5565b82840190509392505050565b60008160601b9050919050565b6000614a7382614a5b565b9050919050565b6000614a8582614a68565b9050919050565b614a9d614a9882613c5a565b614a7a565b82525050565b6000819050919050565b614abe614ab9826138eb565b614aa3565b82525050565b6000614ad1828688614a36565b9150614add8285614a8c565b601482019150614aed8284614aad565b60208201915081905095945050505050565b6000614b0a8261385b565b614b148185614a2b565b9350614b24818560208601613866565b80840191505092915050565b6000614b3c8284614aff565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b614b7f816137e5565b82525050565b6000602082019050614b9a6000830184614b76565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680614be757607f821691505b602082108103614bfa57614bf9614ba0565b5b50919050565b6000604082019050614c156000830185614b76565b614c226020830184613c6c565b9392505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112614c5557614c54614c29565b5b80840192508235915067ffffffffffffffff821115614c7757614c76614c2e565b5b602083019250600182023603831315614c9357614c92614c33565b5b509250929050565b6000614ca8828486614a36565b91508190509392505050565b6000606082019050614cc96000830186613c6c565b614cd66020830185614b76565b614ce36040830184613c6c565b949350505050565b6000604082019050614d006000830185613c6c565b614d0d6020830184614b76565b9392505050565b6000608082019050614d296000830187613c6c565b614d366020830186614b76565b614d4360408301856137bb565b8181036060830152614d558184613890565b905095945050505050565b600081905092915050565b6000614d7682613e34565b614d808185614d60565b9350614d90818560208601613866565b80840191505092915050565b6000614da88284614d6b565b915081905092915050565b7f496e76616c69642073656372657420636f646500000000000000000000000000600082015250565b6000614de9601383613e3f565b9150614df482614db3565b602082019050919050565b60006020820190508181036000830152614e1881614ddc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e6f742074686520686967686573742073636f72650000000000000000000000600082015250565b6000614e84601583613e3f565b9150614e8f82614e4e565b602082019050919050565b60006020820190508181036000830152614eb381614e77565b9050919050565b60038110614ecb57614eca614e1f565b5b50565b6000819050614edc82614eba565b919050565b6000614eec82614ece565b9050919050565b60008160f81b9050919050565b6000614f0b82614ef3565b9050919050565b614f23614f1e82614ee1565b614f00565b82525050565b6000819050919050565b614f44614f3f826137e5565b614f29565b82525050565b6000614f568286614a8c565b601482019150614f668285614f12565b600182019150614f768284614f33565b602082019150819050949350505050565b6000606082019050614f9c6000830186613c6c565b614fa96020830185613c6c565b614fb66040830184614b76565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061501a602683613e3f565b915061502582614fbe565b604082019050919050565b600060208201905081810360008301526150498161500d565b9050919050565b6000819050602082019050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b60006150988251615060565b80915050919050565b600082821b905092915050565b60006150b98261385b565b826150c384615050565b90506150ce8161508c565b9250601482101561510e576151097fffffffffffffffffffffffffffffffffffffffff000000000000000000000000836014036008026150a1565b831692505b5050919050565b60006151218285614f33565b6020820191506151318284614f33565b6020820191508190509392505050565b7f466972737420506c616365204e46547320617265206e6f6e2d7472616e73666560008201527f7261626c65000000000000000000000000000000000000000000000000000000602082015250565b600061519d602583613e3f565b91506151a882615141565b604082019050919050565b600060208201905081810360008301526151cc81615190565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000615209602083613e3f565b9150615214826151d3565b602082019050919050565b60006020820190508181036000830152615238816151fc565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b6000600883026152947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826150a1565b61529e86836150a1565b95508019841693508086168417925050509392505050565b6000819050919050565b60006152db6152d66152d1846138eb565b6152b6565b6138eb565b9050919050565b6000819050919050565b6152f5836152c0565b615309615301826152e2565b848454615264565b825550505050565b600090565b61531e615311565b6153298184846152ec565b505050565b5b8181101561534d57615342600082615316565b60018101905061532f565b5050565b601f821115615392576153638161523f565b61536c84615254565b8101602085101561537b578190505b61538f61538785615254565b83018261532e565b50505b505050565b600082821c905092915050565b60006153b560001984600802615397565b1980831691505092915050565b60006153ce83836153a4565b9150826002028217905092915050565b6153e78261385b565b67ffffffffffffffff811115615400576153ff613924565b5b61540a8254614bcf565b615415828285615351565b600060209050601f8311600181146154485760008415615436578287015190505b61544085826153c2565b8655506154a8565b601f1984166154568661523f565b60005b8281101561547e57848901518255600182019150602085019450602081019050615459565b8683101561549b5784890151615497601f8916826153a4565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006154ea826138eb565b9150600082036154fd576154fc6154b0565b5b600182039050919050565b600060608201905061551d6000830186613c6c565b61552a60208301856137bb565b818103604083015261553c8184613890565b9050949350505050565b600060a08201905061555b6000830188613c6c565b6155686020830187613c6c565b6155756040830186613c6c565b6155826060830185614b76565b81810360808301526155948184613890565b90509695505050505050565b60006155ab826138eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036155dd576155dc6154b0565b5b600182019050919050565b7e06000000000000000000000000000000000000000000000000000000000000600082015250565b600061561d600283614d60565b9150615628826155e8565b600282019050919050565b600061563e82615610565b915061564a8284614d6b565b915081905092915050565b600060408201905061566a60008301856137bb565b818103602083015261567c8184613890565b90509392505050565b60007fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6000819050919050565b6156cc6156c782615685565b6156b1565b82525050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b615719615714826156d2565b6156fe565b82525050565b6000819050919050565b61573a61573582615060565b61571f565b82525050565b600061574c82866156bb565b600a8201915061575c8285615708565b60028201915061576c8284615729565b601482019150819050949350505050565b600061578982516137e5565b80915050919050565b600061579d8261385b565b826157a784615050565b90506157b28161577d565b925060208210156157f2576157ed7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026150a1565b831692505b5050919050565b600060408201905061580e6000830185614b76565b81810360208301526158208184613890565b90509392505050565b600061583c61583784613edc565b613984565b90508281526020810184848401111561585857615857613ed7565b5b615863848285613866565b509392505050565b600082601f8301126158805761587f61391f565b5b8151615890848260208601615829565b91505092915050565b6000602082840312156158af576158ae613720565b5b600082015167ffffffffffffffff8111156158cd576158cc613725565b5b6158d98482850161586b565b91505092915050565b60006158ed826138eb565b91506158f8836138eb565b92508282039050818111156159105761590f6154b0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d5826caf06d073651989ede571d9ec2c6456d11512583aa6ac212fae404e56df64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x7F69 CODESIZE SUB DUP1 PUSH3 0x7F69 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1874 JUMP JUMPDEST DUP7 DUP7 DUP7 DUP7 DUP7 DUP5 DUP5 DUP5 DUP5 DUP2 PUSH3 0x61 PUSH3 0x55 PUSH3 0x68D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x695 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xC8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xD9 DUP2 PUSH3 0x695 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x144 PUSH32 0xEAFEC4D89FA9619884B60000A4D96624A38F7AC2D8D9A604ECF07C12C77E480C PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xA4D9662400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH3 0x759 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x179 PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP6 PUSH3 0x759 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1AE PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP5 PUSH3 0x759 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x204 PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1E9 SWAP2 SWAP1 PUSH3 0x19B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x759 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x25E PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D PUSH1 0x0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x243 SWAP2 SWAP1 PUSH3 0x19B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x7BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH1 0x3 DUP2 MLOAD EQ PUSH3 0x2AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2A1 SWAP1 PUSH3 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x2BD SWAP2 SWAP1 PUSH3 0x1AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x2F0 JUMPI PUSH3 0x2EF PUSH3 0x1ABA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x312 JUMPI PUSH3 0x311 PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x327 JUMPI PUSH3 0x326 PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH3 0x343 SWAP2 SWAP1 PUSH3 0x1D4E JUMP JUMPDEST POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH3 0x35B JUMPI PUSH3 0x35A PUSH3 0x1ABA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x37E JUMPI PUSH3 0x37D PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x393 JUMPI PUSH3 0x392 PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH3 0x3AF SWAP2 SWAP1 PUSH3 0x1D4E JUMP JUMPDEST POP DUP1 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH3 0x3C7 JUMPI PUSH3 0x3C6 PUSH3 0x1ABA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH3 0x3E9 JUMPI PUSH3 0x3E8 PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x3FE JUMPI PUSH3 0x3FD PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH3 0x41A SWAP2 SWAP1 PUSH3 0x1D4E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH3 0x67F JUMPI PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x446 JUMPI PUSH3 0x445 PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 DUP3 PUSH32 0x8C14E706F344A21EB23261AB6A4811D5599E56E890562777A6914925A5951273 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x481 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH3 0x4E3 DUP9 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E697469616C20466972737420506C616365204E4654000000000000000000 DUP2 MSTORE POP PUSH3 0x932 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x4F5 DUP2 DUP4 PUSH3 0xBE5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x517 ADDRESS DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xCF5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x55D JUMPI PUSH3 0x55C PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x572 JUMPI PUSH3 0x571 PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x62D JUMPI PUSH3 0x62C PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x642 JUMPI PUSH3 0x641 PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 DUP1 PUSH3 0x676 SWAP1 PUSH3 0x1FAF JUMP JUMPDEST SWAP2 POP POP PUSH3 0x41E JUMP JUMPDEST POP POP POP POP POP POP POP POP PUSH3 0x25DE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH3 0x77B SWAP2 SWAP1 PUSH3 0x204D JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH3 0x7AE SWAP2 SWAP1 PUSH3 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP3 SUB PUSH3 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85C169BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP3 SUB PUSH3 0x874 JUMPI PUSH1 0x40 MLOAD PUSH32 0x76755B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 SUB PUSH3 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4EF6D7FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH3 0x8F3 SWAP2 SWAP1 PUSH3 0x204D JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH3 0x926 SWAP2 SWAP1 PUSH3 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x999 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24ECEF4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x9AA DUP4 PUSH3 0xF6F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x9EF JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x34C7B51100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9E6 SWAP2 SWAP1 PUSH3 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xA05 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH3 0xFDB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA16 DUP4 PUSH3 0xF6F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0xA5B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x34C7B51100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA52 SWAP2 SWAP1 PUSH3 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD PUSH3 0xA6C SWAP1 PUSH3 0x21D8 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH3 0xAC6 DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xFE2 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0xB7E SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2253 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0xB9C PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH3 0x1001 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xBBA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH3 0xBDE DUP6 DUP5 DUP4 PUSH3 0x1008 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0xC01 JUMPI PUSH3 0xC00 PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH3 0xC16 JUMPI PUSH3 0xC15 PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH3 0xC31 SWAP1 PUSH3 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xC5F SWAP1 PUSH3 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xCB0 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xC84 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xCB0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xC92 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xCCC SWAP2 SWAP1 PUSH3 0x234A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH3 0xCEF DUP5 DUP3 PUSH3 0x1183 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD08 DUP4 PUSH3 0x11F6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xD81 JUMPI DUP1 DUP4 CALLER PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xDE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xE4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xE77 DUP6 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x12AC PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0xEC0 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0xA7626B6800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xEB7 SWAP3 SWAP2 SWAP1 PUSH3 0x23AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B1B58AA2EC0CEC2228B2D37124556D41F5A1F7B12F089171F896CC236671215 DUP7 PUSH1 0x40 MLOAD PUSH3 0xF20 SWAP2 SWAP1 PUSH3 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 CALLER DUP6 PUSH1 0x1 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xF44 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x23DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH3 0xF67 DUP7 DUP3 PUSH3 0x12E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFF9 DUP4 PUSH1 0x0 ADD DUP4 PUSH3 0x131E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1021 DUP4 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL PUSH3 0x1398 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x10D9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 PUSH32 0xB084A55EBF70FD3C06FD755269DAC2212C4D3F0F4D09079780BFA50C1B2984D PUSH1 0x0 SHL DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1087 SWAP3 SWAP2 SWAP1 PUSH3 0x242E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x10A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x10D2 SWAP2 SWAP1 PUSH3 0x2516 JUMP JUMPDEST POP PUSH3 0x117E JUMP JUMPDEST DUP2 PUSH3 0x117D JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH3 0x113E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x4349776D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1135 SWAP2 SWAP1 PUSH3 0x2567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x317313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1174 SWAP2 SWAP1 PUSH3 0x2567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D PUSH1 0x0 SHL DUP3 SUB PUSH3 0x11E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3664800A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x11F2 DUP3 DUP3 PUSH3 0x7BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x12A3 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x129A SWAP2 SWAP1 PUSH3 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x12DC DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x131E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x131A DUP3 PUSH32 0x8A1C15A8799F71B547E08E2BCB2E85257E81B0A07EEE2CE6712549EEF1F00970 PUSH1 0x0 SHL DUP4 PUSH3 0x145B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1332 DUP4 DUP4 PUSH3 0x1522 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x138D JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x1392 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x13B6 SWAP2 SWAP1 PUSH3 0x25C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH3 0x1442 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x144F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x148D PUSH4 0x6BB56A14 PUSH1 0xE0 SHL DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x1398 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x151D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x14D0 SWAP3 SWAP2 SWAP1 PUSH3 0x242E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x14F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x151B SWAP2 SWAP1 PUSH3 0x2516 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x15AE DUP3 PUSH3 0x1563 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x15D0 JUMPI PUSH3 0x15CF PUSH3 0x1574 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15E5 PUSH3 0x1545 JUMP JUMPDEST SWAP1 POP PUSH3 0x15F3 DUP3 DUP3 PUSH3 0x15A3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1616 JUMPI PUSH3 0x1615 PUSH3 0x1574 JUMP JUMPDEST JUMPDEST PUSH3 0x1621 DUP3 PUSH3 0x1563 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x164E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1631 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1671 PUSH3 0x166B DUP5 PUSH3 0x15F8 JUMP JUMPDEST PUSH3 0x15D9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1690 JUMPI PUSH3 0x168F PUSH3 0x155E JUMP JUMPDEST JUMPDEST PUSH3 0x169D DUP5 DUP3 DUP6 PUSH3 0x162E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x16BD JUMPI PUSH3 0x16BC PUSH3 0x1559 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x16CF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x165A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1705 DUP3 PUSH3 0x16D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1717 DUP2 PUSH3 0x16F8 JUMP JUMPDEST DUP2 EQ PUSH3 0x1723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1737 DUP2 PUSH3 0x170C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1752 DUP2 PUSH3 0x173D JUMP JUMPDEST DUP2 EQ PUSH3 0x175E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1772 DUP2 PUSH3 0x1747 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1796 JUMPI PUSH3 0x1795 PUSH3 0x1574 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x17C3 PUSH3 0x17BD DUP5 PUSH3 0x1778 JUMP JUMPDEST PUSH3 0x15D9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x17E9 JUMPI PUSH3 0x17E8 PUSH3 0x17A7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1837 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1812 JUMPI PUSH3 0x1811 PUSH3 0x1559 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH3 0x1821 DUP10 DUP3 PUSH3 0x16A5 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x17EB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1859 JUMPI PUSH3 0x1858 PUSH3 0x1559 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x186B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x17AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x1896 JUMPI PUSH3 0x1895 PUSH3 0x154F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x18B7 JUMPI PUSH3 0x18B6 PUSH3 0x1554 JUMP JUMPDEST JUMPDEST PUSH3 0x18C5 DUP11 DUP3 DUP12 ADD PUSH3 0x16A5 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x18E9 JUMPI PUSH3 0x18E8 PUSH3 0x1554 JUMP JUMPDEST JUMPDEST PUSH3 0x18F7 DUP11 DUP3 DUP12 ADD PUSH3 0x16A5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x190A DUP11 DUP3 DUP12 ADD PUSH3 0x1726 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x191D DUP11 DUP3 DUP12 ADD PUSH3 0x1761 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH3 0x1930 DUP11 DUP3 DUP12 ADD PUSH3 0x1761 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1954 JUMPI PUSH3 0x1953 PUSH3 0x1554 JUMP JUMPDEST JUMPDEST PUSH3 0x1962 DUP11 DUP3 DUP12 ADD PUSH3 0x16A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1986 JUMPI PUSH3 0x1985 PUSH3 0x1554 JUMP JUMPDEST JUMPDEST PUSH3 0x1994 DUP11 DUP3 DUP12 ADD PUSH3 0x1841 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH3 0x19AE DUP2 PUSH3 0x173D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x19CB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x19A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742070726F766964652033206D65746164617461205552497300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A1A PUSH1 0x1C DUP4 PUSH3 0x19D1 JUMP JUMPDEST SWAP2 POP PUSH3 0x1A27 DUP3 PUSH3 0x19E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1A4D DUP2 PUSH3 0x1A0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A77 DUP3 PUSH3 0x1A54 JUMP JUMPDEST PUSH3 0x1A83 DUP2 DUP6 PUSH3 0x1A5F JUMP JUMPDEST SWAP4 POP PUSH3 0x1A95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x162E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AAF DUP3 DUP5 PUSH3 0x1A6A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1B60 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B76 JUMPI PUSH3 0x1B75 PUSH3 0x1B18 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1BE0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x1BA1 JUMP JUMPDEST PUSH3 0x1BEC DUP7 DUP4 PUSH3 0x1BA1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C2F PUSH3 0x1C29 PUSH3 0x1C23 DUP5 PUSH3 0x173D JUMP JUMPDEST PUSH3 0x1C04 JUMP JUMPDEST PUSH3 0x173D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C4B DUP4 PUSH3 0x1C0E JUMP JUMPDEST PUSH3 0x1C63 PUSH3 0x1C5A DUP3 PUSH3 0x1C36 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1BAE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x1C7A PUSH3 0x1C6B JUMP JUMPDEST PUSH3 0x1C87 DUP2 DUP5 DUP5 PUSH3 0x1C40 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1CAF JUMPI PUSH3 0x1CA3 PUSH1 0x0 DUP3 PUSH3 0x1C70 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x1C8D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1CFE JUMPI PUSH3 0x1CC8 DUP2 PUSH3 0x1B7C JUMP JUMPDEST PUSH3 0x1CD3 DUP5 PUSH3 0x1B91 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x1CE3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x1CFB PUSH3 0x1CF2 DUP6 PUSH3 0x1B91 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x1C8C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1D23 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x1D03 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1D3E DUP4 DUP4 PUSH3 0x1D10 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1D59 DUP3 PUSH3 0x1A54 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1D75 JUMPI PUSH3 0x1D74 PUSH3 0x1574 JUMP JUMPDEST JUMPDEST PUSH3 0x1D81 DUP3 SLOAD PUSH3 0x1B47 JUMP JUMPDEST PUSH3 0x1D8E DUP3 DUP3 DUP6 PUSH3 0x1CB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1DC6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1DB1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x1DBD DUP6 DUP3 PUSH3 0x1D30 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x1E2D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x1DD6 DUP7 PUSH3 0x1B7C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1E00 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1DD9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x1E20 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x1E1C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x1D10 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E4F DUP3 PUSH3 0x1E35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E63 DUP3 PUSH3 0x1E42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1E7F PUSH3 0x1E79 DUP3 PUSH3 0x16F8 JUMP JUMPDEST PUSH3 0x1E56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH3 0x1E99 JUMPI PUSH3 0x1E98 PUSH3 0x1AE9 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH3 0x1EAC DUP3 PUSH3 0x1E85 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1EBE DUP3 PUSH3 0x1E9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1EDF DUP3 PUSH3 0x1EC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1EFB PUSH3 0x1EF5 DUP3 PUSH3 0x1EB1 JUMP JUMPDEST PUSH3 0x1ED2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F2A PUSH3 0x1F24 DUP3 PUSH3 0x1F01 JUMP JUMPDEST PUSH3 0x1F0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F3E DUP3 DUP7 PUSH3 0x1E6A JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH3 0x1F50 DUP3 DUP6 PUSH3 0x1EE6 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH3 0x1F62 DUP3 DUP5 PUSH3 0x1F15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FBC DUP3 PUSH3 0x1FA2 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH3 0x1FD2 JUMPI PUSH3 0x1FD1 PUSH3 0x1F73 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2048 JUMPI PUSH3 0x2012 DUP2 PUSH3 0x1FE8 JUMP JUMPDEST PUSH3 0x201D DUP5 PUSH3 0x1B91 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x202D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2045 PUSH3 0x203C DUP6 PUSH3 0x1B91 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x1C8C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x2058 DUP3 PUSH3 0x1FDD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2074 JUMPI PUSH3 0x2073 PUSH3 0x1574 JUMP JUMPDEST JUMPDEST PUSH3 0x2080 DUP3 SLOAD PUSH3 0x1B47 JUMP JUMPDEST PUSH3 0x208D DUP3 DUP3 DUP6 PUSH3 0x1FFD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x20C5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x20B0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x20BC DUP6 DUP3 PUSH3 0x1D30 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x212C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x20D5 DUP7 PUSH3 0x1FE8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x20FF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x211F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x211B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x1D10 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2152 DUP3 PUSH3 0x1FDD JUMP JUMPDEST PUSH3 0x215E DUP2 DUP6 PUSH3 0x2134 JUMP JUMPDEST SWAP4 POP PUSH3 0x2170 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x162E JUMP JUMPDEST PUSH3 0x217B DUP2 PUSH3 0x1563 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x21A2 DUP2 DUP5 PUSH3 0x2145 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x21B5 DUP2 PUSH3 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x21D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x21AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x21E5 DUP3 PUSH3 0x173D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x221A JUMPI PUSH3 0x2219 PUSH3 0x1F73 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2230 DUP2 PUSH3 0x16F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x224D DUP2 PUSH3 0x2236 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x226A PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x2225 JUMP JUMPDEST PUSH3 0x2279 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x2242 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x228D DUP2 DUP5 PUSH3 0x2145 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x22AE PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x2225 JUMP JUMPDEST PUSH3 0x22BD PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x2225 JUMP JUMPDEST PUSH3 0x22CC PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x2225 JUMP JUMPDEST PUSH3 0x22DB PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x21AA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x22EF DUP2 DUP5 PUSH3 0x2145 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH31 0x6000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2332 PUSH1 0x2 DUP4 PUSH3 0x1A5F JUMP JUMPDEST SWAP2 POP PUSH3 0x233F DUP3 PUSH3 0x22FB JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2357 DUP3 PUSH3 0x2323 JUMP JUMPDEST SWAP2 POP PUSH3 0x2365 DUP3 DUP5 PUSH3 0x1A6A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x2387 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x2225 JUMP JUMPDEST PUSH3 0x2396 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x21AA JUMP JUMPDEST PUSH3 0x23A5 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x2225 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x23C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x2225 JUMP JUMPDEST PUSH3 0x23D3 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x21AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x23F1 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x2225 JUMP JUMPDEST PUSH3 0x2400 PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x21AA JUMP JUMPDEST PUSH3 0x240F PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x2242 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x2423 DUP2 DUP5 PUSH3 0x2145 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2445 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x21AA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x2459 DUP2 DUP5 PUSH3 0x2145 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2480 JUMPI PUSH3 0x247F PUSH3 0x1574 JUMP JUMPDEST JUMPDEST PUSH3 0x248B DUP3 PUSH3 0x1563 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24AF PUSH3 0x24A9 DUP5 PUSH3 0x2462 JUMP JUMPDEST PUSH3 0x15D9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x24CE JUMPI PUSH3 0x24CD PUSH3 0x155E JUMP JUMPDEST JUMPDEST PUSH3 0x24DB DUP5 DUP3 DUP6 PUSH3 0x162E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x24FB JUMPI PUSH3 0x24FA PUSH3 0x1559 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x250D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2498 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x252F JUMPI PUSH3 0x252E PUSH3 0x154F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2550 JUMPI PUSH3 0x254F PUSH3 0x1554 JUMP JUMPDEST JUMPDEST PUSH3 0x255E DUP5 DUP3 DUP6 ADD PUSH3 0x24E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x257E PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x25BB DUP2 PUSH3 0x2584 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x25D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x25B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x597B DUP1 PUSH3 0x25EE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F23690C GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xBE9F0E6F GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDB8C9663 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDB8C9663 EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7B7 JUMPI DUP1 PUSH4 0xFFFC2C94 EQ PUSH2 0x7E0 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0xBE9F0E6F EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0xCDCA9F39 EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0xD6C1407C EQ PUSH2 0x728 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x8F22D853 EQ PUSH2 0x640 JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xA3B261F2 EQ PUSH2 0x699 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x7F23690C EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x86A10DDD EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x8D959C24 EQ PUSH2 0x5D8 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x4FC4289C GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x6963D438 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x7E87632C EQ PUSH2 0x56A JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x4FC4289C EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x511B6952 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x49C JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x1D26FCE6 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x1D26FCE6 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x217B2270 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x2A3654A4 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x49A6078D EQ PUSH2 0x3F9 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x16E023B3 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x317 JUMPI PUSH2 0x235 JUMP JUMPDEST CALLDATASIZE PUSH2 0x235 JUMPI PUSH1 0x0 CALLVALUE SUB PUSH2 0x203 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA SWAP1 PUSH2 0x3685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x61F4944200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO PUSH2 0x286 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27D SWAP3 SWAP2 SWAP1 PUSH2 0x36F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x290 DUP4 DUP4 PUSH2 0x81E JUMP JUMPDEST SWAP1 POP SWAP2 POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x3782 JUMP JUMPDEST PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x381B JUMP JUMPDEST PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x3A67 JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x3BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x3C0D JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x3C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x3CC2 JUMP JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x3C0D JUMP JUMPDEST PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x3DC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x3E07 JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x3E89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x3F7D JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x3C0D JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x406F JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x3BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x40BC JUMP JUMPDEST PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH2 0xF06 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x591 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x4350 JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x4457 JUMP JUMPDEST PUSH2 0x102E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x44B3 JUMP JUMPDEST PUSH2 0x107E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x3C0D JUMP JUMPDEST PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62A PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x3C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x4522 JUMP JUMPDEST PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x697 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x4562 JUMP JUMPDEST PUSH2 0x1344 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x40BC JUMP JUMPDEST PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x4698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x46BA JUMP JUMPDEST PUSH2 0x13E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x726 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x721 SWAP2 SWAP1 PUSH2 0x482E JUMP JUMPDEST PUSH2 0x14E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x74F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x489D JUMP JUMPDEST PUSH2 0x1BE3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x778 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x490C JUMP JUMPDEST PUSH2 0x1BFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x498F JUMP JUMPDEST PUSH2 0x1DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0x3BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x40BC JUMP JUMPDEST PUSH2 0x1E7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x807 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x3E07 JUMP JUMPDEST PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x815 SWAP3 SWAP2 SWAP1 PUSH2 0x49D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x84F PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1F44 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x40 MLOAD PUSH32 0xBB370B2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0x4A10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE DUP8 DUP8 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x919 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x4B30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x977 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x98D JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x996 JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3A271706 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9F6 JUMPI POP PUSH2 0x9F5 DUP3 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xA06 JUMPI POP PUSH2 0xA05 DUP3 PUSH2 0x205F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA19 DUP4 DUP4 PUSH2 0x20C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2FA71DFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA83 JUMPI PUSH2 0xA82 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAB6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAA1 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xB2C JUMPI PUSH2 0xB03 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xADB JUMPI PUSH2 0xADA PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAF6 JUMPI PUSH2 0xAF5 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20C6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB16 JUMPI PUSH2 0xB15 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xABC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDD JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD4 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF2 DUP4 DUP4 PUSH2 0x2194 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC05 DUP3 PUSH2 0x2201 JUMP JUMPDEST PUSH2 0xC20 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x224E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0xC46 SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCBF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC94 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCBF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCA2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xCD1 CALLER DUP5 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0xD14 JUMPI DUP3 CALLER PUSH1 0x40 MLOAD PUSH32 0x1294D2A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP3 SWAP2 SWAP1 PUSH2 0x4C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD21 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x226F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD33 DUP3 PUSH2 0x22AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD8C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD77 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x4C38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDEA SWAP3 SWAP2 SWAP1 PUSH2 0x4C9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE25 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xE83 JUMPI PUSH1 0x0 DUP2 MLOAD EQ PUSH2 0xE46 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x234EB81900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7A SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xE97 JUMPI PUSH2 0xE96 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xD92 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFF PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x234F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0E PUSH2 0x2364 JUMP JUMPDEST PUSH2 0xF18 PUSH1 0x0 PUSH2 0x23E2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD SWAP1 POP DUP5 MLOAD DUP2 EQ ISZERO DUP1 PUSH2 0xF31 JUMPI POP DUP4 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xF3D JUMPI POP DUP3 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xF49 JUMPI POP DUP2 MLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x93A8311900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1025 JUMPI PUSH2 0x101A DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFA1 JUMPI PUSH2 0xFA0 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xFBC JUMPI PUSH2 0xFBB PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xFD7 JUMPI PUSH2 0xFD6 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xFF2 JUMPI PUSH2 0xFF1 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x100D JUMPI PUSH2 0x100C PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCC7 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xF83 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1036 PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x1070 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x107A DUP3 DUP3 PUSH2 0x24A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1089 DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10FF JUMPI DUP1 DUP4 CALLER PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11F1 DUP6 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2510 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1237 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0xA7626B6800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122E SWAP3 SWAP2 SWAP1 PUSH2 0x4CEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B1B58AA2EC0CEC2228B2D37124556D41F5A1F7B12F089171F896CC236671215 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 CALLER DUP6 PUSH1 0x1 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12B7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x12D2 DUP7 DUP3 PUSH2 0x2540 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12E5 DUP3 PUSH2 0x22AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x134C PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1390 DUP3 DUP3 PUSH2 0x2572 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13DD PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2642 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13EC PUSH2 0x2364 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ ISZERO DUP1 PUSH2 0x13FF JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1436 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2FA71DFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80C9830500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14D6 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1493 JUMPI PUSH2 0x1492 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14AE JUMPI PUSH2 0x14AD PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x14C9 JUMPI PUSH2 0x14C8 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2663 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1474 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14FB SWAP2 SWAP1 PUSH2 0x4D9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x1551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1548 SWAP1 PUSH2 0x4DFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x156A JUMPI PUSH2 0x1569 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x157C JUMPI PUSH2 0x157B PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD DUP5 GT PUSH2 0x15D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C9 SWAP1 PUSH2 0x4E9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1699 JUMPI DUP4 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH32 0x300FF980EFDFCBF9315C1929DBD04369FE492B36170E95357766EC52103924F6 DUP7 PUSH1 0x40 MLOAD PUSH2 0x168B SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x176D JUMPI PUSH2 0x176C PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x198B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x8C14E706F344A21EB23261AB6A4811D5599E56E890562777A6914925A5951273 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1853 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466972737420506C616365204E4654207265766F6B6564000000000000000000 DUP2 MSTORE POP PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18DF JUMPI PUSH2 0x18DE PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1952 JUMPI PUSH2 0x1951 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH32 0x6D74BD0BFB57711860BD7D6D0648D03E2FDFF362F5F46A8F91388D8F39911D08 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1981 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH1 0x0 CALLER DUP5 PUSH32 0x8C14E706F344A21EB23261AB6A4811D5599E56E890562777A6914925A5951273 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1A1C CALLER DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466972737420506C616365204E46540000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2871 JUMP JUMPDEST PUSH2 0x1A26 DUP2 DUP6 PUSH2 0x2AED JUMP JUMPDEST PUSH2 0x1A40 ADDRESS DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x107E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A95 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1AA8 JUMPI PUSH2 0x1AA7 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B43 JUMPI PUSH2 0x1B42 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH32 0x300FF980EFDFCBF9315C1929DBD04369FE492B36170E95357766EC52103924F6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1B72 SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BA4 JUMPI PUSH2 0x1BA3 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH32 0xB292D132BB6533EA558B88BBE806F164B9034EA4D33EE745E74E2DD960701812 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BD3 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1BEB PUSH2 0x2364 JUMP JUMPDEST PUSH2 0x1BF6 DUP4 DUP4 DUP4 PUSH2 0x2663 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C06 DUP5 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CB0 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CAF JUMPI CALLER DUP2 DUP6 PUSH1 0x40 MLOAD PUSH32 0x760B5ACD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D88 DUP6 DUP3 DUP7 DUP7 DUP7 PUSH2 0x2BE5 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1DC5 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DA8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1DC3 DUP7 DUP3 PUSH2 0x2540 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E1C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1E07 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1E77 JUMPI PUSH2 0x1E4E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E41 JUMPI PUSH2 0x1E40 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x22AA JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E61 JUMPI PUSH2 0x1E60 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1E22 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E85 PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EEB SWAP1 PUSH2 0x5030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EFD DUP2 PUSH2 0x23E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1F7F PUSH10 0xCEE78B4094DA86011096 PUSH1 0xB0 SHL DUP6 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH2 0x2CC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F8C DUP3 PUSH2 0x22AA JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1FA2 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1FE4 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x42BFE79F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FDB SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1FEE SWAP1 PUSH2 0x50AE JUMP JUMPDEST PUSH1 0x60 SHR PUSH1 0x1 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xA918FA6B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2058 JUMPI POP PUSH2 0x2057 DUP3 PUSH2 0x2D02 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2072 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x1F44 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20B3 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x20BD DUP2 DUP5 PUSH2 0x2D63 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20DF SWAP3 SWAP2 SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x210E SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x213A SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2187 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x215C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2187 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x216A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219F DUP3 PUSH2 0xB33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x21F9 JUMPI POP PUSH2 0x21F8 DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2E22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x220A DUP2 PUSH2 0x2E52 JUMP JUMPDEST PUSH2 0x224B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2242 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x225E DUP4 PUSH1 0x0 ADD PUSH2 0x2EBE JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A1 SWAP1 PUSH2 0x51B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x22CA SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22F6 SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2343 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2318 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2343 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2326 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235D DUP3 PUSH1 0x0 ADD PUSH2 0x2F1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236C PUSH2 0x2F2B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x238A PUSH2 0x12EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23D7 SWAP1 PUSH2 0x521F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D PUSH1 0x0 SHL DUP3 SUB PUSH2 0x2502 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3664800A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x250C DUP3 DUP3 PUSH2 0x2F33 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x256E DUP3 PUSH32 0x8A1C15A8799F71B547E08E2BCB2E85257E81B0A07EEE2CE6712549EEF1F00970 PUSH1 0x0 SHL DUP4 PUSH2 0x3114 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x25AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD SUB PUSH2 0x25E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x263D JUMPI PUSH2 0x2632 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x260A JUMPI PUSH2 0x2609 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2625 JUMPI PUSH2 0x2624 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x24A6 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x25EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2652 DUP4 PUSH1 0x0 ADD PUSH2 0x2EBE JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x267B SWAP3 SWAP2 SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x26AB SWAP2 SWAP1 PUSH2 0x53DE JUMP JUMPDEST POP DUP2 DUP4 PUSH32 0xA6E4251F855F750545FE414F120DB91C76B88DEF14D120969E5BB2D3F05DEBBB DUP4 PUSH1 0x40 MLOAD PUSH2 0x26DD SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F5 DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP PUSH2 0x2706 DUP2 PUSH1 0x0 DUP6 PUSH1 0x0 DUP7 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x270F DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD PUSH2 0x2720 SWAP1 PUSH2 0x54DF JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x2731 DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST PUSH2 0x2782 DUP4 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3250 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER PUSH1 0x0 DUP8 PUSH1 0x40 MLOAD PUSH2 0x281D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2834 DUP2 PUSH1 0x0 DUP6 PUSH1 0x0 DUP7 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x0 CALLER DUP3 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2850 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x286B DUP3 DUP3 PUSH2 0x326E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24ECEF4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28E0 DUP4 PUSH2 0x2E52 JUMP JUMPDEST ISZERO PUSH2 0x2922 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x34C7B51100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2919 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2930 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x2939 DUP4 PUSH2 0x2E52 JUMP JUMPDEST ISZERO PUSH2 0x297B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x34C7B51100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2972 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD PUSH2 0x298A SWAP1 PUSH2 0x55A0 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x29E2 DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x32A0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2A98 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2AAE PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2ACA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x2AE6 DUP6 DUP5 DUP4 PUSH2 0x32B7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B06 JUMPI PUSH2 0x2B05 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B18 JUMPI PUSH2 0x2B17 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x2B31 SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5D SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BAA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B7F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BAA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B8D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2BC4 SWAP2 SWAP1 PUSH2 0x5633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x2BDF DUP5 DUP3 PUSH2 0x24A6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0C DUP7 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x341D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2C52 JUMPI DUP6 DUP5 PUSH1 0x40 MLOAD PUSH32 0x4AA31A8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C49 SWAP3 SWAP2 SWAP1 PUSH2 0x4CEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC78CD419D6136F9F1C1C6AEC1D3FAE098CFFAF8BC86314A8F2685E32FE574E3C DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2CB2 SWAP3 SWAP2 SWAP1 PUSH2 0x5655 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 PUSH1 0xF0 SHL DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2CDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5740 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x2CF9 SWAP1 PUSH2 0x5792 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2D5C JUMPI POP PUSH2 0x2D5B DUP3 PUSH2 0x344D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2D7F SWAP2 SWAP1 PUSH2 0x4A10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x2E0A JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2E16 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4A DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x34B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2F0E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2EFA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x2F8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x85C169BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x2FEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x76755B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x3047 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4EF6D7FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x3067 SWAP2 SWAP1 PUSH2 0x53DE JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3098 SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B0 DUP4 DUP4 PUSH2 0x34B7 JUMP JUMPDEST PUSH2 0x3109 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x310E JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3144 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2D63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x31CE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3184 SWAP3 SWAP2 SWAP1 PUSH2 0x57F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31CC SWAP2 SWAP1 PUSH2 0x5899 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x31FC DUP3 PUSH2 0x34DA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3248 JUMPI PUSH2 0x321E PUSH1 0x0 DUP6 PUSH2 0x34EF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x323D DUP3 DUP8 DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2BE5 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x3202 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x325F DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x3509 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x329C DUP3 PUSH32 0xB23EAE7E6D1564B295B4C3E3BE402D9A2F0776C57BDF365903496F6FA481AB00 PUSH1 0x0 SHL DUP4 PUSH2 0x3114 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AF DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32C8 DUP4 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL PUSH2 0x2D63 JUMP JUMPDEST ISZERO PUSH2 0x3379 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 PUSH32 0xB084A55EBF70FD3C06FD755269DAC2212C4D3F0F4D09079780BFA50C1B2984D PUSH1 0x0 SHL DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332B SWAP3 SWAP2 SWAP1 PUSH2 0x57F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x334A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3373 SWAP2 SWAP1 PUSH2 0x5899 JUMP JUMPDEST POP PUSH2 0x3418 JUMP JUMPDEST DUP2 PUSH2 0x3417 JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x33DA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x4349776D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33D1 SWAP2 SWAP1 PUSH2 0x3C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x317313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x340E SWAP2 SWAP1 PUSH2 0x3C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3445 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x3509 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E8 DUP3 PUSH1 0x0 ADD PUSH2 0x2F1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FE DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x361D JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x3611 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x353B SWAP2 SWAP1 PUSH2 0x58E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x3553 SWAP2 SWAP1 PUSH2 0x58E2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x35C2 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3574 JUMPI PUSH2 0x3573 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3598 JUMPI PUSH2 0x3597 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x35D6 JUMPI PUSH2 0x35D5 PUSH2 0x5916 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3617 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3635 JUMPI PUSH2 0x3634 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366F PUSH1 0x4 DUP4 PUSH2 0x3648 JUMP JUMPDEST SWAP2 POP PUSH2 0x367A DUP3 PUSH2 0x3659 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x369E DUP2 PUSH2 0x3662 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D1 DUP4 DUP6 PUSH2 0x3648 JUMP JUMPDEST SWAP4 POP PUSH2 0x36DE DUP4 DUP6 DUP5 PUSH2 0x36A5 JUMP JUMPDEST PUSH2 0x36E7 DUP4 PUSH2 0x36B4 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x370D DUP2 DUP5 DUP7 PUSH2 0x36C5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x375F DUP2 PUSH2 0x372A JUMP JUMPDEST DUP2 EQ PUSH2 0x376A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x377C DUP2 PUSH2 0x3756 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3798 JUMPI PUSH2 0x3797 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37A6 DUP5 DUP3 DUP6 ADD PUSH2 0x376D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37C4 DUP2 PUSH2 0x37AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37F8 DUP2 PUSH2 0x37E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x3803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3815 DUP2 PUSH2 0x37EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3832 JUMPI PUSH2 0x3831 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3840 DUP6 DUP3 DUP7 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3851 DUP6 DUP3 DUP7 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3884 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3869 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x389B DUP3 PUSH2 0x385B JUMP JUMPDEST PUSH2 0x38A5 DUP2 DUP6 PUSH2 0x3648 JUMP JUMPDEST SWAP4 POP PUSH2 0x38B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3866 JUMP JUMPDEST PUSH2 0x38BE DUP2 PUSH2 0x36B4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38E3 DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38FE DUP2 PUSH2 0x38EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3919 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x395C DUP3 PUSH2 0x36B4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x397B JUMPI PUSH2 0x397A PUSH2 0x3924 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x398E PUSH2 0x3716 JUMP JUMPDEST SWAP1 POP PUSH2 0x399A DUP3 DUP3 PUSH2 0x3953 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x39BA JUMPI PUSH2 0x39B9 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39E3 PUSH2 0x39DE DUP5 PUSH2 0x399F JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3A06 JUMPI PUSH2 0x3A05 PUSH2 0x39CB JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A2F JUMPI DUP1 PUSH2 0x3A1B DUP9 DUP3 PUSH2 0x3806 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A08 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A4E JUMPI PUSH2 0x3A4D PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A5E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x39D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A7E JUMPI PUSH2 0x3A7D PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A9C JUMPI PUSH2 0x3A9B PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x3AA8 DUP6 DUP3 DUP7 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AC9 JUMPI PUSH2 0x3AC8 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x3AD5 DUP6 DUP3 DUP7 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B27 DUP3 PUSH2 0x385B JUMP JUMPDEST PUSH2 0x3B31 DUP2 DUP6 PUSH2 0x3B0B JUMP JUMPDEST SWAP4 POP PUSH2 0x3B41 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3866 JUMP JUMPDEST PUSH2 0x3B4A DUP2 PUSH2 0x36B4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B61 DUP4 DUP4 PUSH2 0x3B1C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B81 DUP3 PUSH2 0x3ADF JUMP JUMPDEST PUSH2 0x3B8B DUP2 DUP6 PUSH2 0x3AEA JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3B9D DUP6 PUSH2 0x3AFB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3BD9 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3BBA DUP6 DUP3 PUSH2 0x3B55 JUMP JUMPDEST SWAP5 POP PUSH2 0x3BC5 DUP4 PUSH2 0x3B69 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3BA1 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C05 DUP2 DUP5 PUSH2 0x3B76 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C23 JUMPI PUSH2 0x3C22 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C31 DUP5 DUP3 DUP6 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C65 DUP3 PUSH2 0x3C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C75 DUP2 PUSH2 0x3C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C90 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C9F DUP2 PUSH2 0x3C5A JUMP JUMPDEST DUP2 EQ PUSH2 0x3CAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CBC DUP2 PUSH2 0x3C96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CD9 JUMPI PUSH2 0x3CD8 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CE7 DUP6 DUP3 DUP7 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3CF8 DUP6 DUP3 DUP7 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D37 DUP2 PUSH2 0x3C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D49 DUP4 DUP4 PUSH2 0x3D2E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D6D DUP3 PUSH2 0x3D02 JUMP JUMPDEST PUSH2 0x3D77 DUP2 DUP6 PUSH2 0x3D0D JUMP JUMPDEST SWAP4 POP PUSH2 0x3D82 DUP4 PUSH2 0x3D1E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3DB3 JUMPI DUP2 MLOAD PUSH2 0x3D9A DUP9 DUP3 PUSH2 0x3D3D JUMP JUMPDEST SWAP8 POP PUSH2 0x3DA5 DUP4 PUSH2 0x3D55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3D86 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DDA DUP2 DUP5 PUSH2 0x3D62 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3DEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E01 DUP2 PUSH2 0x3DE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E1D JUMPI PUSH2 0x3E1C PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E2B DUP5 DUP3 DUP6 ADD PUSH2 0x3DF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E5B DUP3 PUSH2 0x3E34 JUMP JUMPDEST PUSH2 0x3E65 DUP2 DUP6 PUSH2 0x3E3F JUMP JUMPDEST SWAP4 POP PUSH2 0x3E75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3866 JUMP JUMPDEST PUSH2 0x3E7E DUP2 PUSH2 0x36B4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EA3 DUP2 DUP5 PUSH2 0x3E50 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EB4 DUP2 PUSH2 0x37AF JUMP JUMPDEST DUP2 EQ PUSH2 0x3EBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3ED1 DUP2 PUSH2 0x3EAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EF7 JUMPI PUSH2 0x3EF6 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH2 0x3F00 DUP3 PUSH2 0x36B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F20 PUSH2 0x3F1B DUP5 PUSH2 0x3EDC JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3F3C JUMPI PUSH2 0x3F3B PUSH2 0x3ED7 JUMP JUMPDEST JUMPDEST PUSH2 0x3F47 DUP5 DUP3 DUP6 PUSH2 0x36A5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F64 JUMPI PUSH2 0x3F63 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F74 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3F0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3F99 JUMPI PUSH2 0x3F98 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3FA7 DUP9 DUP3 DUP10 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3FB8 DUP9 DUP3 DUP10 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x3FC9 DUP9 DUP3 DUP10 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x3FDA DUP9 DUP3 DUP10 ADD PUSH2 0x3EC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FFB JUMPI PUSH2 0x3FFA PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4007 DUP9 DUP3 DUP10 ADD PUSH2 0x3F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x402F JUMPI PUSH2 0x402E PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x404C JUMPI PUSH2 0x404B PUSH2 0x4014 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4068 JUMPI PUSH2 0x4067 PUSH2 0x39CB JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4086 JUMPI PUSH2 0x4085 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40A4 JUMPI PUSH2 0x40A3 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x40B0 DUP6 DUP3 DUP7 ADD PUSH2 0x4019 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40D2 JUMPI PUSH2 0x40D1 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40E0 DUP5 DUP3 DUP6 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4104 JUMPI PUSH2 0x4103 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4128 PUSH2 0x4123 DUP5 PUSH2 0x40E9 JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x414B JUMPI PUSH2 0x414A PUSH2 0x39CB JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4174 JUMPI DUP1 PUSH2 0x4160 DUP9 DUP3 PUSH2 0x3CAD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x414D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4193 JUMPI PUSH2 0x4192 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x41A3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4115 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x41C7 JUMPI PUSH2 0x41C6 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41EB PUSH2 0x41E6 DUP5 PUSH2 0x41AC JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x420E JUMPI PUSH2 0x420D PUSH2 0x39CB JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4237 JUMPI DUP1 PUSH2 0x4223 DUP9 DUP3 PUSH2 0x3EC2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4210 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4256 JUMPI PUSH2 0x4255 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4266 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x41D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x428A JUMPI PUSH2 0x4289 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42AE PUSH2 0x42A9 DUP5 PUSH2 0x426F JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x42D1 JUMPI PUSH2 0x42D0 PUSH2 0x39CB JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4318 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42F6 JUMPI PUSH2 0x42F5 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4303 DUP10 DUP3 PUSH2 0x3F4F JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x42D3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4337 JUMPI PUSH2 0x4336 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4347 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x429B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x436C JUMPI PUSH2 0x436B PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x438A JUMPI PUSH2 0x4389 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4396 DUP9 DUP3 DUP10 ADD PUSH2 0x417E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43B7 JUMPI PUSH2 0x43B6 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x43C3 DUP9 DUP3 DUP10 ADD PUSH2 0x417E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43E4 JUMPI PUSH2 0x43E3 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x43F0 DUP9 DUP3 DUP10 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4411 JUMPI PUSH2 0x4410 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x441D DUP9 DUP3 DUP10 ADD PUSH2 0x4241 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443E JUMPI PUSH2 0x443D PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x444A DUP9 DUP3 DUP10 ADD PUSH2 0x4322 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x446E JUMPI PUSH2 0x446D PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x447C DUP6 DUP3 DUP7 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x449D JUMPI PUSH2 0x449C PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x44A9 DUP6 DUP3 DUP7 ADD PUSH2 0x3F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x44CC JUMPI PUSH2 0x44CB PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44DA DUP7 DUP3 DUP8 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x44EB DUP7 DUP3 DUP8 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x450C JUMPI PUSH2 0x450B PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4518 DUP7 DUP3 DUP8 ADD PUSH2 0x3F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4539 JUMPI PUSH2 0x4538 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4547 DUP6 DUP3 DUP7 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4558 DUP6 DUP3 DUP7 ADD PUSH2 0x3DF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4579 JUMPI PUSH2 0x4578 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4597 JUMPI PUSH2 0x4596 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x45A3 DUP6 DUP3 DUP7 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45C4 JUMPI PUSH2 0x45C3 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x45D0 DUP6 DUP3 DUP7 ADD PUSH2 0x4322 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x460F DUP2 PUSH2 0x37E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4621 DUP4 DUP4 PUSH2 0x4606 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4645 DUP3 PUSH2 0x45DA JUMP JUMPDEST PUSH2 0x464F DUP2 DUP6 PUSH2 0x45E5 JUMP JUMPDEST SWAP4 POP PUSH2 0x465A DUP4 PUSH2 0x45F6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x468B JUMPI DUP2 MLOAD PUSH2 0x4672 DUP9 DUP3 PUSH2 0x4615 JUMP JUMPDEST SWAP8 POP PUSH2 0x467D DUP4 PUSH2 0x462D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x465E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46B2 DUP2 DUP5 PUSH2 0x463A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x46D3 JUMPI PUSH2 0x46D2 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46F1 JUMPI PUSH2 0x46F0 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x46FD DUP7 DUP3 DUP8 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x471E JUMPI PUSH2 0x471D PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x472A DUP7 DUP3 DUP8 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x474B JUMPI PUSH2 0x474A PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4757 DUP7 DUP3 DUP8 ADD PUSH2 0x4322 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x476A DUP2 PUSH2 0x38EB JUMP JUMPDEST DUP2 EQ PUSH2 0x4775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4787 DUP2 PUSH2 0x4761 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x47A8 JUMPI PUSH2 0x47A7 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH2 0x47B1 DUP3 PUSH2 0x36B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47D1 PUSH2 0x47CC DUP5 PUSH2 0x478D JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x47ED JUMPI PUSH2 0x47EC PUSH2 0x3ED7 JUMP JUMPDEST JUMPDEST PUSH2 0x47F8 DUP5 DUP3 DUP6 PUSH2 0x36A5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4815 JUMPI PUSH2 0x4814 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4825 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x47BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4847 JUMPI PUSH2 0x4846 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4855 DUP7 DUP3 DUP8 ADD PUSH2 0x4778 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4866 DUP7 DUP3 DUP8 ADD PUSH2 0x3DF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4887 JUMPI PUSH2 0x4886 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4893 DUP7 DUP3 DUP8 ADD PUSH2 0x4800 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x48B6 JUMPI PUSH2 0x48B5 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48C4 DUP7 DUP3 DUP8 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x48D5 DUP7 DUP3 DUP8 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48F6 JUMPI PUSH2 0x48F5 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4902 DUP7 DUP3 DUP8 ADD PUSH2 0x3F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4926 JUMPI PUSH2 0x4925 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4934 DUP8 DUP3 DUP9 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4945 DUP8 DUP3 DUP9 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4956 DUP8 DUP3 DUP9 ADD PUSH2 0x3EC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4977 JUMPI PUSH2 0x4976 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4983 DUP8 DUP3 DUP9 ADD PUSH2 0x3F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49A5 JUMPI PUSH2 0x49A4 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x49C3 JUMPI PUSH2 0x49C2 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x49CF DUP5 DUP3 DUP6 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x49ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x49FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x38F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4A0A DUP2 PUSH2 0x372A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A25 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A42 DUP4 DUP6 PUSH2 0x4A2B JUMP JUMPDEST SWAP4 POP PUSH2 0x4A4F DUP4 DUP6 DUP5 PUSH2 0x36A5 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A73 DUP3 PUSH2 0x4A5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A85 DUP3 PUSH2 0x4A68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A9D PUSH2 0x4A98 DUP3 PUSH2 0x3C5A JUMP JUMPDEST PUSH2 0x4A7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ABE PUSH2 0x4AB9 DUP3 PUSH2 0x38EB JUMP JUMPDEST PUSH2 0x4AA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AD1 DUP3 DUP7 DUP9 PUSH2 0x4A36 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ADD DUP3 DUP6 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4AED DUP3 DUP5 PUSH2 0x4AAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0A DUP3 PUSH2 0x385B JUMP JUMPDEST PUSH2 0x4B14 DUP2 DUP6 PUSH2 0x4A2B JUMP JUMPDEST SWAP4 POP PUSH2 0x4B24 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3866 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3C DUP3 DUP5 PUSH2 0x4AFF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4B7F DUP2 PUSH2 0x37E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B9A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4B76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4BE7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4BFA JUMPI PUSH2 0x4BF9 PUSH2 0x4BA0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4C15 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4B76 JUMP JUMPDEST PUSH2 0x4C22 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C6C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4C55 JUMPI PUSH2 0x4C54 PUSH2 0x4C29 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C77 JUMPI PUSH2 0x4C76 PUSH2 0x4C2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x4C93 JUMPI PUSH2 0x4C92 PUSH2 0x4C33 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CA8 DUP3 DUP5 DUP7 PUSH2 0x4A36 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4CC9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x4CD6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4B76 JUMP JUMPDEST PUSH2 0x4CE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C6C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4D00 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x4D0D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4B76 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4D29 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x4D36 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4B76 JUMP JUMPDEST PUSH2 0x4D43 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x37BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4D55 DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D76 DUP3 PUSH2 0x3E34 JUMP JUMPDEST PUSH2 0x4D80 DUP2 DUP6 PUSH2 0x4D60 JUMP JUMPDEST SWAP4 POP PUSH2 0x4D90 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3866 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA8 DUP3 DUP5 PUSH2 0x4D6B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642073656372657420636F646500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DE9 PUSH1 0x13 DUP4 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP PUSH2 0x4DF4 DUP3 PUSH2 0x4DB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E18 DUP2 PUSH2 0x4DDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E6F742074686520686967686573742073636F72650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E84 PUSH1 0x15 DUP4 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP PUSH2 0x4E8F DUP3 PUSH2 0x4E4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EB3 DUP2 PUSH2 0x4E77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x4ECB JUMPI PUSH2 0x4ECA PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4EDC DUP3 PUSH2 0x4EBA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EEC DUP3 PUSH2 0x4ECE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0B DUP3 PUSH2 0x4EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F23 PUSH2 0x4F1E DUP3 PUSH2 0x4EE1 JUMP JUMPDEST PUSH2 0x4F00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F44 PUSH2 0x4F3F DUP3 PUSH2 0x37E5 JUMP JUMPDEST PUSH2 0x4F29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F56 DUP3 DUP7 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4F66 DUP3 DUP6 PUSH2 0x4F12 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH2 0x4F76 DUP3 DUP5 PUSH2 0x4F33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4F9C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x4FA9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x4FB6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4B76 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501A PUSH1 0x26 DUP4 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP PUSH2 0x5025 DUP3 PUSH2 0x4FBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5049 DUP2 PUSH2 0x500D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5098 DUP3 MLOAD PUSH2 0x5060 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50B9 DUP3 PUSH2 0x385B JUMP JUMPDEST DUP3 PUSH2 0x50C3 DUP5 PUSH2 0x5050 JUMP JUMPDEST SWAP1 POP PUSH2 0x50CE DUP2 PUSH2 0x508C JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x510E JUMPI PUSH2 0x5109 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x50A1 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5121 DUP3 DUP6 PUSH2 0x4F33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x5131 DUP3 DUP5 PUSH2 0x4F33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x466972737420506C616365204E46547320617265206E6F6E2D7472616E736665 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7261626C65000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519D PUSH1 0x25 DUP4 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP PUSH2 0x51A8 DUP3 PUSH2 0x5141 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51CC DUP2 PUSH2 0x5190 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5209 PUSH1 0x20 DUP4 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP PUSH2 0x5214 DUP3 PUSH2 0x51D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5238 DUP2 PUSH2 0x51FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5294 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x50A1 JUMP JUMPDEST PUSH2 0x529E DUP7 DUP4 PUSH2 0x50A1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52DB PUSH2 0x52D6 PUSH2 0x52D1 DUP5 PUSH2 0x38EB JUMP JUMPDEST PUSH2 0x52B6 JUMP JUMPDEST PUSH2 0x38EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52F5 DUP4 PUSH2 0x52C0 JUMP JUMPDEST PUSH2 0x5309 PUSH2 0x5301 DUP3 PUSH2 0x52E2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5264 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x531E PUSH2 0x5311 JUMP JUMPDEST PUSH2 0x5329 DUP2 DUP5 DUP5 PUSH2 0x52EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x534D JUMPI PUSH2 0x5342 PUSH1 0x0 DUP3 PUSH2 0x5316 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x532F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5392 JUMPI PUSH2 0x5363 DUP2 PUSH2 0x523F JUMP JUMPDEST PUSH2 0x536C DUP5 PUSH2 0x5254 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x537B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x538F PUSH2 0x5387 DUP6 PUSH2 0x5254 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x532E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5397 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53CE DUP4 DUP4 PUSH2 0x53A4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x53E7 DUP3 PUSH2 0x385B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5400 JUMPI PUSH2 0x53FF PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH2 0x540A DUP3 SLOAD PUSH2 0x4BCF JUMP JUMPDEST PUSH2 0x5415 DUP3 DUP3 DUP6 PUSH2 0x5351 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5448 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5436 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5440 DUP6 DUP3 PUSH2 0x53C2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x54A8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5456 DUP7 PUSH2 0x523F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x547E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5459 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x549B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5497 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x53A4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54EA DUP3 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x54FD JUMPI PUSH2 0x54FC PUSH2 0x54B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x551D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x552A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x37BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x553C DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x555B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x5568 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x5575 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x5582 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4B76 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5594 DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55AB DUP3 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x55DD JUMPI PUSH2 0x55DC PUSH2 0x54B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH31 0x6000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x561D PUSH1 0x2 DUP4 PUSH2 0x4D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x5628 DUP3 PUSH2 0x55E8 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x563E DUP3 PUSH2 0x5610 JUMP JUMPDEST SWAP2 POP PUSH2 0x564A DUP3 DUP5 PUSH2 0x4D6B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x566A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x37BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x567C DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56CC PUSH2 0x56C7 DUP3 PUSH2 0x5685 JUMP JUMPDEST PUSH2 0x56B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5719 PUSH2 0x5714 DUP3 PUSH2 0x56D2 JUMP JUMPDEST PUSH2 0x56FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x573A PUSH2 0x5735 DUP3 PUSH2 0x5060 JUMP JUMPDEST PUSH2 0x571F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x574C DUP3 DUP7 PUSH2 0x56BB JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP2 POP PUSH2 0x575C DUP3 DUP6 PUSH2 0x5708 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x576C DUP3 DUP5 PUSH2 0x5729 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5789 DUP3 MLOAD PUSH2 0x37E5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x579D DUP3 PUSH2 0x385B JUMP JUMPDEST DUP3 PUSH2 0x57A7 DUP5 PUSH2 0x5050 JUMP JUMPDEST SWAP1 POP PUSH2 0x57B2 DUP2 PUSH2 0x577D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x57F2 JUMPI PUSH2 0x57ED PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x50A1 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x580E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4B76 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5820 DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x583C PUSH2 0x5837 DUP5 PUSH2 0x3EDC JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5858 JUMPI PUSH2 0x5857 PUSH2 0x3ED7 JUMP JUMPDEST JUMPDEST PUSH2 0x5863 DUP5 DUP3 DUP6 PUSH2 0x3866 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5880 JUMPI PUSH2 0x587F PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5890 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5829 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58AF JUMPI PUSH2 0x58AE PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58CD JUMPI PUSH2 0x58CC PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x58D9 DUP5 DUP3 DUP6 ADD PUSH2 0x586B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58ED DUP3 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x58F8 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5910 JUMPI PUSH2 0x590F PUSH2 0x54B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 DUP3 PUSH13 0xAF06D073651989EDE571D9EC2C PUSH5 0x56D1151258 GASPRICE 0xA6 0xAC 0x21 0x2F 0xAE BLOCKHASH 0x4E JUMP 0xDF PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"168:4225:26:-:0;;;979:1247;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1276:5;1295:7;1316:9;1339:14;1367:18;4529:5:19;4536:7;4545:9;4556:14;1336:13:14;936:32:20;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1637:1:0;1613:26;;:12;:26;;;1609:100;;1662:36;;;;;;;;;;;;;;1609:100;1718:40;1745:12;1718:26;;;:40;;:::i;:::-;1557:208;1421:114:14::1;388:66:13;1451:29:14;;1494:31;;;;;;;;;;;;;;;;::::0;1421:16:::1;;;:114;;:::i;:::-;1546:52;633:66:13;1563:20:14;;1591:5;1546:16;;;:52;;:::i;:::-;1608:56;776:66:13;1625:22:14;;1655:7;1608:16;;;:56;;:::i;:::-;1674:66;915::13;1691:20:14;;1724:14;1713:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;1674:16;;;:66;;:::i;:::-;1187:560:::0;;;;4582:125:19::1;359:66:17;4629:24:19;;4678:18;4667:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;4582:33;;;:125;;:::i;:::-;4331:383:::0;;;;;1442:1:26::1;1418:13;:20;:25;1410:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1526:11;1509:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;1499:40;;;;;;1486:10;:53;;;;1592:13;1606:1;1592:16;;;;;;;;:::i;:::-;;;;;;;;1550:22;:39;1573:15:::0;1550:39:::1;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:58;;;;;;:::i;:::-;;1662:13;1676:1;1662:16;;;;;;;;:::i;:::-;;;;;;;;1618:22;:41;1641:17;1618:41;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:60;;;;;;:::i;:::-;;1730:13;1744:1;1730:16;;;;;;;;:::i;:::-;;;;;;;;1688:22;:39;1711:15;1688:39:::0;::::1;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:58;;;;;;:::i;:::-;;1762:7;1757:463;1779:1;1775;:5;;;1757:463;;;1801:15;1830:1;1819:13;;;;;;;;;;:::i;:::-;;1801:31;;1846:15;1891:9;1902:4;620:28;1874:50;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1864:61;;;;;;1846:79;;1939:58;1945:9;1956:7;1965:4;1939:58;;;;;;;;;;;;;;;;::::0;:5:::1;;;:58;;:::i;:::-;2011:32;2029:7;2038:4;2011:17;;;:32;;:::i;:::-;2057:45;2083:4;2090:7;2057:45;;;;;;;;;;;::::0;:17:::1;;;:45;;:::i;:::-;2135:20;;;;;;;;2142:9;2135:20;;;;;;2153:1;2135:20;;::::0;2116:10:::1;:16;2127:4;2116:16;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2205:4;2169:16;:27;2186:9;2169:27;;;;;;;;;;;;;;;:33;2197:4;2169:33;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1787:433;;1782:3;;;;;:::i;:::-;;;;1757:463;;;;979:1247:::0;;;;;;;168:4225;;655:96:21;708:7;734:10;727:17;;655:96;:::o;2426:187:20:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;5496:188:0:-;5622:9;5604:6;:15;5611:7;5604:15;;;;;;;;;;;:27;;;;;;:::i;:::-;;5658:7;5646:31;5667:9;5646:31;;;;;;:::i;:::-;;;;;;;;5496:188;;:::o;1935:533:14:-;633:66:13;2067:20:14;;2056:7;:31;2052:410;;2110:26;;;;;;;;;;;;;;2052:410;776:66:13;2168:22:14;;2157:7;:33;2153:309;;2213:28;;;;;;;;;;;;;;2153:309;915:66:13;2273:20:14;;2262:7;:31;2258:204;;2316:26;;;;;;;;;;;;;;2258:204;2391:9;2373:6;:15;2380:7;2373:15;;;;;;;;;;;:27;;;;;;:::i;:::-;;2432:7;2420:31;2441:9;2420:31;;;;;;:::i;:::-;;;;;;;;1935:533;;:::o;23582:1117:19:-;23740:1;23726:16;;:2;:16;;;23722:83;;23765:29;;;;;;;;;;;;;;23722:83;23873:16;23881:7;23873;;;:16;;:::i;:::-;23869:87;;;23937:7;23912:33;;;;;;;;;;;:::i;:::-;;;;;;;;23869:87;23966:58;23995:1;23999:2;24003:7;24012:5;24019:4;23966:20;;;:58;;:::i;:::-;24125:16;24133:7;24125;;;:16;;:::i;:::-;24121:87;;;24189:7;24164:33;;;;;;;;;;;:::i;:::-;;;;;;;;24121:87;24250:15;;24248:17;;;;;:::i;:::-;;;;;;;;24276:29;24297:7;24276:12;:16;24289:2;24276:16;;;;;;;;;;;;;;;:20;;;;:29;;;;:::i;:::-;;24339:2;24315:12;:21;24328:7;24315:21;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;24394:7;24390:2;24357:58;;24386:1;24357:58;;;24366:10;24403:5;24410:4;24357:58;;;;;;;;:::i;:::-;;;;;;;;24426:57;24454:1;24458:2;24462:7;24471:5;24478:4;24426:19;;;:57;;:::i;:::-;24494:21;24542:10;24574:1;24590:2;24606:7;24627:4;24518:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;24494:147;;24651:41;24672:2;24676:5;24683:8;24651:20;;;:41;;:::i;:::-;23712:987;23582:1117;;;;:::o;3745:284:26:-;3831:17;3851:22;:34;3874:10;3851:34;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3831:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3895:21;3972:3;3919:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;3895:90;;3995:27;4004:7;4013:8;3995;;;:27;;:::i;:::-;3821:208;;3745:284;;:::o;15655:1062:19:-;15820:18;15841:21;15854:7;15841:12;;;:21;;:::i;:::-;15820:42;;15891:10;15877:24;;:10;:24;;;15873:112;;15942:10;15954:7;15963:10;15924:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;15873:112;16019:1;15999:22;;:8;:22;;;15995:96;;16044:36;;;;;;;;;;;;;;15995:96;16119:8;16105:22;;:10;:22;;;16101:92;;16150:32;;;;;;;;;;;;;;16101:92;16203:12;16218:33;16242:8;16218:10;:19;16229:7;16218:19;;;;;;;;;;;:23;;;;:33;;;;:::i;:::-;16203:48;;16266:7;16261:69;;16312:8;16322:7;16282:48;;;;;;;;;;;;:::i;:::-;;;;;;;;16261:69;16434:7;16410:10;16346:143;;16388:8;16346:143;;;16455:24;16346:143;;;;;;:::i;:::-;;;;;;;;16500:21;16548:10;16572:7;16593:4;16625:24;16524:135;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16500:159;;16670:40;16691:8;16701;16670:20;;;:40;;:::i;:::-;15810:907;;;15655:1062;;;:::o;22172:130::-;22237:4;22293:1;22260:35;;:12;:21;22273:7;22260:21;;;;;;;;;;;;;;;;;;;;;:35;;;;22253:42;;22172:130;;;:::o;31575:214::-;;;;;;:::o;5919:123:25:-;5989:4;6012:23;6017:3;:10;;6029:5;6012:4;;;:23;;:::i;:::-;6005:30;;5919:123;;;;:::o;32345:213:19:-;;;;;;:::o;35155:615::-;35306:115;35370:2;128:10:7;35390:17:19;;35306:46;;;:115;;:::i;:::-;35289:475;;;35452:2;35446:27;;;1015:66:17;35474:28:19;;35504:8;35446:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;35289:475;;;35535:5;35530:234;;35578:1;35560:2;:14;;;:19;35556:198;;35658:2;35606:55;;;;;;;;;;;:::i;:::-;;;;;;;;35556:198;35736:2;35707:32;;;;;;;;;;;:::i;:::-;;;;;;;;35530:234;35289:475;35155:615;;;:::o;10779:289::-;359:66:17;10911:24:19;;10900:7;:35;10896:103;;10958:30;;;;;;;;;;;;;;10896:103;11008:53;11042:7;11051:9;11008:33;;;:53;;:::i;:::-;10779:289;;:::o;11605:290::-;11696:7;11715:18;11736:12;:21;11749:7;11736:21;;;;;;;;;;;;;;;;;;;;;11715:42;;11794:1;11772:24;;:10;:24;;;11768:93;;11842:7;11819:31;;;;;;;;;;;:::i;:::-;;;;;;;;11768:93;11878:10;11871:17;;;11605:290;;;:::o;8305:150:25:-;8375:4;8398:50;8403:3;:10;;8439:5;8423:23;;8415:32;;8398:4;;;:50;;:::i;:::-;8391:57;;8305:150;;;;:::o;33171:254:19:-;33291:127;33338:8;1178:66:17;33360:26:19;;33400:8;33291:33;;;:127;;:::i;:::-;33171:254;;:::o;2214:404:25:-;2277:4;2298:21;2308:3;2313:5;2298:9;;;:21;;:::i;:::-;2293:319;;2335:3;:11;;2352:5;2335:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:3;:11;;:18;;;;2493:3;:12;;:19;2506:5;2493:19;;;;;;;;;;;:40;;;;2554:4;2547:11;;;;2293:319;2596:5;2589:12;;2214:404;;;;;:::o;4421:647:23:-;4523:4;4563:26;4615:34;;;4651:11;4592:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4563:100;;4705:12;4727:18;4755:19;4899:4;4893;4877:13;4871:20;4864:4;4849:13;4845:24;4836:7;4829:5;4818:86;4807:97;;4931:16;4917:30;;4981:4;4975:11;4960:26;;5013:7;:29;;;;;5038:4;5024:10;:18;;5013:29;:48;;;;;5060:1;5046:11;:15;5013:48;5006:55;;;;;;4421:647;;;;:::o;1352:361:8:-;1514:100;128:10:7;1583:17:8;;1514:18;:51;;;;;;:100;;;;:::i;:::-;1497:210;;;1645:18;1639:43;;;1683:6;1691:4;1639:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1497:210;1352:361;;;:::o;4255:127:25:-;4328:4;4374:1;4351:3;:12;;:19;4364:5;4351:19;;;;;;;;;;;;:24;;4344:31;;4255:127;;;;:::o;7:75:27:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:126::-;2714:7;2754:42;2747:5;2743:54;2732:65;;2677:126;;;:::o;2809:96::-;2846:7;2875:24;2893:5;2875:24;:::i;:::-;2864:35;;2809:96;;;:::o;2911:122::-;2984:24;3002:5;2984:24;:::i;:::-;2977:5;2974:35;2964:63;;3023:1;3020;3013:12;2964:63;2911:122;:::o;3039:143::-;3096:5;3127:6;3121:13;3112:22;;3143:33;3170:5;3143:33;:::i;:::-;3039:143;;;;:::o;3188:77::-;3225:7;3254:5;3243:16;;3188:77;;;:::o;3271:122::-;3344:24;3362:5;3344:24;:::i;:::-;3337:5;3334:35;3324:63;;3383:1;3380;3373:12;3324:63;3271:122;:::o;3399:143::-;3456:5;3487:6;3481:13;3472:22;;3503:33;3530:5;3503:33;:::i;:::-;3399:143;;;;:::o;3548:321::-;3635:4;3725:18;3717:6;3714:30;3711:56;;;3747:18;;:::i;:::-;3711:56;3797:4;3789:6;3785:17;3777:25;;3857:4;3851;3847:15;3839:23;;3548:321;;;:::o;3875:117::-;3984:1;3981;3974:12;4014:960;4131:5;4156:91;4172:74;4239:6;4172:74;:::i;:::-;4156:91;:::i;:::-;4147:100;;4267:5;4296:6;4289:5;4282:21;4330:4;4323:5;4319:16;4312:23;;4383:4;4375:6;4371:17;4363:6;4359:30;4412:3;4404:6;4401:15;4398:122;;;4431:79;;:::i;:::-;4398:122;4546:6;4529:439;4563:6;4558:3;4555:15;4529:439;;;4645:3;4639:10;4681:18;4668:11;4665:35;4662:122;;;4703:79;;:::i;:::-;4662:122;4827:11;4819:6;4815:24;4865:58;4919:3;4907:10;4865:58;:::i;:::-;4860:3;4853:71;4953:4;4948:3;4944:14;4937:21;;4605:363;;4589:4;4584:3;4580:14;4573:21;;4529:439;;;4533:21;4137:837;;4014:960;;;;;:::o;4996:405::-;5088:5;5137:3;5130:4;5122:6;5118:17;5114:27;5104:122;;5145:79;;:::i;:::-;5104:122;5255:6;5249:13;5280:115;5391:3;5383:6;5376:4;5368:6;5364:17;5280:115;:::i;:::-;5271:124;;5094:307;4996:405;;;;:::o;5407:2033::-;5596:6;5604;5612;5620;5628;5636;5644;5693:3;5681:9;5672:7;5668:23;5664:33;5661:120;;;5700:79;;:::i;:::-;5661:120;5841:1;5830:9;5826:17;5820:24;5871:18;5863:6;5860:30;5857:117;;;5893:79;;:::i;:::-;5857:117;5998:74;6064:7;6055:6;6044:9;6040:22;5998:74;:::i;:::-;5988:84;;5791:291;6142:2;6131:9;6127:18;6121:25;6173:18;6165:6;6162:30;6159:117;;;6195:79;;:::i;:::-;6159:117;6300:74;6366:7;6357:6;6346:9;6342:22;6300:74;:::i;:::-;6290:84;;6092:292;6423:2;6449:64;6505:7;6496:6;6485:9;6481:22;6449:64;:::i;:::-;6439:74;;6394:129;6562:2;6588:64;6644:7;6635:6;6624:9;6620:22;6588:64;:::i;:::-;6578:74;;6533:129;6701:3;6728:64;6784:7;6775:6;6764:9;6760:22;6728:64;:::i;:::-;6718:74;;6672:130;6862:3;6851:9;6847:19;6841:26;6894:18;6886:6;6883:30;6880:117;;;6916:79;;:::i;:::-;6880:117;7021:74;7087:7;7078:6;7067:9;7063:22;7021:74;:::i;:::-;7011:84;;6812:293;7165:3;7154:9;7150:19;7144:26;7197:18;7189:6;7186:30;7183:117;;;7219:79;;:::i;:::-;7183:117;7324:99;7415:7;7406:6;7395:9;7391:22;7324:99;:::i;:::-;7314:109;;7115:318;5407:2033;;;;;;;;;;:::o;7446:118::-;7533:24;7551:5;7533:24;:::i;:::-;7528:3;7521:37;7446:118;;:::o;7570:222::-;7663:4;7701:2;7690:9;7686:18;7678:26;;7714:71;7782:1;7771:9;7767:17;7758:6;7714:71;:::i;:::-;7570:222;;;;:::o;7798:169::-;7882:11;7916:6;7911:3;7904:19;7956:4;7951:3;7947:14;7932:29;;7798:169;;;;:::o;7973:178::-;8113:30;8109:1;8101:6;8097:14;8090:54;7973:178;:::o;8157:366::-;8299:3;8320:67;8384:2;8379:3;8320:67;:::i;:::-;8313:74;;8396:93;8485:3;8396:93;:::i;:::-;8514:2;8509:3;8505:12;8498:19;;8157:366;;;:::o;8529:419::-;8695:4;8733:2;8722:9;8718:18;8710:26;;8782:9;8776:4;8772:20;8768:1;8757:9;8753:17;8746:47;8810:131;8936:4;8810:131;:::i;:::-;8802:139;;8529:419;;;:::o;8954:99::-;9006:6;9040:5;9034:12;9024:22;;8954:99;;;:::o;9059:148::-;9161:11;9198:3;9183:18;;9059:148;;;;:::o;9213:390::-;9319:3;9347:39;9380:5;9347:39;:::i;:::-;9402:89;9484:6;9479:3;9402:89;:::i;:::-;9395:96;;9500:65;9558:6;9553:3;9546:4;9539:5;9535:16;9500:65;:::i;:::-;9590:6;9585:3;9581:16;9574:23;;9323:280;9213:390;;;;:::o;9609:275::-;9741:3;9763:95;9854:3;9845:6;9763:95;:::i;:::-;9756:102;;9875:3;9868:10;;9609:275;;;;:::o;9890:180::-;9938:77;9935:1;9928:88;10035:4;10032:1;10025:15;10059:4;10056:1;10049:15;10076:180;10124:77;10121:1;10114:88;10221:4;10218:1;10211:15;10245:4;10242:1;10235:15;10262:180;10310:77;10307:1;10300:88;10407:4;10404:1;10397:15;10431:4;10428:1;10421:15;10448:320;10492:6;10529:1;10523:4;10519:12;10509:22;;10576:1;10570:4;10566:12;10597:18;10587:81;;10653:4;10645:6;10641:17;10631:27;;10587:81;10715:2;10707:6;10704:14;10684:18;10681:38;10678:84;;10734:18;;:::i;:::-;10678:84;10499:269;10448:320;;;:::o;10774:141::-;10823:4;10846:3;10838:11;;10869:3;10866:1;10859:14;10903:4;10900:1;10890:18;10882:26;;10774:141;;;:::o;10921:93::-;10958:6;11005:2;11000;10993:5;10989:14;10985:23;10975:33;;10921:93;;;:::o;11020:107::-;11064:8;11114:5;11108:4;11104:16;11083:37;;11020:107;;;;:::o;11133:393::-;11202:6;11252:1;11240:10;11236:18;11275:97;11305:66;11294:9;11275:97;:::i;:::-;11393:39;11423:8;11412:9;11393:39;:::i;:::-;11381:51;;11465:4;11461:9;11454:5;11450:21;11441:30;;11514:4;11504:8;11500:19;11493:5;11490:30;11480:40;;11209:317;;11133:393;;;;;:::o;11532:60::-;11560:3;11581:5;11574:12;;11532:60;;;:::o;11598:142::-;11648:9;11681:53;11699:34;11708:24;11726:5;11708:24;:::i;:::-;11699:34;:::i;:::-;11681:53;:::i;:::-;11668:66;;11598:142;;;:::o;11746:75::-;11789:3;11810:5;11803:12;;11746:75;;;:::o;11827:269::-;11937:39;11968:7;11937:39;:::i;:::-;11998:91;12047:41;12071:16;12047:41;:::i;:::-;12039:6;12032:4;12026:11;11998:91;:::i;:::-;11992:4;11985:105;11903:193;11827:269;;;:::o;12102:73::-;12147:3;12102:73;:::o;12181:189::-;12258:32;;:::i;:::-;12299:65;12357:6;12349;12343:4;12299:65;:::i;:::-;12234:136;12181:189;;:::o;12376:186::-;12436:120;12453:3;12446:5;12443:14;12436:120;;;12507:39;12544:1;12537:5;12507:39;:::i;:::-;12480:1;12473:5;12469:13;12460:22;;12436:120;;;12376:186;;:::o;12568:543::-;12669:2;12664:3;12661:11;12658:446;;;12703:38;12735:5;12703:38;:::i;:::-;12787:29;12805:10;12787:29;:::i;:::-;12777:8;12773:44;12970:2;12958:10;12955:18;12952:49;;;12991:8;12976:23;;12952:49;13014:80;13070:22;13088:3;13070:22;:::i;:::-;13060:8;13056:37;13043:11;13014:80;:::i;:::-;12673:431;;12658:446;12568:543;;;:::o;13117:117::-;13171:8;13221:5;13215:4;13211:16;13190:37;;13117:117;;;;:::o;13240:169::-;13284:6;13317:51;13365:1;13361:6;13353:5;13350:1;13346:13;13317:51;:::i;:::-;13313:56;13398:4;13392;13388:15;13378:25;;13291:118;13240:169;;;;:::o;13414:295::-;13490:4;13636:29;13661:3;13655:4;13636:29;:::i;:::-;13628:37;;13698:3;13695:1;13691:11;13685:4;13682:21;13674:29;;13414:295;;;;:::o;13714:1395::-;13831:37;13864:3;13831:37;:::i;:::-;13933:18;13925:6;13922:30;13919:56;;;13955:18;;:::i;:::-;13919:56;13999:38;14031:4;14025:11;13999:38;:::i;:::-;14084:67;14144:6;14136;14130:4;14084:67;:::i;:::-;14178:1;14202:4;14189:17;;14234:2;14226:6;14223:14;14251:1;14246:618;;;;14908:1;14925:6;14922:77;;;14974:9;14969:3;14965:19;14959:26;14950:35;;14922:77;15025:67;15085:6;15078:5;15025:67;:::i;:::-;15019:4;15012:81;14881:222;14216:887;;14246:618;14298:4;14294:9;14286:6;14282:22;14332:37;14364:4;14332:37;:::i;:::-;14391:1;14405:208;14419:7;14416:1;14413:14;14405:208;;;14498:9;14493:3;14489:19;14483:26;14475:6;14468:42;14549:1;14541:6;14537:14;14527:24;;14596:2;14585:9;14581:18;14568:31;;14442:4;14439:1;14435:12;14430:17;;14405:208;;;14641:6;14632:7;14629:19;14626:179;;;14699:9;14694:3;14690:19;14684:26;14742:48;14784:4;14776:6;14772:17;14761:9;14742:48;:::i;:::-;14734:6;14727:64;14649:156;14626:179;14851:1;14847;14839:6;14835:14;14831:22;14825:4;14818:36;14253:611;;;14216:887;;13806:1303;;;13714:1395;;:::o;15115:94::-;15148:8;15196:5;15192:2;15188:14;15167:35;;15115:94;;;:::o;15215:::-;15254:7;15283:20;15297:5;15283:20;:::i;:::-;15272:31;;15215:94;;;:::o;15315:100::-;15354:7;15383:26;15403:5;15383:26;:::i;:::-;15372:37;;15315:100;;;:::o;15421:157::-;15526:45;15546:24;15564:5;15546:24;:::i;:::-;15526:45;:::i;:::-;15521:3;15514:58;15421:157;;:::o;15584:120::-;15672:1;15665:5;15662:12;15652:46;;15678:18;;:::i;:::-;15652:46;15584:120;:::o;15710:141::-;15762:7;15791:5;15780:16;;15797:48;15839:5;15797:48;:::i;:::-;15710:141;;;:::o;15857:::-;15920:9;15953:39;15986:5;15953:39;:::i;:::-;15940:52;;15857:141;;;:::o;16004:96::-;16038:8;16087:5;16082:3;16078:15;16057:36;;16004:96;;;:::o;16106:93::-;16143:7;16172:21;16187:5;16172:21;:::i;:::-;16161:32;;16106:93;;;:::o;16205:194::-;16323:69;16341:50;16385:5;16341:50;:::i;:::-;16323:69;:::i;:::-;16318:3;16311:82;16205:194;;:::o;16405:77::-;16442:7;16471:5;16460:16;;16405:77;;;:::o;16488:79::-;16527:7;16556:5;16545:16;;16488:79;;;:::o;16573:157::-;16678:45;16698:24;16716:5;16698:24;:::i;:::-;16678:45;:::i;:::-;16673:3;16666:58;16573:157;;:::o;16736:563::-;16917:3;16932:75;17003:3;16994:6;16932:75;:::i;:::-;17032:2;17027:3;17023:12;17016:19;;17045:88;17129:3;17120:6;17045:88;:::i;:::-;17158:1;17153:3;17149:11;17142:18;;17170:75;17241:3;17232:6;17170:75;:::i;:::-;17270:2;17265:3;17261:12;17254:19;;17290:3;17283:10;;16736:563;;;;;;:::o;17305:180::-;17353:77;17350:1;17343:88;17450:4;17447:1;17440:15;17474:4;17471:1;17464:15;17491:86;17526:7;17566:4;17559:5;17555:16;17544:27;;17491:86;;;:::o;17583:167::-;17620:3;17643:22;17659:5;17643:22;:::i;:::-;17634:31;;17687:4;17680:5;17677:15;17674:41;;17695:18;;:::i;:::-;17674:41;17742:1;17735:5;17731:13;17724:20;;17583:167;;;:::o;17756:98::-;17807:6;17841:5;17835:12;17825:22;;17756:98;;;:::o;17860:140::-;17908:4;17931:3;17923:11;;17954:3;17951:1;17944:14;17988:4;17985:1;17975:18;17967:26;;17860:140;;;:::o;18006:541::-;18106:2;18101:3;18098:11;18095:445;;;18140:37;18171:5;18140:37;:::i;:::-;18223:29;18241:10;18223:29;:::i;:::-;18213:8;18209:44;18406:2;18394:10;18391:18;18388:49;;;18427:8;18412:23;;18388:49;18450:80;18506:22;18524:3;18506:22;:::i;:::-;18496:8;18492:37;18479:11;18450:80;:::i;:::-;18110:430;;18095:445;18006:541;;;:::o;18553:1390::-;18668:36;18700:3;18668:36;:::i;:::-;18769:18;18761:6;18758:30;18755:56;;;18791:18;;:::i;:::-;18755:56;18835:38;18867:4;18861:11;18835:38;:::i;:::-;18920:66;18979:6;18971;18965:4;18920:66;:::i;:::-;19013:1;19037:4;19024:17;;19069:2;19061:6;19058:14;19086:1;19081:617;;;;19742:1;19759:6;19756:77;;;19808:9;19803:3;19799:19;19793:26;19784:35;;19756:77;19859:67;19919:6;19912:5;19859:67;:::i;:::-;19853:4;19846:81;19715:222;19051:886;;19081:617;19133:4;19129:9;19121:6;19117:22;19167:36;19198:4;19167:36;:::i;:::-;19225:1;19239:208;19253:7;19250:1;19247:14;19239:208;;;19332:9;19327:3;19323:19;19317:26;19309:6;19302:42;19383:1;19375:6;19371:14;19361:24;;19430:2;19419:9;19415:18;19402:31;;19276:4;19273:1;19269:12;19264:17;;19239:208;;;19475:6;19466:7;19463:19;19460:179;;;19533:9;19528:3;19524:19;19518:26;19576:48;19618:4;19610:6;19606:17;19595:9;19576:48;:::i;:::-;19568:6;19561:64;19483:156;19460:179;19685:1;19681;19673:6;19669:14;19665:22;19659:4;19652:36;19088:610;;;19051:886;;18643:1300;;;18553:1390;;:::o;19949:168::-;20032:11;20066:6;20061:3;20054:19;20106:4;20101:3;20097:14;20082:29;;19949:168;;;;:::o;20123:373::-;20209:3;20237:38;20269:5;20237:38;:::i;:::-;20291:70;20354:6;20349:3;20291:70;:::i;:::-;20284:77;;20370:65;20428:6;20423:3;20416:4;20409:5;20405:16;20370:65;:::i;:::-;20460:29;20482:6;20460:29;:::i;:::-;20455:3;20451:39;20444:46;;20213:283;20123:373;;;;:::o;20502:309::-;20613:4;20651:2;20640:9;20636:18;20628:26;;20700:9;20694:4;20690:20;20686:1;20675:9;20671:17;20664:47;20728:76;20799:4;20790:6;20728:76;:::i;:::-;20720:84;;20502:309;;;;:::o;20817:118::-;20904:24;20922:5;20904:24;:::i;:::-;20899:3;20892:37;20817:118;;:::o;20941:222::-;21034:4;21072:2;21061:9;21057:18;21049:26;;21085:71;21153:1;21142:9;21138:17;21129:6;21085:71;:::i;:::-;20941:222;;;;:::o;21169:233::-;21208:3;21231:24;21249:5;21231:24;:::i;:::-;21222:33;;21277:66;21270:5;21267:77;21264:103;;21347:18;;:::i;:::-;21264:103;21394:1;21387:5;21383:13;21376:20;;21169:233;;;:::o;21408:118::-;21495:24;21513:5;21495:24;:::i;:::-;21490:3;21483:37;21408:118;;:::o;21532:90::-;21566:7;21609:5;21602:13;21595:21;21584:32;;21532:90;;;:::o;21628:109::-;21709:21;21724:5;21709:21;:::i;:::-;21704:3;21697:34;21628:109;;:::o;21743:517::-;21904:4;21942:2;21931:9;21927:18;21919:26;;21955:71;22023:1;22012:9;22008:17;21999:6;21955:71;:::i;:::-;22036:66;22098:2;22087:9;22083:18;22074:6;22036:66;:::i;:::-;22149:9;22143:4;22139:20;22134:2;22123:9;22119:18;22112:48;22177:76;22248:4;22239:6;22177:76;:::i;:::-;22169:84;;21743:517;;;;;;:::o;22266:751::-;22489:4;22527:3;22516:9;22512:19;22504:27;;22541:71;22609:1;22598:9;22594:17;22585:6;22541:71;:::i;:::-;22622:72;22690:2;22679:9;22675:18;22666:6;22622:72;:::i;:::-;22704;22772:2;22761:9;22757:18;22748:6;22704:72;:::i;:::-;22786;22854:2;22843:9;22839:18;22830:6;22786:72;:::i;:::-;22906:9;22900:4;22896:20;22890:3;22879:9;22875:19;22868:49;22934:76;23005:4;22996:6;22934:76;:::i;:::-;22926:84;;22266:751;;;;;;;;:::o;23023:214::-;23163:66;23159:1;23151:6;23147:14;23140:90;23023:214;:::o;23243:400::-;23403:3;23424:84;23506:1;23501:3;23424:84;:::i;:::-;23417:91;;23517:93;23606:3;23517:93;:::i;:::-;23635:1;23630:3;23626:11;23619:18;;23243:400;;;:::o;23649:541::-;23882:3;23904:148;24048:3;23904:148;:::i;:::-;23897:155;;24069:95;24160:3;24151:6;24069:95;:::i;:::-;24062:102;;24181:3;24174:10;;23649:541;;;;:::o;24196:442::-;24345:4;24383:2;24372:9;24368:18;24360:26;;24396:71;24464:1;24453:9;24449:17;24440:6;24396:71;:::i;:::-;24477:72;24545:2;24534:9;24530:18;24521:6;24477:72;:::i;:::-;24559;24627:2;24616:9;24612:18;24603:6;24559:72;:::i;:::-;24196:442;;;;;;:::o;24644:332::-;24765:4;24803:2;24792:9;24788:18;24780:26;;24816:71;24884:1;24873:9;24869:17;24860:6;24816:71;:::i;:::-;24897:72;24965:2;24954:9;24950:18;24941:6;24897:72;:::i;:::-;24644:332;;;;;:::o;24982:628::-;25171:4;25209:3;25198:9;25194:19;25186:27;;25223:71;25291:1;25280:9;25276:17;25267:6;25223:71;:::i;:::-;25304:72;25372:2;25361:9;25357:18;25348:6;25304:72;:::i;:::-;25386:66;25448:2;25437:9;25433:18;25424:6;25386:66;:::i;:::-;25499:9;25493:4;25489:20;25484:2;25473:9;25469:18;25462:48;25527:76;25598:4;25589:6;25527:76;:::i;:::-;25519:84;;24982:628;;;;;;;:::o;25616:419::-;25755:4;25793:2;25782:9;25778:18;25770:26;;25806:71;25874:1;25863:9;25859:17;25850:6;25806:71;:::i;:::-;25924:9;25918:4;25914:20;25909:2;25898:9;25894:18;25887:48;25952:76;26023:4;26014:6;25952:76;:::i;:::-;25944:84;;25616:419;;;;;:::o;26041:307::-;26102:4;26192:18;26184:6;26181:30;26178:56;;;26214:18;;:::i;:::-;26178:56;26252:29;26274:6;26252:29;:::i;:::-;26244:37;;26336:4;26330;26326:15;26318:23;;26041:307;;;:::o;26354:432::-;26442:5;26467:65;26483:48;26524:6;26483:48;:::i;:::-;26467:65;:::i;:::-;26458:74;;26555:6;26548:5;26541:21;26593:4;26586:5;26582:16;26631:3;26622:6;26617:3;26613:16;26610:25;26607:112;;;26638:79;;:::i;:::-;26607:112;26728:52;26773:6;26768:3;26763;26728:52;:::i;:::-;26448:338;26354:432;;;;;:::o;26805:353::-;26871:5;26920:3;26913:4;26905:6;26901:17;26897:27;26887:122;;26928:79;;:::i;:::-;26887:122;27038:6;27032:13;27063:89;27148:3;27140:6;27133:4;27125:6;27121:17;27063:89;:::i;:::-;27054:98;;26877:281;26805:353;;;;:::o;27164:522::-;27243:6;27292:2;27280:9;27271:7;27267:23;27263:32;27260:119;;;27298:79;;:::i;:::-;27260:119;27439:1;27428:9;27424:17;27418:24;27469:18;27461:6;27458:30;27455:117;;;27491:79;;:::i;:::-;27455:117;27596:73;27661:7;27652:6;27641:9;27637:22;27596:73;:::i;:::-;27586:83;;27389:290;27164:522;;;;:::o;27692:222::-;27785:4;27823:2;27812:9;27808:18;27800:26;;27836:71;27904:1;27893:9;27889:17;27880:6;27836:71;:::i;:::-;27692:222;;;;:::o;27920:149::-;27956:7;27996:66;27989:5;27985:78;27974:89;;27920:149;;;:::o;28075:115::-;28160:23;28177:5;28160:23;:::i;:::-;28155:3;28148:36;28075:115;;:::o;28196:218::-;28287:4;28325:2;28314:9;28310:18;28302:26;;28338:69;28404:1;28393:9;28389:17;28380:6;28338:69;:::i;:::-;28196:218;;;;:::o;168:4225:26:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_2138":{"entryPoint":null,"id":2138,"parameterSlots":2,"returnSlots":1},"@_2156":{"entryPoint":null,"id":2156,"parameterSlots":0,"returnSlots":0},"@_add_4038":{"entryPoint":12452,"id":4038,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_3531":{"entryPoint":12903,"id":3531,"parameterSlots":5,"returnSlots":0},"@_at_4172":{"entryPoint":13853,"id":4172,"parameterSlots":2,"returnSlots":1},"@_beforeTokenTransfer_3516":{"entryPoint":12755,"id":3516,"parameterSlots":5,"returnSlots":0},"@_burn_3315":{"entryPoint":9962,"id":3315,"parameterSlots":2,"returnSlots":0},"@_checkOwner_3667":{"entryPoint":9060,"id":3667,"parameterSlots":0,"returnSlots":0},"@_clearOperators_3070":{"entryPoint":12762,"id":3070,"parameterSlots":2,"returnSlots":0},"@_contains_4141":{"entryPoint":13495,"id":4141,"parameterSlots":2,"returnSlots":1},"@_existsOrError_3105":{"entryPoint":8705,"id":3105,"parameterSlots":1,"returnSlots":0},"@_exists_3088":{"entryPoint":11858,"id":3088,"parameterSlots":1,"returnSlots":1},"@_fallbackLSP17Extendable_2211":{"entryPoint":2078,"id":2211,"parameterSlots":2,"returnSlots":1},"@_getDataForTokenId_3501":{"entryPoint":8390,"id":3501,"parameterSlots":2,"returnSlots":1},"@_getData_176":{"entryPoint":8874,"id":176,"parameterSlots":1,"returnSlots":1},"@_getExtensionAndForwardValue_2261":{"entryPoint":8004,"id":2261,"parameterSlots":1,"returnSlots":2},"@_isOperatorOrOwner_2858":{"entryPoint":8596,"id":2858,"parameterSlots":2,"returnSlots":1},"@_length_4155":{"entryPoint":12058,"id":4155,"parameterSlots":1,"returnSlots":1},"@_mint_3219":{"entryPoint":10353,"id":3219,"parameterSlots":4,"returnSlots":0},"@_msgSender_3737":{"entryPoint":12075,"id":3737,"parameterSlots":0,"returnSlots":1},"@_notifyTokenOperator_3548":{"entryPoint":9536,"id":3548,"parameterSlots":2,"returnSlots":0},"@_notifyTokenReceiver_3611":{"entryPoint":12983,"id":3611,"parameterSlots":3,"returnSlots":0},"@_notifyTokenSender_3565":{"entryPoint":12910,"id":3565,"parameterSlots":2,"returnSlots":0},"@_remove_4122":{"entryPoint":13577,"id":4122,"parameterSlots":2,"returnSlots":1},"@_revokeOperator_3016":{"entryPoint":11237,"id":3016,"parameterSlots":5,"returnSlots":0},"@_setDataBatch_249":{"entryPoint":9586,"id":249,"parameterSlots":2,"returnSlots":0},"@_setDataForTokenId_3479":{"entryPoint":9827,"id":3479,"parameterSlots":3,"returnSlots":0},"@_setData_1616":{"entryPoint":12083,"id":1616,"parameterSlots":2,"returnSlots":0},"@_setData_2312":{"entryPoint":9382,"id":2312,"parameterSlots":2,"returnSlots":0},"@_setTokenMetadata_5008":{"entryPoint":10989,"id":5008,"parameterSlots":2,"returnSlots":0},"@_supportsInterfaceInERC165Extension_658":{"entryPoint":8287,"id":658,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_3724":{"entryPoint":9186,"id":3724,"parameterSlots":1,"returnSlots":0},"@_transfer_5039":{"entryPoint":8815,"id":5039,"parameterSlots":5,"returnSlots":0},"@_values_4186":{"entryPoint":11966,"id":4186,"parameterSlots":1,"returnSlots":1},"@add_4208":{"entryPoint":12960,"id":4208,"parameterSlots":2,"returnSlots":1},"@add_4338":{"entryPoint":9488,"id":4338,"parameterSlots":2,"returnSlots":1},"@at_4434":{"entryPoint":13551,"id":4434,"parameterSlots":2,"returnSlots":1},"@authorizeOperator_2711":{"entryPoint":4222,"id":2711,"parameterSlots":3,"returnSlots":0},"@balanceOf_2338":{"entryPoint":3766,"id":2338,"parameterSlots":1,"returnSlots":1},"@batchCalls_2621":{"entryPoint":3386,"id":2621,"parameterSlots":2,"returnSlots":1},"@contains_4392":{"entryPoint":11810,"id":4392,"parameterSlots":2,"returnSlots":1},"@difficultyMetadataURIs_4630":{"entryPoint":3111,"id":4630,"parameterSlots":0,"returnSlots":0},"@generateMappingKey_955":{"entryPoint":11458,"id":955,"parameterSlots":2,"returnSlots":1},"@getDataBatchForTokenIds_2464":{"entryPoint":2603,"id":2464,"parameterSlots":2,"returnSlots":1},"@getDataBatch_111":{"entryPoint":7628,"id":111,"parameterSlots":1,"returnSlots":1},"@getDataForTokenId_2402":{"entryPoint":2573,"id":2402,"parameterSlots":2,"returnSlots":1},"@getData_64":{"entryPoint":3368,"id":64,"parameterSlots":1,"returnSlots":1},"@getOperatorsOf_2833":{"entryPoint":3066,"id":2833,"parameterSlots":1,"returnSlots":1},"@getTokenMetadata_5020":{"entryPoint":4826,"id":5020,"parameterSlots":1,"returnSlots":1},"@hasFirstPlaceNFT_4625":{"entryPoint":4885,"id":4625,"parameterSlots":0,"returnSlots":0},"@isOperatorFor_2812":{"entryPoint":3046,"id":2812,"parameterSlots":2,"returnSlots":1},"@length_4259":{"entryPoint":9039,"id":4259,"parameterSlots":1,"returnSlots":1},"@length_4407":{"entryPoint":13530,"id":4407,"parameterSlots":1,"returnSlots":1},"@notifyUniversalReceiver_522":{"entryPoint":12564,"id":522,"parameterSlots":3,"returnSlots":0},"@owner_3653":{"entryPoint":4844,"id":3653,"parameterSlots":0,"returnSlots":1},"@remove_4226":{"entryPoint":12880,"id":4226,"parameterSlots":2,"returnSlots":1},"@remove_4365":{"entryPoint":13341,"id":4365,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_3681":{"entryPoint":3846,"id":3681,"parameterSlots":0,"returnSlots":0},"@revokeOperator_2795":{"entryPoint":7163,"id":2795,"parameterSlots":4,"returnSlots":0},"@setDataBatchForTokenIds_2551":{"entryPoint":5092,"id":2551,"parameterSlots":3,"returnSlots":0},"@setDataBatch_163":{"entryPoint":4932,"id":163,"parameterSlots":2,"returnSlots":0},"@setDataForTokenId_2484":{"entryPoint":7139,"id":2484,"parameterSlots":3,"returnSlots":0},"@setData_136":{"entryPoint":4142,"id":136,"parameterSlots":2,"returnSlots":0},"@submitScore_4980":{"entryPoint":5351,"id":4980,"parameterSlots":3,"returnSlots":0},"@supportsERC165InterfaceUnchecked_3972":{"entryPoint":11619,"id":3972,"parameterSlots":2,"returnSlots":1},"@supportsInterface_2287":{"entryPoint":2460,"id":2287,"parameterSlots":1,"returnSlots":1},"@supportsInterface_268":{"entryPoint":11522,"id":268,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3778":{"entryPoint":13389,"id":3778,"parameterSlots":1,"returnSlots":1},"@supportsInterface_626":{"entryPoint":8190,"id":626,"parameterSlots":1,"returnSlots":1},"@tokenIdsOf_2385":{"entryPoint":5012,"id":2385,"parameterSlots":1,"returnSlots":1},"@tokenOwnerOf_2368":{"entryPoint":2867,"id":2368,"parameterSlots":1,"returnSlots":1},"@topScorers_4618":{"entryPoint":7936,"id":4618,"parameterSlots":0,"returnSlots":0},"@totalSupply_2322":{"entryPoint":2593,"id":2322,"parameterSlots":0,"returnSlots":1},"@transferBatch_2976":{"entryPoint":3866,"id":2976,"parameterSlots":5,"returnSlots":0},"@transferOwnership_3704":{"entryPoint":7805,"id":3704,"parameterSlots":1,"returnSlots":0},"@transfer_2896":{"entryPoint":3271,"id":2896,"parameterSlots":5,"returnSlots":0},"@values_4307":{"entryPoint":9794,"id":4307,"parameterSlots":1,"returnSlots":1},"@values_4464":{"entryPoint":8782,"id":4464,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":16661,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":16856,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":14800,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":17051,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":16141,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":22569,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":18366,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":15533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":16766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":16961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":14905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":16409,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":17186,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":16066,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":14342,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":14189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":16207,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":22635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_Difficulty_$4607":{"entryPoint":15858,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":18432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":18296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":16572,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_bytes32t_boolt_bytes_memory_ptr":{"entryPoint":16253,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bytes32":{"entryPoint":15554,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes32t_boolt_bytes_memory_ptr":{"entryPoint":18700,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr":{"entryPoint":17587,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_enum$_Difficulty_$4607":{"entryPoint":17698,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":17232,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":18831,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":14951,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":18106,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":17762,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":16495,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":15373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes32":{"entryPoint":14363,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_bytes32t_bytes_memory_ptr":{"entryPoint":18589,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":17495,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":14210,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":22681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_Difficulty_$4607":{"entryPoint":15879,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_enum$_Difficulty_$4607t_string_memory_ptr":{"entryPoint":18478,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":15677,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":17941,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":15189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":15662,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":15468,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":19084,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":15714,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":17978,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":15222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":14267,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack":{"entryPoint":22203,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack":{"entryPoint":22313,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack":{"entryPoint":22280,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":17926,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":19318,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":20275,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":18945,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":14021,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18998,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":15132,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":14480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Difficulty_$4607_to_t_uint8_nonPadded_inplace_fromStack":{"entryPoint":20242,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505_to_t_string_memory_ptr_fromStack":{"entryPoint":20087,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":20493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910_to_t_string_memory_ptr_fromStack":{"entryPoint":20880,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":20988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9_to_t_string_memory_ptr_fromStack":{"entryPoint":19932,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":22032,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack":{"entryPoint":13922,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":14581,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":19117,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_enum$_Difficulty_$4607_t_bytes32__to_t_address_t_uint8_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":20298,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed":{"entryPoint":22336,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":20757,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19611,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":19140,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19248,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19868,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":22067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":15483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21830,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes32__to_t_address_t_address_t_bytes32__fromStack_reversed":{"entryPoint":20359,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21768,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":19691,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed":{"entryPoint":19636,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":19732,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":18904,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15808,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":18072,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15339,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":14282,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":22101,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":19333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed":{"entryPoint":19456,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":22521,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":18960,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14066,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14537,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16009,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20122,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20528,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20915,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19967,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13957,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":14596,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":19512,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":14724,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":14102,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":16617,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":16812,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":14751,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":17007,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":16092,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":18317,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":15646,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":17910,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":15099,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":20560,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":21055,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":15618,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":17882,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":15071,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":14427,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":15924,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":15701,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":17965,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":15209,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":15629,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":17893,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":15082,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":15115,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":13896,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18987,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":15935,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19808,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":22754,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":21329,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":15450,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":14255,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes10":{"entryPoint":22149,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes2":{"entryPoint":22226,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes20":{"entryPoint":20576,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":14309,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":14122,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Difficulty_$4607":{"entryPoint":20174,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":15418,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":14571,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":21294,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20":{"entryPoint":20654,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":22418,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Difficulty_$4607_to_t_uint8":{"entryPoint":20193,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":21184,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":21470,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":13989,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14438,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":21727,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_32_ceil":{"entryPoint":21076,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":19407,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":21442,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":14675,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":21174,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":21920,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":19066,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes10":{"entryPoint":22193,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes2":{"entryPoint":22270,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes20":{"entryPoint":22303,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":20265,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":19048,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":19107,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint8":{"entryPoint":20224,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":21412,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":21680,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":19999,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":19360,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":22806,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":19271,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14628,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":21218,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes20":{"entryPoint":20620,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":22397,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":16404,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":14623,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":19502,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":19497,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":14795,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":19507,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":16087,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":14117,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":14112,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14004,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_248":{"entryPoint":20211,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":19035,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":20641,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":21399,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":21270,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505":{"entryPoint":20046,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":20414,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910":{"entryPoint":20801,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":20947,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9":{"entryPoint":19891,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863":{"entryPoint":21992,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c":{"entryPoint":13913,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":21092,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":21228,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_t_enum$_Difficulty_$4607":{"entryPoint":20154,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":15510,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":16043,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":14319,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":14166,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_Difficulty_$4607":{"entryPoint":15842,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":18273,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":21265,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:67863:27","statements":[{"body":{"nodeType":"YulBlock","src":"102:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"119:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"124:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"112:6:27"},"nodeType":"YulFunctionCall","src":"112:19:27"},"nodeType":"YulExpressionStatement","src":"112:19:27"},{"nodeType":"YulAssignment","src":"140:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"159:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"164:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"155:3:27"},"nodeType":"YulFunctionCall","src":"155:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"140:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"74:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"79:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"90:11:27","type":""}],"src":"7:168:27"},{"body":{"nodeType":"YulBlock","src":"287:108:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"309:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"305:3:27"},"nodeType":"YulFunctionCall","src":"305:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"321:66:27","type":"","value":"0x0000000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"298:6:27"},"nodeType":"YulFunctionCall","src":"298:90:27"},"nodeType":"YulExpressionStatement","src":"298:90:27"}]},"name":"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"279:6:27","type":""}],"src":"181:214:27"},{"body":{"nodeType":"YulBlock","src":"546:218:27","statements":[{"nodeType":"YulAssignment","src":"556:72:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"621:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"626:1:27","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"563:57:27"},"nodeType":"YulFunctionCall","src":"563:65:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"556:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"726:3:27"}],"functionName":{"name":"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","nodeType":"YulIdentifier","src":"637:88:27"},"nodeType":"YulFunctionCall","src":"637:93:27"},"nodeType":"YulExpressionStatement","src":"637:93:27"},{"nodeType":"YulAssignment","src":"739:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"750:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"755:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"746:3:27"},"nodeType":"YulFunctionCall","src":"746:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"739:3:27"}]}]},"name":"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"534:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"542:3:27","type":""}],"src":"401:363:27"},{"body":{"nodeType":"YulBlock","src":"940:247:27","statements":[{"nodeType":"YulAssignment","src":"950:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"962:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"973:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"958:3:27"},"nodeType":"YulFunctionCall","src":"958:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"950:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"997:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1008:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:27"},"nodeType":"YulFunctionCall","src":"993:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1016:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1022:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1012:3:27"},"nodeType":"YulFunctionCall","src":"1012:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"986:6:27"},"nodeType":"YulFunctionCall","src":"986:47:27"},"nodeType":"YulExpressionStatement","src":"986:47:27"},{"nodeType":"YulAssignment","src":"1042:138:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1175:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1050:123:27"},"nodeType":"YulFunctionCall","src":"1050:130:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1042:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"920:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"935:4:27","type":""}],"src":"770:417:27"},{"body":{"nodeType":"YulBlock","src":"1257:82:27","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1280:3:27"},{"name":"src","nodeType":"YulIdentifier","src":"1285:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1290:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1267:12:27"},"nodeType":"YulFunctionCall","src":"1267:30:27"},"nodeType":"YulExpressionStatement","src":"1267:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1317:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1322:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1313:3:27"},"nodeType":"YulFunctionCall","src":"1313:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1306:6:27"},"nodeType":"YulFunctionCall","src":"1306:27:27"},"nodeType":"YulExpressionStatement","src":"1306:27:27"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1239:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1244:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1249:6:27","type":""}],"src":"1193:146:27"},{"body":{"nodeType":"YulBlock","src":"1393:54:27","statements":[{"nodeType":"YulAssignment","src":"1403:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1421:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1428:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1417:3:27"},"nodeType":"YulFunctionCall","src":"1417:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1437:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1433:3:27"},"nodeType":"YulFunctionCall","src":"1433:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1413:3:27"},"nodeType":"YulFunctionCall","src":"1413:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1403:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1376:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1386:6:27","type":""}],"src":"1345:102:27"},{"body":{"nodeType":"YulBlock","src":"1575:214:27","statements":[{"nodeType":"YulAssignment","src":"1585:77:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1650:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1655:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1592:57:27"},"nodeType":"YulFunctionCall","src":"1592:70:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1585:3:27"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1709:5:27"},{"name":"pos","nodeType":"YulIdentifier","src":"1716:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1721:6:27"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1672:36:27"},"nodeType":"YulFunctionCall","src":"1672:56:27"},"nodeType":"YulExpressionStatement","src":"1672:56:27"},{"nodeType":"YulAssignment","src":"1737:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1748:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1775:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1753:21:27"},"nodeType":"YulFunctionCall","src":"1753:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1744:3:27"},"nodeType":"YulFunctionCall","src":"1744:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1737:3:27"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"1548:5:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1555:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1563:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1571:3:27","type":""}],"src":"1475:314:27"},{"body":{"nodeType":"YulBlock","src":"1921:203:27","statements":[{"nodeType":"YulAssignment","src":"1931:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1943:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1954:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1939:3:27"},"nodeType":"YulFunctionCall","src":"1939:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1931:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1978:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1989:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1974:3:27"},"nodeType":"YulFunctionCall","src":"1974:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1997:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2003:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1993:3:27"},"nodeType":"YulFunctionCall","src":"1993:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1967:6:27"},"nodeType":"YulFunctionCall","src":"1967:47:27"},"nodeType":"YulExpressionStatement","src":"1967:47:27"},{"nodeType":"YulAssignment","src":"2023:94:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2095:6:27"},{"name":"value1","nodeType":"YulIdentifier","src":"2103:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"2112:4:27"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2031:63:27"},"nodeType":"YulFunctionCall","src":"2031:86:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2023:4:27"}]}]},"name":"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1885:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1897:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1905:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1916:4:27","type":""}],"src":"1795:329:27"},{"body":{"nodeType":"YulBlock","src":"2170:35:27","statements":[{"nodeType":"YulAssignment","src":"2180:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2196:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2190:5:27"},"nodeType":"YulFunctionCall","src":"2190:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2180:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2163:6:27","type":""}],"src":"2130:75:27"},{"body":{"nodeType":"YulBlock","src":"2300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2310:6:27"},"nodeType":"YulFunctionCall","src":"2310:12:27"},"nodeType":"YulExpressionStatement","src":"2310:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2211:117:27"},{"body":{"nodeType":"YulBlock","src":"2423:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2440:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2443:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2433:6:27"},"nodeType":"YulFunctionCall","src":"2433:12:27"},"nodeType":"YulExpressionStatement","src":"2433:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2334:117:27"},{"body":{"nodeType":"YulBlock","src":"2501:105:27","statements":[{"nodeType":"YulAssignment","src":"2511:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2526:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2533:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2522:3:27"},"nodeType":"YulFunctionCall","src":"2522:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2511:7:27"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2483:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2493:7:27","type":""}],"src":"2457:149:27"},{"body":{"nodeType":"YulBlock","src":"2654:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"2710:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2719:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2722:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2712:6:27"},"nodeType":"YulFunctionCall","src":"2712:12:27"},"nodeType":"YulExpressionStatement","src":"2712:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2677:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2701:5:27"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2684:16:27"},"nodeType":"YulFunctionCall","src":"2684:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2674:2:27"},"nodeType":"YulFunctionCall","src":"2674:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2667:6:27"},"nodeType":"YulFunctionCall","src":"2667:42:27"},"nodeType":"YulIf","src":"2664:62:27"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2647:5:27","type":""}],"src":"2612:120:27"},{"body":{"nodeType":"YulBlock","src":"2789:86:27","statements":[{"nodeType":"YulAssignment","src":"2799:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2821:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2808:12:27"},"nodeType":"YulFunctionCall","src":"2808:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2799:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2863:5:27"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2837:25:27"},"nodeType":"YulFunctionCall","src":"2837:32:27"},"nodeType":"YulExpressionStatement","src":"2837:32:27"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2767:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2775:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2783:5:27","type":""}],"src":"2738:137:27"},{"body":{"nodeType":"YulBlock","src":"2946:262:27","statements":[{"body":{"nodeType":"YulBlock","src":"2992:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2994:77:27"},"nodeType":"YulFunctionCall","src":"2994:79:27"},"nodeType":"YulExpressionStatement","src":"2994:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2967:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2976:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2963:3:27"},"nodeType":"YulFunctionCall","src":"2963:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2988:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2959:3:27"},"nodeType":"YulFunctionCall","src":"2959:32:27"},"nodeType":"YulIf","src":"2956:119:27"},{"nodeType":"YulBlock","src":"3085:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3100:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3114:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3104:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3129:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3163:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3174:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3159:3:27"},"nodeType":"YulFunctionCall","src":"3159:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3183:7:27"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"3139:19:27"},"nodeType":"YulFunctionCall","src":"3139:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3129:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2916:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2927:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2939:6:27","type":""}],"src":"2881:327:27"},{"body":{"nodeType":"YulBlock","src":"3256:48:27","statements":[{"nodeType":"YulAssignment","src":"3266:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3291:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3284:6:27"},"nodeType":"YulFunctionCall","src":"3284:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3277:6:27"},"nodeType":"YulFunctionCall","src":"3277:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3266:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3238:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3248:7:27","type":""}],"src":"3214:90:27"},{"body":{"nodeType":"YulBlock","src":"3369:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3386:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3406:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3391:14:27"},"nodeType":"YulFunctionCall","src":"3391:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3379:6:27"},"nodeType":"YulFunctionCall","src":"3379:34:27"},"nodeType":"YulExpressionStatement","src":"3379:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3357:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3364:3:27","type":""}],"src":"3310:109:27"},{"body":{"nodeType":"YulBlock","src":"3517:118:27","statements":[{"nodeType":"YulAssignment","src":"3527:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3539:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3550:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3535:3:27"},"nodeType":"YulFunctionCall","src":"3535:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3527:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3601:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3614:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3625:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3610:3:27"},"nodeType":"YulFunctionCall","src":"3610:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3563:37:27"},"nodeType":"YulFunctionCall","src":"3563:65:27"},"nodeType":"YulExpressionStatement","src":"3563:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3489:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3501:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3512:4:27","type":""}],"src":"3425:210:27"},{"body":{"nodeType":"YulBlock","src":"3686:32:27","statements":[{"nodeType":"YulAssignment","src":"3696:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"3707:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3696:7:27"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3668:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3678:7:27","type":""}],"src":"3641:77:27"},{"body":{"nodeType":"YulBlock","src":"3767:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"3824:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3833:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3836:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3826:6:27"},"nodeType":"YulFunctionCall","src":"3826:12:27"},"nodeType":"YulExpressionStatement","src":"3826:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3790:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3797:17:27"},"nodeType":"YulFunctionCall","src":"3797:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3787:2:27"},"nodeType":"YulFunctionCall","src":"3787:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3780:6:27"},"nodeType":"YulFunctionCall","src":"3780:43:27"},"nodeType":"YulIf","src":"3777:63:27"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3760:5:27","type":""}],"src":"3724:122:27"},{"body":{"nodeType":"YulBlock","src":"3904:87:27","statements":[{"nodeType":"YulAssignment","src":"3914:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3936:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3923:12:27"},"nodeType":"YulFunctionCall","src":"3923:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3914:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3979:5:27"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"3952:26:27"},"nodeType":"YulFunctionCall","src":"3952:33:27"},"nodeType":"YulExpressionStatement","src":"3952:33:27"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3882:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"3890:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3898:5:27","type":""}],"src":"3852:139:27"},{"body":{"nodeType":"YulBlock","src":"4080:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"4126:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4128:77:27"},"nodeType":"YulFunctionCall","src":"4128:79:27"},"nodeType":"YulExpressionStatement","src":"4128:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4101:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4097:3:27"},"nodeType":"YulFunctionCall","src":"4097:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4122:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4093:3:27"},"nodeType":"YulFunctionCall","src":"4093:32:27"},"nodeType":"YulIf","src":"4090:119:27"},{"nodeType":"YulBlock","src":"4219:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4234:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4248:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4238:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4263:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4298:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4309:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4294:3:27"},"nodeType":"YulFunctionCall","src":"4294:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4318:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4273:20:27"},"nodeType":"YulFunctionCall","src":"4273:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4263:6:27"}]}]},{"nodeType":"YulBlock","src":"4346:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4361:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4375:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4365:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4391:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4426:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4437:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4422:3:27"},"nodeType":"YulFunctionCall","src":"4422:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4446:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4401:20:27"},"nodeType":"YulFunctionCall","src":"4401:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4391:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4042:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4053:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4065:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4073:6:27","type":""}],"src":"3997:474:27"},{"body":{"nodeType":"YulBlock","src":"4535:40:27","statements":[{"nodeType":"YulAssignment","src":"4546:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4562:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4556:5:27"},"nodeType":"YulFunctionCall","src":"4556:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4546:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4518:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4528:6:27","type":""}],"src":"4477:98:27"},{"body":{"nodeType":"YulBlock","src":"4643:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4653:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4662:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4657:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4722:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4747:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"4752:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4743:3:27"},"nodeType":"YulFunctionCall","src":"4743:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4766:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"4771:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4762:3:27"},"nodeType":"YulFunctionCall","src":"4762:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4756:5:27"},"nodeType":"YulFunctionCall","src":"4756:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4736:6:27"},"nodeType":"YulFunctionCall","src":"4736:39:27"},"nodeType":"YulExpressionStatement","src":"4736:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4683:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"4686:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4680:2:27"},"nodeType":"YulFunctionCall","src":"4680:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4694:19:27","statements":[{"nodeType":"YulAssignment","src":"4696:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4705:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"4708:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4701:3:27"},"nodeType":"YulFunctionCall","src":"4701:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4696:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"4676:3:27","statements":[]},"src":"4672:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4805:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"4810:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4801:3:27"},"nodeType":"YulFunctionCall","src":"4801:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"4819:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4794:6:27"},"nodeType":"YulFunctionCall","src":"4794:27:27"},"nodeType":"YulExpressionStatement","src":"4794:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4625:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4630:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"4635:6:27","type":""}],"src":"4581:246:27"},{"body":{"nodeType":"YulBlock","src":"4923:283:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4933:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4979:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4947:31:27"},"nodeType":"YulFunctionCall","src":"4947:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4937:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4994:77:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5059:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"5064:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5001:57:27"},"nodeType":"YulFunctionCall","src":"5001:70:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4994:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5119:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5126:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5115:3:27"},"nodeType":"YulFunctionCall","src":"5115:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"5133:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"5138:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5080:34:27"},"nodeType":"YulFunctionCall","src":"5080:65:27"},"nodeType":"YulExpressionStatement","src":"5080:65:27"},{"nodeType":"YulAssignment","src":"5154:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5165:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5192:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5170:21:27"},"nodeType":"YulFunctionCall","src":"5170:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5161:3:27"},"nodeType":"YulFunctionCall","src":"5161:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5154:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4904:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4911:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4919:3:27","type":""}],"src":"4833:373:27"},{"body":{"nodeType":"YulBlock","src":"5328:193:27","statements":[{"nodeType":"YulAssignment","src":"5338:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5350:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5361:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5346:3:27"},"nodeType":"YulFunctionCall","src":"5346:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5338:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5385:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5396:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5381:3:27"},"nodeType":"YulFunctionCall","src":"5381:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5404:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5410:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5400:3:27"},"nodeType":"YulFunctionCall","src":"5400:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5374:6:27"},"nodeType":"YulFunctionCall","src":"5374:47:27"},"nodeType":"YulExpressionStatement","src":"5374:47:27"},{"nodeType":"YulAssignment","src":"5430:84:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5500:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"5509:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5438:61:27"},"nodeType":"YulFunctionCall","src":"5438:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5430:4:27"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5300:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5312:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5323:4:27","type":""}],"src":"5212:309:27"},{"body":{"nodeType":"YulBlock","src":"5572:32:27","statements":[{"nodeType":"YulAssignment","src":"5582:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5593:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5582:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5554:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5564:7:27","type":""}],"src":"5527:77:27"},{"body":{"nodeType":"YulBlock","src":"5675:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5692:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5715:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5697:17:27"},"nodeType":"YulFunctionCall","src":"5697:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5685:6:27"},"nodeType":"YulFunctionCall","src":"5685:37:27"},"nodeType":"YulExpressionStatement","src":"5685:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5663:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5670:3:27","type":""}],"src":"5610:118:27"},{"body":{"nodeType":"YulBlock","src":"5832:124:27","statements":[{"nodeType":"YulAssignment","src":"5842:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5854:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5865:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5850:3:27"},"nodeType":"YulFunctionCall","src":"5850:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5842:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5922:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5935:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5946:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:27"},"nodeType":"YulFunctionCall","src":"5931:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5878:43:27"},"nodeType":"YulFunctionCall","src":"5878:71:27"},"nodeType":"YulExpressionStatement","src":"5878:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5804:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5816:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5827:4:27","type":""}],"src":"5734:222:27"},{"body":{"nodeType":"YulBlock","src":"6051:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6068:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6071:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6061:6:27"},"nodeType":"YulFunctionCall","src":"6061:12:27"},"nodeType":"YulExpressionStatement","src":"6061:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5962:117:27"},{"body":{"nodeType":"YulBlock","src":"6113:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6130:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6133:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6123:6:27"},"nodeType":"YulFunctionCall","src":"6123:88:27"},"nodeType":"YulExpressionStatement","src":"6123:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6227:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6230:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6220:6:27"},"nodeType":"YulFunctionCall","src":"6220:15:27"},"nodeType":"YulExpressionStatement","src":"6220:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6251:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6254:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6244:6:27"},"nodeType":"YulFunctionCall","src":"6244:15:27"},"nodeType":"YulExpressionStatement","src":"6244:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6085:180:27"},{"body":{"nodeType":"YulBlock","src":"6314:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6324:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6346:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6376:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6354:21:27"},"nodeType":"YulFunctionCall","src":"6354:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6342:3:27"},"nodeType":"YulFunctionCall","src":"6342:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6328:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6493:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6495:16:27"},"nodeType":"YulFunctionCall","src":"6495:18:27"},"nodeType":"YulExpressionStatement","src":"6495:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6436:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"6448:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6433:2:27"},"nodeType":"YulFunctionCall","src":"6433:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6472:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6484:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6469:2:27"},"nodeType":"YulFunctionCall","src":"6469:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6430:2:27"},"nodeType":"YulFunctionCall","src":"6430:62:27"},"nodeType":"YulIf","src":"6427:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6531:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6535:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6524:6:27"},"nodeType":"YulFunctionCall","src":"6524:22:27"},"nodeType":"YulExpressionStatement","src":"6524:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6300:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"6308:4:27","type":""}],"src":"6271:281:27"},{"body":{"nodeType":"YulBlock","src":"6599:88:27","statements":[{"nodeType":"YulAssignment","src":"6609:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6619:18:27"},"nodeType":"YulFunctionCall","src":"6619:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6609:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6668:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"6676:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6648:19:27"},"nodeType":"YulFunctionCall","src":"6648:33:27"},"nodeType":"YulExpressionStatement","src":"6648:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6583:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6592:6:27","type":""}],"src":"6558:129:27"},{"body":{"nodeType":"YulBlock","src":"6775:229:27","statements":[{"body":{"nodeType":"YulBlock","src":"6880:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6882:16:27"},"nodeType":"YulFunctionCall","src":"6882:18:27"},"nodeType":"YulExpressionStatement","src":"6882:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6852:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6860:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6849:2:27"},"nodeType":"YulFunctionCall","src":"6849:30:27"},"nodeType":"YulIf","src":"6846:56:27"},{"nodeType":"YulAssignment","src":"6912:25:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6924:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6932:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6920:3:27"},"nodeType":"YulFunctionCall","src":"6920:17:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6912:4:27"}]},{"nodeType":"YulAssignment","src":"6974:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6986:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"6992:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6982:3:27"},"nodeType":"YulFunctionCall","src":"6982:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6974:4:27"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6759:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6770:4:27","type":""}],"src":"6693:311:27"},{"body":{"nodeType":"YulBlock","src":"7099:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7116:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7119:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7109:6:27"},"nodeType":"YulFunctionCall","src":"7109:12:27"},"nodeType":"YulExpressionStatement","src":"7109:12:27"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7010:117:27"},{"body":{"nodeType":"YulBlock","src":"7252:608:27","statements":[{"nodeType":"YulAssignment","src":"7262:90:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7344:6:27"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7287:56:27"},"nodeType":"YulFunctionCall","src":"7287:64:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7271:15:27"},"nodeType":"YulFunctionCall","src":"7271:81:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7262:5:27"}]},{"nodeType":"YulVariableDeclaration","src":"7361:16:27","value":{"name":"array","nodeType":"YulIdentifier","src":"7372:5:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7365:3:27","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7394:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"7401:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7387:6:27"},"nodeType":"YulFunctionCall","src":"7387:21:27"},"nodeType":"YulExpressionStatement","src":"7387:21:27"},{"nodeType":"YulAssignment","src":"7417:23:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7428:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"7435:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7424:3:27"},"nodeType":"YulFunctionCall","src":"7424:16:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7417:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"7450:44:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7468:6:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7480:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7488:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7476:3:27"},"nodeType":"YulFunctionCall","src":"7476:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7464:3:27"},"nodeType":"YulFunctionCall","src":"7464:30:27"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7454:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7522:103:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7536:77:27"},"nodeType":"YulFunctionCall","src":"7536:79:27"},"nodeType":"YulExpressionStatement","src":"7536:79:27"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7509:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"7517:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7506:2:27"},"nodeType":"YulFunctionCall","src":"7506:15:27"},"nodeType":"YulIf","src":"7503:122:27"},{"body":{"nodeType":"YulBlock","src":"7710:144:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7725:21:27","value":{"name":"src","nodeType":"YulIdentifier","src":"7743:3:27"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7729:10:27","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7767:3:27"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7793:10:27"},{"name":"end","nodeType":"YulIdentifier","src":"7805:3:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7772:20:27"},"nodeType":"YulFunctionCall","src":"7772:37:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7760:6:27"},"nodeType":"YulFunctionCall","src":"7760:50:27"},"nodeType":"YulExpressionStatement","src":"7760:50:27"},{"nodeType":"YulAssignment","src":"7823:21:27","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7834:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7839:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7830:3:27"},"nodeType":"YulFunctionCall","src":"7830:14:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7823:3:27"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7663:3:27"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7668:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7660:2:27"},"nodeType":"YulFunctionCall","src":"7660:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7676:25:27","statements":[{"nodeType":"YulAssignment","src":"7678:21:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7689:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7694:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7685:3:27"},"nodeType":"YulFunctionCall","src":"7685:14:27"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7678:3:27"}]}]},"pre":{"nodeType":"YulBlock","src":"7638:21:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7640:17:27","value":{"name":"offset","nodeType":"YulIdentifier","src":"7651:6:27"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7644:3:27","type":""}]}]},"src":"7634:220:27"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7222:6:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"7230:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"7238:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7246:5:27","type":""}],"src":"7150:710:27"},{"body":{"nodeType":"YulBlock","src":"7960:293:27","statements":[{"body":{"nodeType":"YulBlock","src":"8009:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8011:77:27"},"nodeType":"YulFunctionCall","src":"8011:79:27"},"nodeType":"YulExpressionStatement","src":"8011:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7988:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7996:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7984:3:27"},"nodeType":"YulFunctionCall","src":"7984:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"8003:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7980:3:27"},"nodeType":"YulFunctionCall","src":"7980:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7973:6:27"},"nodeType":"YulFunctionCall","src":"7973:35:27"},"nodeType":"YulIf","src":"7970:122:27"},{"nodeType":"YulVariableDeclaration","src":"8101:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8128:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8115:12:27"},"nodeType":"YulFunctionCall","src":"8115:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8105:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8144:103:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8220:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8228:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8216:3:27"},"nodeType":"YulFunctionCall","src":"8216:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"8235:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"8243:3:27"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8153:62:27"},"nodeType":"YulFunctionCall","src":"8153:94:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8144:5:27"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7938:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"7946:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7954:5:27","type":""}],"src":"7883:370:27"},{"body":{"nodeType":"YulBlock","src":"8392:761:27","statements":[{"body":{"nodeType":"YulBlock","src":"8438:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8440:77:27"},"nodeType":"YulFunctionCall","src":"8440:79:27"},"nodeType":"YulExpressionStatement","src":"8440:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8413:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"8422:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8409:3:27"},"nodeType":"YulFunctionCall","src":"8409:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"8434:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8405:3:27"},"nodeType":"YulFunctionCall","src":"8405:32:27"},"nodeType":"YulIf","src":"8402:119:27"},{"nodeType":"YulBlock","src":"8531:302:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8546:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8577:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8588:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8573:3:27"},"nodeType":"YulFunctionCall","src":"8573:17:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8560:12:27"},"nodeType":"YulFunctionCall","src":"8560:31:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8550:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"8638:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8640:77:27"},"nodeType":"YulFunctionCall","src":"8640:79:27"},"nodeType":"YulExpressionStatement","src":"8640:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8610:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8618:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8607:2:27"},"nodeType":"YulFunctionCall","src":"8607:30:27"},"nodeType":"YulIf","src":"8604:117:27"},{"nodeType":"YulAssignment","src":"8735:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8795:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8806:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8791:3:27"},"nodeType":"YulFunctionCall","src":"8791:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8815:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8745:45:27"},"nodeType":"YulFunctionCall","src":"8745:78:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8735:6:27"}]}]},{"nodeType":"YulBlock","src":"8843:303:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8858:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8889:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8900:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8885:3:27"},"nodeType":"YulFunctionCall","src":"8885:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8872:12:27"},"nodeType":"YulFunctionCall","src":"8872:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8862:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"8951:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8953:77:27"},"nodeType":"YulFunctionCall","src":"8953:79:27"},"nodeType":"YulExpressionStatement","src":"8953:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8923:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8931:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8920:2:27"},"nodeType":"YulFunctionCall","src":"8920:30:27"},"nodeType":"YulIf","src":"8917:117:27"},{"nodeType":"YulAssignment","src":"9048:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9108:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9119:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9104:3:27"},"nodeType":"YulFunctionCall","src":"9104:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9128:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9058:45:27"},"nodeType":"YulFunctionCall","src":"9058:78:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9048:6:27"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8354:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8365:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8377:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8385:6:27","type":""}],"src":"8259:894:27"},{"body":{"nodeType":"YulBlock","src":"9242:40:27","statements":[{"nodeType":"YulAssignment","src":"9253:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9269:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9263:5:27"},"nodeType":"YulFunctionCall","src":"9263:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9253:6:27"}]}]},"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9225:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9235:6:27","type":""}],"src":"9159:123:27"},{"body":{"nodeType":"YulBlock","src":"9408:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9425:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"9430:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9418:6:27"},"nodeType":"YulFunctionCall","src":"9418:19:27"},"nodeType":"YulExpressionStatement","src":"9418:19:27"},{"nodeType":"YulAssignment","src":"9446:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9465:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9470:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9461:3:27"},"nodeType":"YulFunctionCall","src":"9461:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9446:11:27"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9380:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"9385:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9396:11:27","type":""}],"src":"9288:193:27"},{"body":{"nodeType":"YulBlock","src":"9568:60:27","statements":[{"nodeType":"YulAssignment","src":"9578:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9586:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9578:4:27"}]},{"nodeType":"YulAssignment","src":"9599:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9611:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9616:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9607:3:27"},"nodeType":"YulFunctionCall","src":"9607:14:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9599:4:27"}]}]},"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9555:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9563:4:27","type":""}],"src":"9487:141:27"},{"body":{"nodeType":"YulBlock","src":"9719:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9736:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"9741:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9729:6:27"},"nodeType":"YulFunctionCall","src":"9729:19:27"},"nodeType":"YulExpressionStatement","src":"9729:19:27"},{"nodeType":"YulAssignment","src":"9757:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9776:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9781:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9772:3:27"},"nodeType":"YulFunctionCall","src":"9772:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9757:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9691:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"9696:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9707:11:27","type":""}],"src":"9634:158:27"},{"body":{"nodeType":"YulBlock","src":"9878:273:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9888:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9934:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9902:31:27"},"nodeType":"YulFunctionCall","src":"9902:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9892:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9949:67:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10004:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"10009:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9956:47:27"},"nodeType":"YulFunctionCall","src":"9956:60:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9949:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10064:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"10071:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10060:3:27"},"nodeType":"YulFunctionCall","src":"10060:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"10078:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"10083:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10025:34:27"},"nodeType":"YulFunctionCall","src":"10025:65:27"},"nodeType":"YulExpressionStatement","src":"10025:65:27"},{"nodeType":"YulAssignment","src":"10099:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10110:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10137:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10115:21:27"},"nodeType":"YulFunctionCall","src":"10115:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10106:3:27"},"nodeType":"YulFunctionCall","src":"10106:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10099:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9859:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9866:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9874:3:27","type":""}],"src":"9798:353:27"},{"body":{"nodeType":"YulBlock","src":"10255:94:27","statements":[{"nodeType":"YulAssignment","src":"10265:78:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10331:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"10339:3:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10279:51:27"},"nodeType":"YulFunctionCall","src":"10279:64:27"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"10265:10:27"}]}]},"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"10228:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10236:3:27","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"10244:10:27","type":""}],"src":"10157:192:27"},{"body":{"nodeType":"YulBlock","src":"10439:38:27","statements":[{"nodeType":"YulAssignment","src":"10449:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10461:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10466:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10457:3:27"},"nodeType":"YulFunctionCall","src":"10457:14:27"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"10449:4:27"}]}]},"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10426:3:27","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"10434:4:27","type":""}],"src":"10355:122:27"},{"body":{"nodeType":"YulBlock","src":"10651:841:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10661:77:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10732:5:27"}],"functionName":{"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10675:56:27"},"nodeType":"YulFunctionCall","src":"10675:63:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10665:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10747:102:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10837:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"10842:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10754:82:27"},"nodeType":"YulFunctionCall","src":"10754:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10747:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"10858:20:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"10875:3:27"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"10862:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10887:39:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10903:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10912:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10920:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10908:3:27"},"nodeType":"YulFunctionCall","src":"10908:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10899:3:27"},"nodeType":"YulFunctionCall","src":"10899:27:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"10891:4:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10935:80:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11009:5:27"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10950:58:27"},"nodeType":"YulFunctionCall","src":"10950:65:27"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10939:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11024:21:27","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"11038:7:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11028:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"11114:333:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11135:3:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11144:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11150:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11140:3:27"},"nodeType":"YulFunctionCall","src":"11140:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11128:6:27"},"nodeType":"YulFunctionCall","src":"11128:33:27"},"nodeType":"YulExpressionStatement","src":"11128:33:27"},{"nodeType":"YulVariableDeclaration","src":"11174:34:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11201:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11195:5:27"},"nodeType":"YulFunctionCall","src":"11195:13:27"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"11178:13:27","type":""}]},{"nodeType":"YulAssignment","src":"11221:90:27","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"11291:13:27"},{"name":"tail","nodeType":"YulIdentifier","src":"11306:4:27"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11229:61:27"},"nodeType":"YulFunctionCall","src":"11229:82:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11221:4:27"}]},{"nodeType":"YulAssignment","src":"11324:79:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11396:6:27"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11334:61:27"},"nodeType":"YulFunctionCall","src":"11334:69:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11324:6:27"}]},{"nodeType":"YulAssignment","src":"11416:21:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11427:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11432:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11423:3:27"},"nodeType":"YulFunctionCall","src":"11423:14:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11416:3:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11076:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"11079:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11073:2:27"},"nodeType":"YulFunctionCall","src":"11073:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11087:18:27","statements":[{"nodeType":"YulAssignment","src":"11089:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11098:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"11101:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11094:3:27"},"nodeType":"YulFunctionCall","src":"11094:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11089:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"11058:14:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11060:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"11069:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11064:1:27","type":""}]}]},"src":"11054:393:27"},{"nodeType":"YulAssignment","src":"11456:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"11463:4:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11456:3:27"}]},{"nodeType":"YulAssignment","src":"11476:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"11483:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11476:3:27"}]}]},"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10630:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10637:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10646:3:27","type":""}],"src":"10509:983:27"},{"body":{"nodeType":"YulBlock","src":"11664:243:27","statements":[{"nodeType":"YulAssignment","src":"11674:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11686:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11697:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11682:3:27"},"nodeType":"YulFunctionCall","src":"11682:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11674:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11721:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11732:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11717:3:27"},"nodeType":"YulFunctionCall","src":"11717:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11740:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11746:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11736:3:27"},"nodeType":"YulFunctionCall","src":"11736:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11710:6:27"},"nodeType":"YulFunctionCall","src":"11710:47:27"},"nodeType":"YulExpressionStatement","src":"11710:47:27"},{"nodeType":"YulAssignment","src":"11766:134:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11886:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"11895:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11774:111:27"},"nodeType":"YulFunctionCall","src":"11774:126:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11766:4:27"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11636:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11648:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11659:4:27","type":""}],"src":"11498:409:27"},{"body":{"nodeType":"YulBlock","src":"11979:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"12025:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12027:77:27"},"nodeType":"YulFunctionCall","src":"12027:79:27"},"nodeType":"YulExpressionStatement","src":"12027:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12000:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12009:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11996:3:27"},"nodeType":"YulFunctionCall","src":"11996:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"12021:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11992:3:27"},"nodeType":"YulFunctionCall","src":"11992:32:27"},"nodeType":"YulIf","src":"11989:119:27"},{"nodeType":"YulBlock","src":"12118:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12133:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12147:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12137:6:27","type":""}]},{"nodeType":"YulAssignment","src":"12162:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12197:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"12208:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12193:3:27"},"nodeType":"YulFunctionCall","src":"12193:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12217:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12172:20:27"},"nodeType":"YulFunctionCall","src":"12172:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12162:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11949:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11960:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11972:6:27","type":""}],"src":"11913:329:27"},{"body":{"nodeType":"YulBlock","src":"12293:81:27","statements":[{"nodeType":"YulAssignment","src":"12303:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12318:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"12325:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12314:3:27"},"nodeType":"YulFunctionCall","src":"12314:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12303:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12275:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12285:7:27","type":""}],"src":"12248:126:27"},{"body":{"nodeType":"YulBlock","src":"12425:51:27","statements":[{"nodeType":"YulAssignment","src":"12435:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12464:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12446:17:27"},"nodeType":"YulFunctionCall","src":"12446:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12435:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12407:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12417:7:27","type":""}],"src":"12380:96:27"},{"body":{"nodeType":"YulBlock","src":"12547:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12564:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12587:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12569:17:27"},"nodeType":"YulFunctionCall","src":"12569:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12557:6:27"},"nodeType":"YulFunctionCall","src":"12557:37:27"},"nodeType":"YulExpressionStatement","src":"12557:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12535:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12542:3:27","type":""}],"src":"12482:118:27"},{"body":{"nodeType":"YulBlock","src":"12704:124:27","statements":[{"nodeType":"YulAssignment","src":"12714:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12726:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12737:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12722:3:27"},"nodeType":"YulFunctionCall","src":"12722:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12714:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12794:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12807:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12818:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12803:3:27"},"nodeType":"YulFunctionCall","src":"12803:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12750:43:27"},"nodeType":"YulFunctionCall","src":"12750:71:27"},"nodeType":"YulExpressionStatement","src":"12750:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12676:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12688:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12699:4:27","type":""}],"src":"12606:222:27"},{"body":{"nodeType":"YulBlock","src":"12877:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"12934:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12943:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12946:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12936:6:27"},"nodeType":"YulFunctionCall","src":"12936:12:27"},"nodeType":"YulExpressionStatement","src":"12936:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12900:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12925:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12907:17:27"},"nodeType":"YulFunctionCall","src":"12907:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12897:2:27"},"nodeType":"YulFunctionCall","src":"12897:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12890:6:27"},"nodeType":"YulFunctionCall","src":"12890:43:27"},"nodeType":"YulIf","src":"12887:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12870:5:27","type":""}],"src":"12834:122:27"},{"body":{"nodeType":"YulBlock","src":"13014:87:27","statements":[{"nodeType":"YulAssignment","src":"13024:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13046:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13033:12:27"},"nodeType":"YulFunctionCall","src":"13033:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13024:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13089:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"13062:26:27"},"nodeType":"YulFunctionCall","src":"13062:33:27"},"nodeType":"YulExpressionStatement","src":"13062:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12992:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"13000:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13008:5:27","type":""}],"src":"12962:139:27"},{"body":{"nodeType":"YulBlock","src":"13190:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"13236:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13238:77:27"},"nodeType":"YulFunctionCall","src":"13238:79:27"},"nodeType":"YulExpressionStatement","src":"13238:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13211:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13220:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13207:3:27"},"nodeType":"YulFunctionCall","src":"13207:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"13232:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13203:3:27"},"nodeType":"YulFunctionCall","src":"13203:32:27"},"nodeType":"YulIf","src":"13200:119:27"},{"nodeType":"YulBlock","src":"13329:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13344:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13358:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13348:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13373:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13408:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13419:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13404:3:27"},"nodeType":"YulFunctionCall","src":"13404:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13428:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13383:20:27"},"nodeType":"YulFunctionCall","src":"13383:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13373:6:27"}]}]},{"nodeType":"YulBlock","src":"13456:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13471:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13485:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13475:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13501:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13536:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13547:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13532:3:27"},"nodeType":"YulFunctionCall","src":"13532:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13556:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13511:20:27"},"nodeType":"YulFunctionCall","src":"13511:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13501:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13152:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13163:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13175:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13183:6:27","type":""}],"src":"13107:474:27"},{"body":{"nodeType":"YulBlock","src":"13661:40:27","statements":[{"nodeType":"YulAssignment","src":"13672:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13688:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13682:5:27"},"nodeType":"YulFunctionCall","src":"13682:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13672:6:27"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13644:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13654:6:27","type":""}],"src":"13587:114:27"},{"body":{"nodeType":"YulBlock","src":"13818:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13835:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"13840:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13828:6:27"},"nodeType":"YulFunctionCall","src":"13828:19:27"},"nodeType":"YulExpressionStatement","src":"13828:19:27"},{"nodeType":"YulAssignment","src":"13856:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13875:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13880:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13871:3:27"},"nodeType":"YulFunctionCall","src":"13871:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13856:11:27"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13790:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"13795:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13806:11:27","type":""}],"src":"13707:184:27"},{"body":{"nodeType":"YulBlock","src":"13969:60:27","statements":[{"nodeType":"YulAssignment","src":"13979:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"13987:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13979:4:27"}]},{"nodeType":"YulAssignment","src":"14000:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14012:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14017:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14008:3:27"},"nodeType":"YulFunctionCall","src":"14008:14:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14000:4:27"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13956:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13964:4:27","type":""}],"src":"13897:132:27"},{"body":{"nodeType":"YulBlock","src":"14090:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14107:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14130:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14112:17:27"},"nodeType":"YulFunctionCall","src":"14112:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14100:6:27"},"nodeType":"YulFunctionCall","src":"14100:37:27"},"nodeType":"YulExpressionStatement","src":"14100:37:27"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14078:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14085:3:27","type":""}],"src":"14035:108:27"},{"body":{"nodeType":"YulBlock","src":"14229:99:27","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14273:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"14281:3:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"14239:33:27"},"nodeType":"YulFunctionCall","src":"14239:46:27"},"nodeType":"YulExpressionStatement","src":"14239:46:27"},{"nodeType":"YulAssignment","src":"14294:28:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14312:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14317:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14308:3:27"},"nodeType":"YulFunctionCall","src":"14308:14:27"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"14294:10:27"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"14202:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14210:3:27","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"14218:10:27","type":""}],"src":"14149:179:27"},{"body":{"nodeType":"YulBlock","src":"14409:38:27","statements":[{"nodeType":"YulAssignment","src":"14419:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14431:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14436:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14427:3:27"},"nodeType":"YulFunctionCall","src":"14427:14:27"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14419:4:27"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14396:3:27","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14404:4:27","type":""}],"src":"14334:113:27"},{"body":{"nodeType":"YulBlock","src":"14607:608:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14617:68:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14679:5:27"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14631:47:27"},"nodeType":"YulFunctionCall","src":"14631:54:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14621:6:27","type":""}]},{"nodeType":"YulAssignment","src":"14694:93:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14775:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"14780:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14701:73:27"},"nodeType":"YulFunctionCall","src":"14701:86:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14694:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"14796:71:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14861:5:27"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14811:49:27"},"nodeType":"YulFunctionCall","src":"14811:56:27"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"14800:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14876:21:27","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"14890:7:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14880:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"14966:224:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14980:34:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15007:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15001:5:27"},"nodeType":"YulFunctionCall","src":"15001:13:27"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"14984:13:27","type":""}]},{"nodeType":"YulAssignment","src":"15027:70:27","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"15078:13:27"},{"name":"pos","nodeType":"YulIdentifier","src":"15093:3:27"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"15034:43:27"},"nodeType":"YulFunctionCall","src":"15034:63:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15027:3:27"}]},{"nodeType":"YulAssignment","src":"15110:70:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15173:6:27"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15120:52:27"},"nodeType":"YulFunctionCall","src":"15120:60:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15110:6:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14928:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"14931:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14925:2:27"},"nodeType":"YulFunctionCall","src":"14925:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14939:18:27","statements":[{"nodeType":"YulAssignment","src":"14941:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14950:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"14953:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14946:3:27"},"nodeType":"YulFunctionCall","src":"14946:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14941:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"14910:14:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14912:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14921:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14916:1:27","type":""}]}]},"src":"14906:284:27"},{"nodeType":"YulAssignment","src":"15199:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"15206:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15199:3:27"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14586:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14593:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14602:3:27","type":""}],"src":"14483:732:27"},{"body":{"nodeType":"YulBlock","src":"15369:225:27","statements":[{"nodeType":"YulAssignment","src":"15379:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15391:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15402:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15387:3:27"},"nodeType":"YulFunctionCall","src":"15387:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15379:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15426:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15437:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15422:3:27"},"nodeType":"YulFunctionCall","src":"15422:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15445:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"15451:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15441:3:27"},"nodeType":"YulFunctionCall","src":"15441:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15415:6:27"},"nodeType":"YulFunctionCall","src":"15415:47:27"},"nodeType":"YulExpressionStatement","src":"15415:47:27"},{"nodeType":"YulAssignment","src":"15471:116:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15573:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"15582:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15479:93:27"},"nodeType":"YulFunctionCall","src":"15479:108:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15471:4:27"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15341:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15353:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15364:4:27","type":""}],"src":"15221:373:27"},{"body":{"nodeType":"YulBlock","src":"15658:56:27","statements":[{"body":{"nodeType":"YulBlock","src":"15692:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15701:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15704:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15694:6:27"},"nodeType":"YulFunctionCall","src":"15694:12:27"},"nodeType":"YulExpressionStatement","src":"15694:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15681:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"15688:1:27","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15678:2:27"},"nodeType":"YulFunctionCall","src":"15678:12:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15671:6:27"},"nodeType":"YulFunctionCall","src":"15671:20:27"},"nodeType":"YulIf","src":"15668:40:27"}]},"name":"validator_revert_t_enum$_Difficulty_$4607","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15651:5:27","type":""}],"src":"15600:114:27"},{"body":{"nodeType":"YulBlock","src":"15787:102:27","statements":[{"nodeType":"YulAssignment","src":"15797:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15819:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15806:12:27"},"nodeType":"YulFunctionCall","src":"15806:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15797:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15877:5:27"}],"functionName":{"name":"validator_revert_t_enum$_Difficulty_$4607","nodeType":"YulIdentifier","src":"15835:41:27"},"nodeType":"YulFunctionCall","src":"15835:48:27"},"nodeType":"YulExpressionStatement","src":"15835:48:27"}]},"name":"abi_decode_t_enum$_Difficulty_$4607","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15765:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"15773:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15781:5:27","type":""}],"src":"15720:169:27"},{"body":{"nodeType":"YulBlock","src":"15976:278:27","statements":[{"body":{"nodeType":"YulBlock","src":"16022:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16024:77:27"},"nodeType":"YulFunctionCall","src":"16024:79:27"},"nodeType":"YulExpressionStatement","src":"16024:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15997:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"16006:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15993:3:27"},"nodeType":"YulFunctionCall","src":"15993:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"16018:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15989:3:27"},"nodeType":"YulFunctionCall","src":"15989:32:27"},"nodeType":"YulIf","src":"15986:119:27"},{"nodeType":"YulBlock","src":"16115:132:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16130:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"16144:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16134:6:27","type":""}]},{"nodeType":"YulAssignment","src":"16159:78:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16209:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"16220:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16205:3:27"},"nodeType":"YulFunctionCall","src":"16205:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16229:7:27"}],"functionName":{"name":"abi_decode_t_enum$_Difficulty_$4607","nodeType":"YulIdentifier","src":"16169:35:27"},"nodeType":"YulFunctionCall","src":"16169:68:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16159:6:27"}]}]}]},"name":"abi_decode_tuple_t_enum$_Difficulty_$4607","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15946:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15957:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15969:6:27","type":""}],"src":"15895:359:27"},{"body":{"nodeType":"YulBlock","src":"16319:40:27","statements":[{"nodeType":"YulAssignment","src":"16330:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16346:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16340:5:27"},"nodeType":"YulFunctionCall","src":"16340:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16330:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16302:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16312:6:27","type":""}],"src":"16260:99:27"},{"body":{"nodeType":"YulBlock","src":"16461:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16478:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"16483:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16471:6:27"},"nodeType":"YulFunctionCall","src":"16471:19:27"},"nodeType":"YulExpressionStatement","src":"16471:19:27"},{"nodeType":"YulAssignment","src":"16499:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16518:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16523:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16514:3:27"},"nodeType":"YulFunctionCall","src":"16514:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16499:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16433:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"16438:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16449:11:27","type":""}],"src":"16365:169:27"},{"body":{"nodeType":"YulBlock","src":"16632:285:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16642:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16689:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16656:32:27"},"nodeType":"YulFunctionCall","src":"16656:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16646:6:27","type":""}]},{"nodeType":"YulAssignment","src":"16704:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16770:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"16775:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16711:58:27"},"nodeType":"YulFunctionCall","src":"16711:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16704:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16830:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"16837:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16826:3:27"},"nodeType":"YulFunctionCall","src":"16826:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"16844:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"16849:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16791:34:27"},"nodeType":"YulFunctionCall","src":"16791:65:27"},"nodeType":"YulExpressionStatement","src":"16791:65:27"},{"nodeType":"YulAssignment","src":"16865:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16876:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16903:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16881:21:27"},"nodeType":"YulFunctionCall","src":"16881:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16872:3:27"},"nodeType":"YulFunctionCall","src":"16872:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16865:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16613:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16620:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16628:3:27","type":""}],"src":"16540:377:27"},{"body":{"nodeType":"YulBlock","src":"17041:195:27","statements":[{"nodeType":"YulAssignment","src":"17051:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17063:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17074:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17059:3:27"},"nodeType":"YulFunctionCall","src":"17059:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17051:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17098:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17109:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17094:3:27"},"nodeType":"YulFunctionCall","src":"17094:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17117:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"17123:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17113:3:27"},"nodeType":"YulFunctionCall","src":"17113:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17087:6:27"},"nodeType":"YulFunctionCall","src":"17087:47:27"},"nodeType":"YulExpressionStatement","src":"17087:47:27"},{"nodeType":"YulAssignment","src":"17143:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17215:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"17224:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17151:63:27"},"nodeType":"YulFunctionCall","src":"17151:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17143:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17013:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17025:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17036:4:27","type":""}],"src":"16923:313:27"},{"body":{"nodeType":"YulBlock","src":"17282:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"17336:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17345:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17348:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17338:6:27"},"nodeType":"YulFunctionCall","src":"17338:12:27"},"nodeType":"YulExpressionStatement","src":"17338:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17305:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17327:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"17312:14:27"},"nodeType":"YulFunctionCall","src":"17312:21:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17302:2:27"},"nodeType":"YulFunctionCall","src":"17302:32:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17295:6:27"},"nodeType":"YulFunctionCall","src":"17295:40:27"},"nodeType":"YulIf","src":"17292:60:27"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17275:5:27","type":""}],"src":"17242:116:27"},{"body":{"nodeType":"YulBlock","src":"17413:84:27","statements":[{"nodeType":"YulAssignment","src":"17423:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17445:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17432:12:27"},"nodeType":"YulFunctionCall","src":"17432:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17423:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17485:5:27"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"17461:23:27"},"nodeType":"YulFunctionCall","src":"17461:30:27"},"nodeType":"YulExpressionStatement","src":"17461:30:27"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17391:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"17399:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17407:5:27","type":""}],"src":"17364:133:27"},{"body":{"nodeType":"YulBlock","src":"17592:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17609:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17612:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17602:6:27"},"nodeType":"YulFunctionCall","src":"17602:12:27"},"nodeType":"YulExpressionStatement","src":"17602:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"17503:117:27"},{"body":{"nodeType":"YulBlock","src":"17692:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"17797:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"17799:16:27"},"nodeType":"YulFunctionCall","src":"17799:18:27"},"nodeType":"YulExpressionStatement","src":"17799:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17769:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17777:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17766:2:27"},"nodeType":"YulFunctionCall","src":"17766:30:27"},"nodeType":"YulIf","src":"17763:56:27"},{"nodeType":"YulAssignment","src":"17829:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17859:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17837:21:27"},"nodeType":"YulFunctionCall","src":"17837:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17829:4:27"}]},{"nodeType":"YulAssignment","src":"17903:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"17915:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"17921:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17911:3:27"},"nodeType":"YulFunctionCall","src":"17911:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17903:4:27"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"17676:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"17687:4:27","type":""}],"src":"17626:307:27"},{"body":{"nodeType":"YulBlock","src":"18022:340:27","statements":[{"nodeType":"YulAssignment","src":"18032:74:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18098:6:27"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"18057:40:27"},"nodeType":"YulFunctionCall","src":"18057:48:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"18041:15:27"},"nodeType":"YulFunctionCall","src":"18041:65:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"18032:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18122:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"18129:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18115:6:27"},"nodeType":"YulFunctionCall","src":"18115:21:27"},"nodeType":"YulExpressionStatement","src":"18115:21:27"},{"nodeType":"YulVariableDeclaration","src":"18145:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18160:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"18167:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18156:3:27"},"nodeType":"YulFunctionCall","src":"18156:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"18149:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"18210:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"18212:77:27"},"nodeType":"YulFunctionCall","src":"18212:79:27"},"nodeType":"YulExpressionStatement","src":"18212:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18191:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"18196:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18187:3:27"},"nodeType":"YulFunctionCall","src":"18187:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"18205:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18184:2:27"},"nodeType":"YulFunctionCall","src":"18184:25:27"},"nodeType":"YulIf","src":"18181:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18339:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"18344:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"18349:6:27"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"18302:36:27"},"nodeType":"YulFunctionCall","src":"18302:54:27"},"nodeType":"YulExpressionStatement","src":"18302:54:27"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17995:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"18000:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"18008:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"18016:5:27","type":""}],"src":"17939:423:27"},{"body":{"nodeType":"YulBlock","src":"18442:277:27","statements":[{"body":{"nodeType":"YulBlock","src":"18491:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"18493:77:27"},"nodeType":"YulFunctionCall","src":"18493:79:27"},"nodeType":"YulExpressionStatement","src":"18493:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18470:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"18478:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18466:3:27"},"nodeType":"YulFunctionCall","src":"18466:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"18485:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18462:3:27"},"nodeType":"YulFunctionCall","src":"18462:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18455:6:27"},"nodeType":"YulFunctionCall","src":"18455:35:27"},"nodeType":"YulIf","src":"18452:122:27"},{"nodeType":"YulVariableDeclaration","src":"18583:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18610:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18597:12:27"},"nodeType":"YulFunctionCall","src":"18597:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18587:6:27","type":""}]},{"nodeType":"YulAssignment","src":"18626:87:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18686:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"18694:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18682:3:27"},"nodeType":"YulFunctionCall","src":"18682:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"18701:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"18709:3:27"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"18635:46:27"},"nodeType":"YulFunctionCall","src":"18635:78:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"18626:5:27"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18420:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"18428:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"18436:5:27","type":""}],"src":"18381:338:27"},{"body":{"nodeType":"YulBlock","src":"18865:943:27","statements":[{"body":{"nodeType":"YulBlock","src":"18912:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18914:77:27"},"nodeType":"YulFunctionCall","src":"18914:79:27"},"nodeType":"YulExpressionStatement","src":"18914:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18886:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"18895:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18882:3:27"},"nodeType":"YulFunctionCall","src":"18882:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"18907:3:27","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18878:3:27"},"nodeType":"YulFunctionCall","src":"18878:33:27"},"nodeType":"YulIf","src":"18875:120:27"},{"nodeType":"YulBlock","src":"19005:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19020:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19034:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19024:6:27","type":""}]},{"nodeType":"YulAssignment","src":"19049:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19084:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"19095:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19080:3:27"},"nodeType":"YulFunctionCall","src":"19080:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19104:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19059:20:27"},"nodeType":"YulFunctionCall","src":"19059:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19049:6:27"}]}]},{"nodeType":"YulBlock","src":"19132:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19147:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19161:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19151:6:27","type":""}]},{"nodeType":"YulAssignment","src":"19177:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19212:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"19223:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19208:3:27"},"nodeType":"YulFunctionCall","src":"19208:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19232:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19187:20:27"},"nodeType":"YulFunctionCall","src":"19187:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19177:6:27"}]}]},{"nodeType":"YulBlock","src":"19260:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19275:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19289:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19279:6:27","type":""}]},{"nodeType":"YulAssignment","src":"19305:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19340:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"19351:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19336:3:27"},"nodeType":"YulFunctionCall","src":"19336:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19360:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"19315:20:27"},"nodeType":"YulFunctionCall","src":"19315:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19305:6:27"}]}]},{"nodeType":"YulBlock","src":"19388:115:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19403:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19417:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19407:6:27","type":""}]},{"nodeType":"YulAssignment","src":"19433:60:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19465:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"19476:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19461:3:27"},"nodeType":"YulFunctionCall","src":"19461:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19485:7:27"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"19443:17:27"},"nodeType":"YulFunctionCall","src":"19443:50:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"19433:6:27"}]}]},{"nodeType":"YulBlock","src":"19513:288:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19528:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19559:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19570:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19555:3:27"},"nodeType":"YulFunctionCall","src":"19555:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19542:12:27"},"nodeType":"YulFunctionCall","src":"19542:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19532:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"19622:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19624:77:27"},"nodeType":"YulFunctionCall","src":"19624:79:27"},"nodeType":"YulExpressionStatement","src":"19624:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19594:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19602:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19591:2:27"},"nodeType":"YulFunctionCall","src":"19591:30:27"},"nodeType":"YulIf","src":"19588:117:27"},{"nodeType":"YulAssignment","src":"19719:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19763:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"19774:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19759:3:27"},"nodeType":"YulFunctionCall","src":"19759:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19783:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"19729:29:27"},"nodeType":"YulFunctionCall","src":"19729:62:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"19719:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes32t_boolt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18803:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18814:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18826:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18834:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18842:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18850:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18858:6:27","type":""}],"src":"18725:1083:27"},{"body":{"nodeType":"YulBlock","src":"19903:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19920:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19923:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19913:6:27"},"nodeType":"YulFunctionCall","src":"19913:12:27"},"nodeType":"YulExpressionStatement","src":"19913:12:27"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"19814:117:27"},{"body":{"nodeType":"YulBlock","src":"20053:478:27","statements":[{"body":{"nodeType":"YulBlock","src":"20102:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"20104:77:27"},"nodeType":"YulFunctionCall","src":"20104:79:27"},"nodeType":"YulExpressionStatement","src":"20104:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20081:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20089:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20077:3:27"},"nodeType":"YulFunctionCall","src":"20077:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"20096:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20073:3:27"},"nodeType":"YulFunctionCall","src":"20073:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20066:6:27"},"nodeType":"YulFunctionCall","src":"20066:35:27"},"nodeType":"YulIf","src":"20063:122:27"},{"nodeType":"YulAssignment","src":"20194:30:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20217:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20204:12:27"},"nodeType":"YulFunctionCall","src":"20204:20:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20194:6:27"}]},{"body":{"nodeType":"YulBlock","src":"20267:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"20269:77:27"},"nodeType":"YulFunctionCall","src":"20269:79:27"},"nodeType":"YulExpressionStatement","src":"20269:79:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20239:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20247:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20236:2:27"},"nodeType":"YulFunctionCall","src":"20236:30:27"},"nodeType":"YulIf","src":"20233:117:27"},{"nodeType":"YulAssignment","src":"20359:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20375:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20383:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20371:3:27"},"nodeType":"YulFunctionCall","src":"20371:17:27"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"20359:8:27"}]},{"body":{"nodeType":"YulBlock","src":"20442:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"20444:77:27"},"nodeType":"YulFunctionCall","src":"20444:79:27"},"nodeType":"YulExpressionStatement","src":"20444:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"20407:8:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20421:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20429:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20417:3:27"},"nodeType":"YulFunctionCall","src":"20417:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20403:3:27"},"nodeType":"YulFunctionCall","src":"20403:32:27"},{"name":"end","nodeType":"YulIdentifier","src":"20437:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20400:2:27"},"nodeType":"YulFunctionCall","src":"20400:41:27"},"nodeType":"YulIf","src":"20397:128:27"}]},"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20020:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"20028:3:27","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"20036:8:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"20046:6:27","type":""}],"src":"19952:579:27"},{"body":{"nodeType":"YulBlock","src":"20649:469:27","statements":[{"body":{"nodeType":"YulBlock","src":"20695:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20697:77:27"},"nodeType":"YulFunctionCall","src":"20697:79:27"},"nodeType":"YulExpressionStatement","src":"20697:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20670:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"20679:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20666:3:27"},"nodeType":"YulFunctionCall","src":"20666:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"20691:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20662:3:27"},"nodeType":"YulFunctionCall","src":"20662:32:27"},"nodeType":"YulIf","src":"20659:119:27"},{"nodeType":"YulBlock","src":"20788:323:27","statements":[{"nodeType":"YulVariableDeclaration","src":"20803:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20834:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20845:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20830:3:27"},"nodeType":"YulFunctionCall","src":"20830:17:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20817:12:27"},"nodeType":"YulFunctionCall","src":"20817:31:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20807:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"20895:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20897:77:27"},"nodeType":"YulFunctionCall","src":"20897:79:27"},"nodeType":"YulExpressionStatement","src":"20897:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20867:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20875:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20864:2:27"},"nodeType":"YulFunctionCall","src":"20864:30:27"},"nodeType":"YulIf","src":"20861:117:27"},{"nodeType":"YulAssignment","src":"20992:109:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21073:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"21084:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21069:3:27"},"nodeType":"YulFunctionCall","src":"21069:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21093:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"21010:58:27"},"nodeType":"YulFunctionCall","src":"21010:91:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20992:6:27"},{"name":"value1","nodeType":"YulIdentifier","src":"21000:6:27"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20611:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20622:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20634:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20642:6:27","type":""}],"src":"20537:581:27"},{"body":{"nodeType":"YulBlock","src":"21190:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"21236:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21238:77:27"},"nodeType":"YulFunctionCall","src":"21238:79:27"},"nodeType":"YulExpressionStatement","src":"21238:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21211:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"21220:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21207:3:27"},"nodeType":"YulFunctionCall","src":"21207:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"21232:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21203:3:27"},"nodeType":"YulFunctionCall","src":"21203:32:27"},"nodeType":"YulIf","src":"21200:119:27"},{"nodeType":"YulBlock","src":"21329:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"21344:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"21358:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21348:6:27","type":""}]},{"nodeType":"YulAssignment","src":"21373:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21408:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"21419:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21404:3:27"},"nodeType":"YulFunctionCall","src":"21404:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21428:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21383:20:27"},"nodeType":"YulFunctionCall","src":"21383:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21373:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21160:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21171:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21183:6:27","type":""}],"src":"21124:329:27"},{"body":{"nodeType":"YulBlock","src":"21541:229:27","statements":[{"body":{"nodeType":"YulBlock","src":"21646:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21648:16:27"},"nodeType":"YulFunctionCall","src":"21648:18:27"},"nodeType":"YulExpressionStatement","src":"21648:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21618:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21626:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21615:2:27"},"nodeType":"YulFunctionCall","src":"21615:30:27"},"nodeType":"YulIf","src":"21612:56:27"},{"nodeType":"YulAssignment","src":"21678:25:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21690:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21698:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21686:3:27"},"nodeType":"YulFunctionCall","src":"21686:17:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"21678:4:27"}]},{"nodeType":"YulAssignment","src":"21740:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"21752:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"21758:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21748:3:27"},"nodeType":"YulFunctionCall","src":"21748:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"21740:4:27"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"21525:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"21536:4:27","type":""}],"src":"21459:311:27"},{"body":{"nodeType":"YulBlock","src":"21895:608:27","statements":[{"nodeType":"YulAssignment","src":"21905:90:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21987:6:27"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21930:56:27"},"nodeType":"YulFunctionCall","src":"21930:64:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"21914:15:27"},"nodeType":"YulFunctionCall","src":"21914:81:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"21905:5:27"}]},{"nodeType":"YulVariableDeclaration","src":"22004:16:27","value":{"name":"array","nodeType":"YulIdentifier","src":"22015:5:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"22008:3:27","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"22037:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"22044:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22030:6:27"},"nodeType":"YulFunctionCall","src":"22030:21:27"},"nodeType":"YulExpressionStatement","src":"22030:21:27"},{"nodeType":"YulAssignment","src":"22060:23:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"22071:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"22078:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22067:3:27"},"nodeType":"YulFunctionCall","src":"22067:16:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"22060:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"22093:44:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22111:6:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22123:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22131:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22119:3:27"},"nodeType":"YulFunctionCall","src":"22119:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22107:3:27"},"nodeType":"YulFunctionCall","src":"22107:30:27"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"22097:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"22165:103:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"22179:77:27"},"nodeType":"YulFunctionCall","src":"22179:79:27"},"nodeType":"YulExpressionStatement","src":"22179:79:27"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"22152:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"22160:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22149:2:27"},"nodeType":"YulFunctionCall","src":"22149:15:27"},"nodeType":"YulIf","src":"22146:122:27"},{"body":{"nodeType":"YulBlock","src":"22353:144:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22368:21:27","value":{"name":"src","nodeType":"YulIdentifier","src":"22386:3:27"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"22372:10:27","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22410:3:27"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"22436:10:27"},{"name":"end","nodeType":"YulIdentifier","src":"22448:3:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"22415:20:27"},"nodeType":"YulFunctionCall","src":"22415:37:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22403:6:27"},"nodeType":"YulFunctionCall","src":"22403:50:27"},"nodeType":"YulExpressionStatement","src":"22403:50:27"},{"nodeType":"YulAssignment","src":"22466:21:27","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22477:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22482:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22473:3:27"},"nodeType":"YulFunctionCall","src":"22473:14:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"22466:3:27"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22306:3:27"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"22311:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22303:2:27"},"nodeType":"YulFunctionCall","src":"22303:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22319:25:27","statements":[{"nodeType":"YulAssignment","src":"22321:21:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22332:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22337:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22328:3:27"},"nodeType":"YulFunctionCall","src":"22328:14:27"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"22321:3:27"}]}]},"pre":{"nodeType":"YulBlock","src":"22281:21:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22283:17:27","value":{"name":"offset","nodeType":"YulIdentifier","src":"22294:6:27"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"22287:3:27","type":""}]}]},"src":"22277:220:27"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21865:6:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"21873:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"21881:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"21889:5:27","type":""}],"src":"21793:710:27"},{"body":{"nodeType":"YulBlock","src":"22603:293:27","statements":[{"body":{"nodeType":"YulBlock","src":"22652:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"22654:77:27"},"nodeType":"YulFunctionCall","src":"22654:79:27"},"nodeType":"YulExpressionStatement","src":"22654:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22631:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22639:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22627:3:27"},"nodeType":"YulFunctionCall","src":"22627:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"22646:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22623:3:27"},"nodeType":"YulFunctionCall","src":"22623:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22616:6:27"},"nodeType":"YulFunctionCall","src":"22616:35:27"},"nodeType":"YulIf","src":"22613:122:27"},{"nodeType":"YulVariableDeclaration","src":"22744:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22771:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22758:12:27"},"nodeType":"YulFunctionCall","src":"22758:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22748:6:27","type":""}]},{"nodeType":"YulAssignment","src":"22787:103:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22863:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22871:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22859:3:27"},"nodeType":"YulFunctionCall","src":"22859:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"22878:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"22886:3:27"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22796:62:27"},"nodeType":"YulFunctionCall","src":"22796:94:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"22787:5:27"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22581:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"22589:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"22597:5:27","type":""}],"src":"22526:370:27"},{"body":{"nodeType":"YulBlock","src":"22981:229:27","statements":[{"body":{"nodeType":"YulBlock","src":"23086:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"23088:16:27"},"nodeType":"YulFunctionCall","src":"23088:18:27"},"nodeType":"YulExpressionStatement","src":"23088:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23058:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23066:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23055:2:27"},"nodeType":"YulFunctionCall","src":"23055:30:27"},"nodeType":"YulIf","src":"23052:56:27"},{"nodeType":"YulAssignment","src":"23118:25:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23130:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23138:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23126:3:27"},"nodeType":"YulFunctionCall","src":"23126:17:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"23118:4:27"}]},{"nodeType":"YulAssignment","src":"23180:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"23192:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"23198:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23188:3:27"},"nodeType":"YulFunctionCall","src":"23188:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"23180:4:27"}]}]},"name":"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"22965:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"22976:4:27","type":""}],"src":"22902:308:27"},{"body":{"nodeType":"YulBlock","src":"23329:602:27","statements":[{"nodeType":"YulAssignment","src":"23339:87:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23418:6:27"}],"functionName":{"name":"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"23364:53:27"},"nodeType":"YulFunctionCall","src":"23364:61:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"23348:15:27"},"nodeType":"YulFunctionCall","src":"23348:78:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"23339:5:27"}]},{"nodeType":"YulVariableDeclaration","src":"23435:16:27","value":{"name":"array","nodeType":"YulIdentifier","src":"23446:5:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"23439:3:27","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23468:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"23475:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23461:6:27"},"nodeType":"YulFunctionCall","src":"23461:21:27"},"nodeType":"YulExpressionStatement","src":"23461:21:27"},{"nodeType":"YulAssignment","src":"23491:23:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23502:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"23509:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23498:3:27"},"nodeType":"YulFunctionCall","src":"23498:16:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"23491:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"23524:44:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23542:6:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23554:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23562:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23550:3:27"},"nodeType":"YulFunctionCall","src":"23550:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23538:3:27"},"nodeType":"YulFunctionCall","src":"23538:30:27"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"23528:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"23596:103:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"23610:77:27"},"nodeType":"YulFunctionCall","src":"23610:79:27"},"nodeType":"YulExpressionStatement","src":"23610:79:27"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"23583:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"23591:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23580:2:27"},"nodeType":"YulFunctionCall","src":"23580:15:27"},"nodeType":"YulIf","src":"23577:122:27"},{"body":{"nodeType":"YulBlock","src":"23784:141:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23799:21:27","value":{"name":"src","nodeType":"YulIdentifier","src":"23817:3:27"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"23803:10:27","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23841:3:27"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"23864:10:27"},{"name":"end","nodeType":"YulIdentifier","src":"23876:3:27"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"23846:17:27"},"nodeType":"YulFunctionCall","src":"23846:34:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23834:6:27"},"nodeType":"YulFunctionCall","src":"23834:47:27"},"nodeType":"YulExpressionStatement","src":"23834:47:27"},{"nodeType":"YulAssignment","src":"23894:21:27","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23905:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23910:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23901:3:27"},"nodeType":"YulFunctionCall","src":"23901:14:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"23894:3:27"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23737:3:27"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"23742:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23734:2:27"},"nodeType":"YulFunctionCall","src":"23734:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23750:25:27","statements":[{"nodeType":"YulAssignment","src":"23752:21:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23763:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23768:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23759:3:27"},"nodeType":"YulFunctionCall","src":"23759:14:27"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"23752:3:27"}]}]},"pre":{"nodeType":"YulBlock","src":"23712:21:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23714:17:27","value":{"name":"offset","nodeType":"YulIdentifier","src":"23725:6:27"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"23718:3:27","type":""}]}]},"src":"23708:217:27"}]},"name":"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23299:6:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"23307:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"23315:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"23323:5:27","type":""}],"src":"23230:701:27"},{"body":{"nodeType":"YulBlock","src":"24025:290:27","statements":[{"body":{"nodeType":"YulBlock","src":"24074:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"24076:77:27"},"nodeType":"YulFunctionCall","src":"24076:79:27"},"nodeType":"YulExpressionStatement","src":"24076:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24053:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"24061:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24049:3:27"},"nodeType":"YulFunctionCall","src":"24049:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"24068:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24045:3:27"},"nodeType":"YulFunctionCall","src":"24045:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24038:6:27"},"nodeType":"YulFunctionCall","src":"24038:35:27"},"nodeType":"YulIf","src":"24035:122:27"},{"nodeType":"YulVariableDeclaration","src":"24166:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24193:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24180:12:27"},"nodeType":"YulFunctionCall","src":"24180:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24170:6:27","type":""}]},{"nodeType":"YulAssignment","src":"24209:100:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24282:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"24290:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24278:3:27"},"nodeType":"YulFunctionCall","src":"24278:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"24297:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"24305:3:27"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"24218:59:27"},"nodeType":"YulFunctionCall","src":"24218:91:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"24209:5:27"}]}]},"name":"abi_decode_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24003:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"24011:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"24019:5:27","type":""}],"src":"23951:364:27"},{"body":{"nodeType":"YulBlock","src":"24412:229:27","statements":[{"body":{"nodeType":"YulBlock","src":"24517:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"24519:16:27"},"nodeType":"YulFunctionCall","src":"24519:18:27"},"nodeType":"YulExpressionStatement","src":"24519:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24489:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"24497:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24486:2:27"},"nodeType":"YulFunctionCall","src":"24486:30:27"},"nodeType":"YulIf","src":"24483:56:27"},{"nodeType":"YulAssignment","src":"24549:25:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24561:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"24569:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24557:3:27"},"nodeType":"YulFunctionCall","src":"24557:17:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"24549:4:27"}]},{"nodeType":"YulAssignment","src":"24611:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"24623:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"24629:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24619:3:27"},"nodeType":"YulFunctionCall","src":"24619:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"24611:4:27"}]}]},"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"24396:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"24407:4:27","type":""}],"src":"24321:320:27"},{"body":{"nodeType":"YulBlock","src":"24773:831:27","statements":[{"nodeType":"YulAssignment","src":"24783:99:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24874:6:27"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"24808:65:27"},"nodeType":"YulFunctionCall","src":"24808:73:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"24792:15:27"},"nodeType":"YulFunctionCall","src":"24792:90:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"24783:5:27"}]},{"nodeType":"YulVariableDeclaration","src":"24891:16:27","value":{"name":"array","nodeType":"YulIdentifier","src":"24902:5:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"24895:3:27","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"24924:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"24931:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24917:6:27"},"nodeType":"YulFunctionCall","src":"24917:21:27"},"nodeType":"YulExpressionStatement","src":"24917:21:27"},{"nodeType":"YulAssignment","src":"24947:23:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"24958:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"24965:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24954:3:27"},"nodeType":"YulFunctionCall","src":"24954:16:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"24947:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"24980:44:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24998:6:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25010:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25018:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25006:3:27"},"nodeType":"YulFunctionCall","src":"25006:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24994:3:27"},"nodeType":"YulFunctionCall","src":"24994:30:27"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"24984:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"25052:103:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"25066:77:27"},"nodeType":"YulFunctionCall","src":"25066:79:27"},"nodeType":"YulExpressionStatement","src":"25066:79:27"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"25039:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"25047:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25036:2:27"},"nodeType":"YulFunctionCall","src":"25036:15:27"},"nodeType":"YulIf","src":"25033:122:27"},{"body":{"nodeType":"YulBlock","src":"25240:358:27","statements":[{"nodeType":"YulVariableDeclaration","src":"25255:36:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25287:3:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25274:12:27"},"nodeType":"YulFunctionCall","src":"25274:17:27"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"25259:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"25343:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"25345:77:27"},"nodeType":"YulFunctionCall","src":"25345:79:27"},"nodeType":"YulExpressionStatement","src":"25345:79:27"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"25310:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"25323:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25307:2:27"},"nodeType":"YulFunctionCall","src":"25307:35:27"},"nodeType":"YulIf","src":"25304:122:27"},{"nodeType":"YulVariableDeclaration","src":"25439:42:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25461:6:27"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"25469:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25457:3:27"},"nodeType":"YulFunctionCall","src":"25457:24:27"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"25443:10:27","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25502:3:27"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"25537:10:27"},{"name":"end","nodeType":"YulIdentifier","src":"25549:3:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"25507:29:27"},"nodeType":"YulFunctionCall","src":"25507:46:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25495:6:27"},"nodeType":"YulFunctionCall","src":"25495:59:27"},"nodeType":"YulExpressionStatement","src":"25495:59:27"},{"nodeType":"YulAssignment","src":"25567:21:27","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25578:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"25583:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25574:3:27"},"nodeType":"YulFunctionCall","src":"25574:14:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"25567:3:27"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25193:3:27"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"25198:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25190:2:27"},"nodeType":"YulFunctionCall","src":"25190:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25206:25:27","statements":[{"nodeType":"YulAssignment","src":"25208:21:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25219:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"25224:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25215:3:27"},"nodeType":"YulFunctionCall","src":"25215:14:27"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"25208:3:27"}]}]},"pre":{"nodeType":"YulBlock","src":"25168:21:27","statements":[{"nodeType":"YulVariableDeclaration","src":"25170:17:27","value":{"name":"offset","nodeType":"YulIdentifier","src":"25181:6:27"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"25174:3:27","type":""}]}]},"src":"25164:434:27"}]},"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24743:6:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"24751:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"24759:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"24767:5:27","type":""}],"src":"24662:942:27"},{"body":{"nodeType":"YulBlock","src":"25711:302:27","statements":[{"body":{"nodeType":"YulBlock","src":"25760:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"25762:77:27"},"nodeType":"YulFunctionCall","src":"25762:79:27"},"nodeType":"YulExpressionStatement","src":"25762:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25739:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25747:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25735:3:27"},"nodeType":"YulFunctionCall","src":"25735:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"25754:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25731:3:27"},"nodeType":"YulFunctionCall","src":"25731:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25724:6:27"},"nodeType":"YulFunctionCall","src":"25724:35:27"},"nodeType":"YulIf","src":"25721:122:27"},{"nodeType":"YulVariableDeclaration","src":"25852:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25879:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25866:12:27"},"nodeType":"YulFunctionCall","src":"25866:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25856:6:27","type":""}]},{"nodeType":"YulAssignment","src":"25895:112:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25980:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25988:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25976:3:27"},"nodeType":"YulFunctionCall","src":"25976:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"25995:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"26003:3:27"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25904:71:27"},"nodeType":"YulFunctionCall","src":"25904:103:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"25895:5:27"}]}]},"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25689:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"25697:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"25705:5:27","type":""}],"src":"25625:388:27"},{"body":{"nodeType":"YulBlock","src":"26284:1708:27","statements":[{"body":{"nodeType":"YulBlock","src":"26331:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26333:77:27"},"nodeType":"YulFunctionCall","src":"26333:79:27"},"nodeType":"YulExpressionStatement","src":"26333:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26305:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"26314:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26301:3:27"},"nodeType":"YulFunctionCall","src":"26301:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"26326:3:27","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26297:3:27"},"nodeType":"YulFunctionCall","src":"26297:33:27"},"nodeType":"YulIf","src":"26294:120:27"},{"nodeType":"YulBlock","src":"26424:302:27","statements":[{"nodeType":"YulVariableDeclaration","src":"26439:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26470:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26481:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26466:3:27"},"nodeType":"YulFunctionCall","src":"26466:17:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26453:12:27"},"nodeType":"YulFunctionCall","src":"26453:31:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26443:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"26531:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26533:77:27"},"nodeType":"YulFunctionCall","src":"26533:79:27"},"nodeType":"YulExpressionStatement","src":"26533:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26503:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"26511:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26500:2:27"},"nodeType":"YulFunctionCall","src":"26500:30:27"},"nodeType":"YulIf","src":"26497:117:27"},{"nodeType":"YulAssignment","src":"26628:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26688:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"26699:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26684:3:27"},"nodeType":"YulFunctionCall","src":"26684:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26708:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"26638:45:27"},"nodeType":"YulFunctionCall","src":"26638:78:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26628:6:27"}]}]},{"nodeType":"YulBlock","src":"26736:303:27","statements":[{"nodeType":"YulVariableDeclaration","src":"26751:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26782:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26793:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26778:3:27"},"nodeType":"YulFunctionCall","src":"26778:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26765:12:27"},"nodeType":"YulFunctionCall","src":"26765:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26755:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"26844:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26846:77:27"},"nodeType":"YulFunctionCall","src":"26846:79:27"},"nodeType":"YulExpressionStatement","src":"26846:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26816:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"26824:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26813:2:27"},"nodeType":"YulFunctionCall","src":"26813:30:27"},"nodeType":"YulIf","src":"26810:117:27"},{"nodeType":"YulAssignment","src":"26941:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27001:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"27012:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26997:3:27"},"nodeType":"YulFunctionCall","src":"26997:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27021:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"26951:45:27"},"nodeType":"YulFunctionCall","src":"26951:78:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"26941:6:27"}]}]},{"nodeType":"YulBlock","src":"27049:303:27","statements":[{"nodeType":"YulVariableDeclaration","src":"27064:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27095:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27106:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27091:3:27"},"nodeType":"YulFunctionCall","src":"27091:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27078:12:27"},"nodeType":"YulFunctionCall","src":"27078:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27068:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"27157:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27159:77:27"},"nodeType":"YulFunctionCall","src":"27159:79:27"},"nodeType":"YulExpressionStatement","src":"27159:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27129:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27137:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27126:2:27"},"nodeType":"YulFunctionCall","src":"27126:30:27"},"nodeType":"YulIf","src":"27123:117:27"},{"nodeType":"YulAssignment","src":"27254:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27314:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"27325:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27310:3:27"},"nodeType":"YulFunctionCall","src":"27310:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27334:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"27264:45:27"},"nodeType":"YulFunctionCall","src":"27264:78:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"27254:6:27"}]}]},{"nodeType":"YulBlock","src":"27362:300:27","statements":[{"nodeType":"YulVariableDeclaration","src":"27377:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27408:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27419:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27404:3:27"},"nodeType":"YulFunctionCall","src":"27404:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27391:12:27"},"nodeType":"YulFunctionCall","src":"27391:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27381:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"27470:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27472:77:27"},"nodeType":"YulFunctionCall","src":"27472:79:27"},"nodeType":"YulExpressionStatement","src":"27472:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27442:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27450:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27439:2:27"},"nodeType":"YulFunctionCall","src":"27439:30:27"},"nodeType":"YulIf","src":"27436:117:27"},{"nodeType":"YulAssignment","src":"27567:85:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27624:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"27635:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27620:3:27"},"nodeType":"YulFunctionCall","src":"27620:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27644:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"27577:42:27"},"nodeType":"YulFunctionCall","src":"27577:75:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"27567:6:27"}]}]},{"nodeType":"YulBlock","src":"27672:313:27","statements":[{"nodeType":"YulVariableDeclaration","src":"27687:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27718:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27729:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27714:3:27"},"nodeType":"YulFunctionCall","src":"27714:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27701:12:27"},"nodeType":"YulFunctionCall","src":"27701:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27691:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"27781:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27783:77:27"},"nodeType":"YulFunctionCall","src":"27783:79:27"},"nodeType":"YulExpressionStatement","src":"27783:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27753:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27761:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27750:2:27"},"nodeType":"YulFunctionCall","src":"27750:30:27"},"nodeType":"YulIf","src":"27747:117:27"},{"nodeType":"YulAssignment","src":"27878:97:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27947:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"27958:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27943:3:27"},"nodeType":"YulFunctionCall","src":"27943:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27967:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"27888:54:27"},"nodeType":"YulFunctionCall","src":"27888:87:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"27878:6:27"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26222:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26233:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26245:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26253:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26261:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26269:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"26277:6:27","type":""}],"src":"26019:1973:27"},{"body":{"nodeType":"YulBlock","src":"28090:560:27","statements":[{"body":{"nodeType":"YulBlock","src":"28136:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28138:77:27"},"nodeType":"YulFunctionCall","src":"28138:79:27"},"nodeType":"YulExpressionStatement","src":"28138:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28111:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"28120:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28107:3:27"},"nodeType":"YulFunctionCall","src":"28107:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"28132:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28103:3:27"},"nodeType":"YulFunctionCall","src":"28103:32:27"},"nodeType":"YulIf","src":"28100:119:27"},{"nodeType":"YulBlock","src":"28229:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"28244:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"28258:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28248:6:27","type":""}]},{"nodeType":"YulAssignment","src":"28273:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28308:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"28319:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28304:3:27"},"nodeType":"YulFunctionCall","src":"28304:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28328:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"28283:20:27"},"nodeType":"YulFunctionCall","src":"28283:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28273:6:27"}]}]},{"nodeType":"YulBlock","src":"28356:287:27","statements":[{"nodeType":"YulVariableDeclaration","src":"28371:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28402:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28413:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28398:3:27"},"nodeType":"YulFunctionCall","src":"28398:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28385:12:27"},"nodeType":"YulFunctionCall","src":"28385:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28375:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"28464:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"28466:77:27"},"nodeType":"YulFunctionCall","src":"28466:79:27"},"nodeType":"YulExpressionStatement","src":"28466:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28436:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"28444:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28433:2:27"},"nodeType":"YulFunctionCall","src":"28433:30:27"},"nodeType":"YulIf","src":"28430:117:27"},{"nodeType":"YulAssignment","src":"28561:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28605:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"28616:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28601:3:27"},"nodeType":"YulFunctionCall","src":"28601:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28625:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"28571:29:27"},"nodeType":"YulFunctionCall","src":"28571:62:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"28561:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28052:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28063:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28075:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28083:6:27","type":""}],"src":"27998:652:27"},{"body":{"nodeType":"YulBlock","src":"28765:688:27","statements":[{"body":{"nodeType":"YulBlock","src":"28811:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28813:77:27"},"nodeType":"YulFunctionCall","src":"28813:79:27"},"nodeType":"YulExpressionStatement","src":"28813:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28786:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"28795:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28782:3:27"},"nodeType":"YulFunctionCall","src":"28782:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"28807:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28778:3:27"},"nodeType":"YulFunctionCall","src":"28778:32:27"},"nodeType":"YulIf","src":"28775:119:27"},{"nodeType":"YulBlock","src":"28904:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"28919:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"28933:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28923:6:27","type":""}]},{"nodeType":"YulAssignment","src":"28948:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28983:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"28994:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28979:3:27"},"nodeType":"YulFunctionCall","src":"28979:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29003:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"28958:20:27"},"nodeType":"YulFunctionCall","src":"28958:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28948:6:27"}]}]},{"nodeType":"YulBlock","src":"29031:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"29046:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"29060:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29050:6:27","type":""}]},{"nodeType":"YulAssignment","src":"29076:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29111:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"29122:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29107:3:27"},"nodeType":"YulFunctionCall","src":"29107:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29131:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"29086:20:27"},"nodeType":"YulFunctionCall","src":"29086:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"29076:6:27"}]}]},{"nodeType":"YulBlock","src":"29159:287:27","statements":[{"nodeType":"YulVariableDeclaration","src":"29174:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29205:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29216:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29201:3:27"},"nodeType":"YulFunctionCall","src":"29201:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29188:12:27"},"nodeType":"YulFunctionCall","src":"29188:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29178:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"29267:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"29269:77:27"},"nodeType":"YulFunctionCall","src":"29269:79:27"},"nodeType":"YulExpressionStatement","src":"29269:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29239:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"29247:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29236:2:27"},"nodeType":"YulFunctionCall","src":"29236:30:27"},"nodeType":"YulIf","src":"29233:117:27"},{"nodeType":"YulAssignment","src":"29364:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29408:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"29419:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29404:3:27"},"nodeType":"YulFunctionCall","src":"29404:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29428:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"29374:29:27"},"nodeType":"YulFunctionCall","src":"29374:62:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"29364:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28719:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28730:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28742:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28750:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28758:6:27","type":""}],"src":"28656:797:27"},{"body":{"nodeType":"YulBlock","src":"29557:406:27","statements":[{"body":{"nodeType":"YulBlock","src":"29603:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"29605:77:27"},"nodeType":"YulFunctionCall","src":"29605:79:27"},"nodeType":"YulExpressionStatement","src":"29605:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"29578:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"29587:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29574:3:27"},"nodeType":"YulFunctionCall","src":"29574:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"29599:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"29570:3:27"},"nodeType":"YulFunctionCall","src":"29570:32:27"},"nodeType":"YulIf","src":"29567:119:27"},{"nodeType":"YulBlock","src":"29696:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"29711:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"29725:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29715:6:27","type":""}]},{"nodeType":"YulAssignment","src":"29740:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29775:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"29786:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29771:3:27"},"nodeType":"YulFunctionCall","src":"29771:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29795:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"29750:20:27"},"nodeType":"YulFunctionCall","src":"29750:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"29740:6:27"}]}]},{"nodeType":"YulBlock","src":"29823:133:27","statements":[{"nodeType":"YulVariableDeclaration","src":"29838:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"29852:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29842:6:27","type":""}]},{"nodeType":"YulAssignment","src":"29868:78:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29918:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"29929:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29914:3:27"},"nodeType":"YulFunctionCall","src":"29914:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29938:7:27"}],"functionName":{"name":"abi_decode_t_enum$_Difficulty_$4607","nodeType":"YulIdentifier","src":"29878:35:27"},"nodeType":"YulFunctionCall","src":"29878:68:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"29868:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_enum$_Difficulty_$4607","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29519:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"29530:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"29542:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29550:6:27","type":""}],"src":"29459:504:27"},{"body":{"nodeType":"YulBlock","src":"30111:770:27","statements":[{"body":{"nodeType":"YulBlock","src":"30157:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"30159:77:27"},"nodeType":"YulFunctionCall","src":"30159:79:27"},"nodeType":"YulExpressionStatement","src":"30159:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"30132:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"30141:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30128:3:27"},"nodeType":"YulFunctionCall","src":"30128:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"30153:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30124:3:27"},"nodeType":"YulFunctionCall","src":"30124:32:27"},"nodeType":"YulIf","src":"30121:119:27"},{"nodeType":"YulBlock","src":"30250:302:27","statements":[{"nodeType":"YulVariableDeclaration","src":"30265:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30296:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30307:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30292:3:27"},"nodeType":"YulFunctionCall","src":"30292:17:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30279:12:27"},"nodeType":"YulFunctionCall","src":"30279:31:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30269:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"30357:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"30359:77:27"},"nodeType":"YulFunctionCall","src":"30359:79:27"},"nodeType":"YulExpressionStatement","src":"30359:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30329:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"30337:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30326:2:27"},"nodeType":"YulFunctionCall","src":"30326:30:27"},"nodeType":"YulIf","src":"30323:117:27"},{"nodeType":"YulAssignment","src":"30454:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30514:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"30525:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30510:3:27"},"nodeType":"YulFunctionCall","src":"30510:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30534:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"30464:45:27"},"nodeType":"YulFunctionCall","src":"30464:78:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"30454:6:27"}]}]},{"nodeType":"YulBlock","src":"30562:312:27","statements":[{"nodeType":"YulVariableDeclaration","src":"30577:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30608:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30619:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30604:3:27"},"nodeType":"YulFunctionCall","src":"30604:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30591:12:27"},"nodeType":"YulFunctionCall","src":"30591:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30581:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"30670:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"30672:77:27"},"nodeType":"YulFunctionCall","src":"30672:79:27"},"nodeType":"YulExpressionStatement","src":"30672:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30642:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"30650:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30639:2:27"},"nodeType":"YulFunctionCall","src":"30639:30:27"},"nodeType":"YulIf","src":"30636:117:27"},{"nodeType":"YulAssignment","src":"30767:97:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30836:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"30847:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30832:3:27"},"nodeType":"YulFunctionCall","src":"30832:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30856:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"30777:54:27"},"nodeType":"YulFunctionCall","src":"30777:87:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"30767:6:27"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30073:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"30084:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"30096:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30104:6:27","type":""}],"src":"29969:912:27"},{"body":{"nodeType":"YulBlock","src":"30961:40:27","statements":[{"nodeType":"YulAssignment","src":"30972:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30988:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30982:5:27"},"nodeType":"YulFunctionCall","src":"30982:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"30972:6:27"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30944:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"30954:6:27","type":""}],"src":"30887:114:27"},{"body":{"nodeType":"YulBlock","src":"31118:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31135:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"31140:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31128:6:27"},"nodeType":"YulFunctionCall","src":"31128:19:27"},"nodeType":"YulExpressionStatement","src":"31128:19:27"},{"nodeType":"YulAssignment","src":"31156:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31175:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"31180:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31171:3:27"},"nodeType":"YulFunctionCall","src":"31171:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"31156:11:27"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31090:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"31095:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"31106:11:27","type":""}],"src":"31007:184:27"},{"body":{"nodeType":"YulBlock","src":"31269:60:27","statements":[{"nodeType":"YulAssignment","src":"31279:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"31287:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31279:4:27"}]},{"nodeType":"YulAssignment","src":"31300:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31312:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"31317:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31308:3:27"},"nodeType":"YulFunctionCall","src":"31308:14:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31300:4:27"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"31256:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"31264:4:27","type":""}],"src":"31197:132:27"},{"body":{"nodeType":"YulBlock","src":"31390:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31407:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31430:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"31412:17:27"},"nodeType":"YulFunctionCall","src":"31412:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31400:6:27"},"nodeType":"YulFunctionCall","src":"31400:37:27"},"nodeType":"YulExpressionStatement","src":"31400:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31378:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31385:3:27","type":""}],"src":"31335:108:27"},{"body":{"nodeType":"YulBlock","src":"31529:99:27","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31573:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"31581:3:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"31539:33:27"},"nodeType":"YulFunctionCall","src":"31539:46:27"},"nodeType":"YulExpressionStatement","src":"31539:46:27"},{"nodeType":"YulAssignment","src":"31594:28:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31612:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"31617:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31608:3:27"},"nodeType":"YulFunctionCall","src":"31608:14:27"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"31594:10:27"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"31502:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31510:3:27","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"31518:10:27","type":""}],"src":"31449:179:27"},{"body":{"nodeType":"YulBlock","src":"31709:38:27","statements":[{"nodeType":"YulAssignment","src":"31719:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31731:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"31736:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31727:3:27"},"nodeType":"YulFunctionCall","src":"31727:14:27"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"31719:4:27"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"31696:3:27","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"31704:4:27","type":""}],"src":"31634:113:27"},{"body":{"nodeType":"YulBlock","src":"31907:608:27","statements":[{"nodeType":"YulVariableDeclaration","src":"31917:68:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31979:5:27"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31931:47:27"},"nodeType":"YulFunctionCall","src":"31931:54:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"31921:6:27","type":""}]},{"nodeType":"YulAssignment","src":"31994:93:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32075:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"32080:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32001:73:27"},"nodeType":"YulFunctionCall","src":"32001:86:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31994:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"32096:71:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32161:5:27"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"32111:49:27"},"nodeType":"YulFunctionCall","src":"32111:56:27"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"32100:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32176:21:27","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"32190:7:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"32180:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"32266:224:27","statements":[{"nodeType":"YulVariableDeclaration","src":"32280:34:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"32307:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32301:5:27"},"nodeType":"YulFunctionCall","src":"32301:13:27"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"32284:13:27","type":""}]},{"nodeType":"YulAssignment","src":"32327:70:27","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"32378:13:27"},{"name":"pos","nodeType":"YulIdentifier","src":"32393:3:27"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"32334:43:27"},"nodeType":"YulFunctionCall","src":"32334:63:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32327:3:27"}]},{"nodeType":"YulAssignment","src":"32410:70:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"32473:6:27"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"32420:52:27"},"nodeType":"YulFunctionCall","src":"32420:60:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"32410:6:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"32228:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"32231:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32225:2:27"},"nodeType":"YulFunctionCall","src":"32225:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"32239:18:27","statements":[{"nodeType":"YulAssignment","src":"32241:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"32250:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"32253:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32246:3:27"},"nodeType":"YulFunctionCall","src":"32246:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"32241:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"32210:14:27","statements":[{"nodeType":"YulVariableDeclaration","src":"32212:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"32221:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"32216:1:27","type":""}]}]},"src":"32206:284:27"},{"nodeType":"YulAssignment","src":"32499:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"32506:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32499:3:27"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31886:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31893:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31902:3:27","type":""}],"src":"31783:732:27"},{"body":{"nodeType":"YulBlock","src":"32669:225:27","statements":[{"nodeType":"YulAssignment","src":"32679:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32691:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32702:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32687:3:27"},"nodeType":"YulFunctionCall","src":"32687:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32679:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32726:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32737:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32722:3:27"},"nodeType":"YulFunctionCall","src":"32722:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32745:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"32751:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32741:3:27"},"nodeType":"YulFunctionCall","src":"32741:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32715:6:27"},"nodeType":"YulFunctionCall","src":"32715:47:27"},"nodeType":"YulExpressionStatement","src":"32715:47:27"},{"nodeType":"YulAssignment","src":"32771:116:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32873:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"32882:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32779:93:27"},"nodeType":"YulFunctionCall","src":"32779:108:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32771:4:27"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32641:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32653:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32664:4:27","type":""}],"src":"32521:373:27"},{"body":{"nodeType":"YulBlock","src":"33084:1083:27","statements":[{"body":{"nodeType":"YulBlock","src":"33130:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33132:77:27"},"nodeType":"YulFunctionCall","src":"33132:79:27"},"nodeType":"YulExpressionStatement","src":"33132:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33105:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"33114:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33101:3:27"},"nodeType":"YulFunctionCall","src":"33101:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"33126:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33097:3:27"},"nodeType":"YulFunctionCall","src":"33097:32:27"},"nodeType":"YulIf","src":"33094:119:27"},{"nodeType":"YulBlock","src":"33223:302:27","statements":[{"nodeType":"YulVariableDeclaration","src":"33238:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33269:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33280:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33265:3:27"},"nodeType":"YulFunctionCall","src":"33265:17:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"33252:12:27"},"nodeType":"YulFunctionCall","src":"33252:31:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33242:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"33330:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"33332:77:27"},"nodeType":"YulFunctionCall","src":"33332:79:27"},"nodeType":"YulExpressionStatement","src":"33332:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33302:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"33310:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33299:2:27"},"nodeType":"YulFunctionCall","src":"33299:30:27"},"nodeType":"YulIf","src":"33296:117:27"},{"nodeType":"YulAssignment","src":"33427:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33487:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"33498:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33483:3:27"},"nodeType":"YulFunctionCall","src":"33483:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33507:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"33437:45:27"},"nodeType":"YulFunctionCall","src":"33437:78:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33427:6:27"}]}]},{"nodeType":"YulBlock","src":"33535:303:27","statements":[{"nodeType":"YulVariableDeclaration","src":"33550:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33581:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33592:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33577:3:27"},"nodeType":"YulFunctionCall","src":"33577:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"33564:12:27"},"nodeType":"YulFunctionCall","src":"33564:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33554:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"33643:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"33645:77:27"},"nodeType":"YulFunctionCall","src":"33645:79:27"},"nodeType":"YulExpressionStatement","src":"33645:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33615:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"33623:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33612:2:27"},"nodeType":"YulFunctionCall","src":"33612:30:27"},"nodeType":"YulIf","src":"33609:117:27"},{"nodeType":"YulAssignment","src":"33740:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33800:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"33811:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33796:3:27"},"nodeType":"YulFunctionCall","src":"33796:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33820:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"33750:45:27"},"nodeType":"YulFunctionCall","src":"33750:78:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"33740:6:27"}]}]},{"nodeType":"YulBlock","src":"33848:312:27","statements":[{"nodeType":"YulVariableDeclaration","src":"33863:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33894:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33905:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33890:3:27"},"nodeType":"YulFunctionCall","src":"33890:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"33877:12:27"},"nodeType":"YulFunctionCall","src":"33877:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33867:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"33956:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"33958:77:27"},"nodeType":"YulFunctionCall","src":"33958:79:27"},"nodeType":"YulExpressionStatement","src":"33958:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33928:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"33936:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33925:2:27"},"nodeType":"YulFunctionCall","src":"33925:30:27"},"nodeType":"YulIf","src":"33922:117:27"},{"nodeType":"YulAssignment","src":"34053:97:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34122:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"34133:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34118:3:27"},"nodeType":"YulFunctionCall","src":"34118:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34142:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"34063:54:27"},"nodeType":"YulFunctionCall","src":"34063:87:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"34053:6:27"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33038:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33049:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33061:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33069:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33077:6:27","type":""}],"src":"32900:1267:27"},{"body":{"nodeType":"YulBlock","src":"34216:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"34273:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34282:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34285:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34275:6:27"},"nodeType":"YulFunctionCall","src":"34275:12:27"},"nodeType":"YulExpressionStatement","src":"34275:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34239:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34264:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34246:17:27"},"nodeType":"YulFunctionCall","src":"34246:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"34236:2:27"},"nodeType":"YulFunctionCall","src":"34236:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34229:6:27"},"nodeType":"YulFunctionCall","src":"34229:43:27"},"nodeType":"YulIf","src":"34226:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34209:5:27","type":""}],"src":"34173:122:27"},{"body":{"nodeType":"YulBlock","src":"34353:87:27","statements":[{"nodeType":"YulAssignment","src":"34363:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"34385:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"34372:12:27"},"nodeType":"YulFunctionCall","src":"34372:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"34363:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34428:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"34401:26:27"},"nodeType":"YulFunctionCall","src":"34401:33:27"},"nodeType":"YulExpressionStatement","src":"34401:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"34331:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"34339:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"34347:5:27","type":""}],"src":"34301:139:27"},{"body":{"nodeType":"YulBlock","src":"34513:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"34618:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"34620:16:27"},"nodeType":"YulFunctionCall","src":"34620:18:27"},"nodeType":"YulExpressionStatement","src":"34620:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34590:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"34598:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34587:2:27"},"nodeType":"YulFunctionCall","src":"34587:30:27"},"nodeType":"YulIf","src":"34584:56:27"},{"nodeType":"YulAssignment","src":"34650:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34680:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"34658:21:27"},"nodeType":"YulFunctionCall","src":"34658:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"34650:4:27"}]},{"nodeType":"YulAssignment","src":"34724:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"34736:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"34742:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34732:3:27"},"nodeType":"YulFunctionCall","src":"34732:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"34724:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"34497:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"34508:4:27","type":""}],"src":"34446:308:27"},{"body":{"nodeType":"YulBlock","src":"34844:341:27","statements":[{"nodeType":"YulAssignment","src":"34854:75:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34921:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"34879:41:27"},"nodeType":"YulFunctionCall","src":"34879:49:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"34863:15:27"},"nodeType":"YulFunctionCall","src":"34863:66:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"34854:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"34945:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"34952:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34938:6:27"},"nodeType":"YulFunctionCall","src":"34938:21:27"},"nodeType":"YulExpressionStatement","src":"34938:21:27"},{"nodeType":"YulVariableDeclaration","src":"34968:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"34983:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"34990:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34979:3:27"},"nodeType":"YulFunctionCall","src":"34979:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"34972:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"35033:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"35035:77:27"},"nodeType":"YulFunctionCall","src":"35035:79:27"},"nodeType":"YulExpressionStatement","src":"35035:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35014:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"35019:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35010:3:27"},"nodeType":"YulFunctionCall","src":"35010:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"35028:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35007:2:27"},"nodeType":"YulFunctionCall","src":"35007:25:27"},"nodeType":"YulIf","src":"35004:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35162:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"35167:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"35172:6:27"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"35125:36:27"},"nodeType":"YulFunctionCall","src":"35125:54:27"},"nodeType":"YulExpressionStatement","src":"35125:54:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"34817:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"34822:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"34830:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"34838:5:27","type":""}],"src":"34760:425:27"},{"body":{"nodeType":"YulBlock","src":"35267:278:27","statements":[{"body":{"nodeType":"YulBlock","src":"35316:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"35318:77:27"},"nodeType":"YulFunctionCall","src":"35318:79:27"},"nodeType":"YulExpressionStatement","src":"35318:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"35295:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"35303:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35291:3:27"},"nodeType":"YulFunctionCall","src":"35291:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"35310:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"35287:3:27"},"nodeType":"YulFunctionCall","src":"35287:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35280:6:27"},"nodeType":"YulFunctionCall","src":"35280:35:27"},"nodeType":"YulIf","src":"35277:122:27"},{"nodeType":"YulVariableDeclaration","src":"35408:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"35435:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"35422:12:27"},"nodeType":"YulFunctionCall","src":"35422:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"35412:6:27","type":""}]},{"nodeType":"YulAssignment","src":"35451:88:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"35512:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"35520:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35508:3:27"},"nodeType":"YulFunctionCall","src":"35508:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"35527:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"35535:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"35460:47:27"},"nodeType":"YulFunctionCall","src":"35460:79:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"35451:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"35245:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"35253:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"35261:5:27","type":""}],"src":"35205:340:27"},{"body":{"nodeType":"YulBlock","src":"35676:704:27","statements":[{"body":{"nodeType":"YulBlock","src":"35722:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"35724:77:27"},"nodeType":"YulFunctionCall","src":"35724:79:27"},"nodeType":"YulExpressionStatement","src":"35724:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"35697:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"35706:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35693:3:27"},"nodeType":"YulFunctionCall","src":"35693:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"35718:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"35689:3:27"},"nodeType":"YulFunctionCall","src":"35689:32:27"},"nodeType":"YulIf","src":"35686:119:27"},{"nodeType":"YulBlock","src":"35815:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"35830:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"35844:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"35834:6:27","type":""}]},{"nodeType":"YulAssignment","src":"35859:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35894:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"35905:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35890:3:27"},"nodeType":"YulFunctionCall","src":"35890:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"35914:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"35869:20:27"},"nodeType":"YulFunctionCall","src":"35869:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"35859:6:27"}]}]},{"nodeType":"YulBlock","src":"35942:133:27","statements":[{"nodeType":"YulVariableDeclaration","src":"35957:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"35971:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"35961:6:27","type":""}]},{"nodeType":"YulAssignment","src":"35987:78:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36037:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"36048:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36033:3:27"},"nodeType":"YulFunctionCall","src":"36033:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36057:7:27"}],"functionName":{"name":"abi_decode_t_enum$_Difficulty_$4607","nodeType":"YulIdentifier","src":"35997:35:27"},"nodeType":"YulFunctionCall","src":"35997:68:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"35987:6:27"}]}]},{"nodeType":"YulBlock","src":"36085:288:27","statements":[{"nodeType":"YulVariableDeclaration","src":"36100:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36131:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36142:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36127:3:27"},"nodeType":"YulFunctionCall","src":"36127:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"36114:12:27"},"nodeType":"YulFunctionCall","src":"36114:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36104:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"36193:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"36195:77:27"},"nodeType":"YulFunctionCall","src":"36195:79:27"},"nodeType":"YulExpressionStatement","src":"36195:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36165:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"36173:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36162:2:27"},"nodeType":"YulFunctionCall","src":"36162:30:27"},"nodeType":"YulIf","src":"36159:117:27"},{"nodeType":"YulAssignment","src":"36290:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36335:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"36346:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36331:3:27"},"nodeType":"YulFunctionCall","src":"36331:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36355:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"36300:30:27"},"nodeType":"YulFunctionCall","src":"36300:63:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"36290:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256t_enum$_Difficulty_$4607t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35630:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"35641:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"35653:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35661:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35669:6:27","type":""}],"src":"35551:829:27"},{"body":{"nodeType":"YulBlock","src":"36495:688:27","statements":[{"body":{"nodeType":"YulBlock","src":"36541:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"36543:77:27"},"nodeType":"YulFunctionCall","src":"36543:79:27"},"nodeType":"YulExpressionStatement","src":"36543:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36516:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"36525:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36512:3:27"},"nodeType":"YulFunctionCall","src":"36512:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"36537:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36508:3:27"},"nodeType":"YulFunctionCall","src":"36508:32:27"},"nodeType":"YulIf","src":"36505:119:27"},{"nodeType":"YulBlock","src":"36634:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"36649:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"36663:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36653:6:27","type":""}]},{"nodeType":"YulAssignment","src":"36678:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36713:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"36724:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36709:3:27"},"nodeType":"YulFunctionCall","src":"36709:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36733:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"36688:20:27"},"nodeType":"YulFunctionCall","src":"36688:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36678:6:27"}]}]},{"nodeType":"YulBlock","src":"36761:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"36776:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"36790:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36780:6:27","type":""}]},{"nodeType":"YulAssignment","src":"36806:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36841:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"36852:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36837:3:27"},"nodeType":"YulFunctionCall","src":"36837:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36861:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"36816:20:27"},"nodeType":"YulFunctionCall","src":"36816:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"36806:6:27"}]}]},{"nodeType":"YulBlock","src":"36889:287:27","statements":[{"nodeType":"YulVariableDeclaration","src":"36904:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36935:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36946:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36931:3:27"},"nodeType":"YulFunctionCall","src":"36931:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"36918:12:27"},"nodeType":"YulFunctionCall","src":"36918:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36908:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"36997:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"36999:77:27"},"nodeType":"YulFunctionCall","src":"36999:79:27"},"nodeType":"YulExpressionStatement","src":"36999:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36969:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"36977:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36966:2:27"},"nodeType":"YulFunctionCall","src":"36966:30:27"},"nodeType":"YulIf","src":"36963:117:27"},{"nodeType":"YulAssignment","src":"37094:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37138:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"37149:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37134:3:27"},"nodeType":"YulFunctionCall","src":"37134:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"37158:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"37104:29:27"},"nodeType":"YulFunctionCall","src":"37104:62:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"37094:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36449:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36460:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36472:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36480:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36488:6:27","type":""}],"src":"36386:797:27"},{"body":{"nodeType":"YulBlock","src":"37312:814:27","statements":[{"body":{"nodeType":"YulBlock","src":"37359:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"37361:77:27"},"nodeType":"YulFunctionCall","src":"37361:79:27"},"nodeType":"YulExpressionStatement","src":"37361:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"37333:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"37342:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37329:3:27"},"nodeType":"YulFunctionCall","src":"37329:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"37354:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"37325:3:27"},"nodeType":"YulFunctionCall","src":"37325:33:27"},"nodeType":"YulIf","src":"37322:120:27"},{"nodeType":"YulBlock","src":"37452:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"37467:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"37481:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"37471:6:27","type":""}]},{"nodeType":"YulAssignment","src":"37496:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37531:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"37542:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37527:3:27"},"nodeType":"YulFunctionCall","src":"37527:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"37551:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"37506:20:27"},"nodeType":"YulFunctionCall","src":"37506:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"37496:6:27"}]}]},{"nodeType":"YulBlock","src":"37579:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"37594:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"37608:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"37598:6:27","type":""}]},{"nodeType":"YulAssignment","src":"37624:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37659:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"37670:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37655:3:27"},"nodeType":"YulFunctionCall","src":"37655:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"37679:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"37634:20:27"},"nodeType":"YulFunctionCall","src":"37634:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"37624:6:27"}]}]},{"nodeType":"YulBlock","src":"37707:115:27","statements":[{"nodeType":"YulVariableDeclaration","src":"37722:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"37736:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"37726:6:27","type":""}]},{"nodeType":"YulAssignment","src":"37752:60:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37784:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"37795:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37780:3:27"},"nodeType":"YulFunctionCall","src":"37780:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"37804:7:27"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"37762:17:27"},"nodeType":"YulFunctionCall","src":"37762:50:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"37752:6:27"}]}]},{"nodeType":"YulBlock","src":"37832:287:27","statements":[{"nodeType":"YulVariableDeclaration","src":"37847:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37878:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"37889:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37874:3:27"},"nodeType":"YulFunctionCall","src":"37874:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"37861:12:27"},"nodeType":"YulFunctionCall","src":"37861:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"37851:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"37940:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"37942:77:27"},"nodeType":"YulFunctionCall","src":"37942:79:27"},"nodeType":"YulExpressionStatement","src":"37942:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37912:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"37920:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37909:2:27"},"nodeType":"YulFunctionCall","src":"37909:30:27"},"nodeType":"YulIf","src":"37906:117:27"},{"nodeType":"YulAssignment","src":"38037:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38081:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"38092:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38077:3:27"},"nodeType":"YulFunctionCall","src":"38077:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"38101:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"38047:29:27"},"nodeType":"YulFunctionCall","src":"38047:62:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"38037:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_boolt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37258:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"37269:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"37281:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37289:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37297:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37305:6:27","type":""}],"src":"37189:937:27"},{"body":{"nodeType":"YulBlock","src":"38223:448:27","statements":[{"body":{"nodeType":"YulBlock","src":"38269:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"38271:77:27"},"nodeType":"YulFunctionCall","src":"38271:79:27"},"nodeType":"YulExpressionStatement","src":"38271:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"38244:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"38253:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38240:3:27"},"nodeType":"YulFunctionCall","src":"38240:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"38265:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"38236:3:27"},"nodeType":"YulFunctionCall","src":"38236:32:27"},"nodeType":"YulIf","src":"38233:119:27"},{"nodeType":"YulBlock","src":"38362:302:27","statements":[{"nodeType":"YulVariableDeclaration","src":"38377:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38408:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38419:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38404:3:27"},"nodeType":"YulFunctionCall","src":"38404:17:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"38391:12:27"},"nodeType":"YulFunctionCall","src":"38391:31:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"38381:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"38469:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"38471:77:27"},"nodeType":"YulFunctionCall","src":"38471:79:27"},"nodeType":"YulExpressionStatement","src":"38471:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"38441:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"38449:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38438:2:27"},"nodeType":"YulFunctionCall","src":"38438:30:27"},"nodeType":"YulIf","src":"38435:117:27"},{"nodeType":"YulAssignment","src":"38566:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38626:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"38637:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38622:3:27"},"nodeType":"YulFunctionCall","src":"38622:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"38646:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"38576:45:27"},"nodeType":"YulFunctionCall","src":"38576:78:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"38566:6:27"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38193:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"38204:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"38216:6:27","type":""}],"src":"38132:539:27"},{"body":{"nodeType":"YulBlock","src":"38803:206:27","statements":[{"nodeType":"YulAssignment","src":"38813:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38825:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38836:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38821:3:27"},"nodeType":"YulFunctionCall","src":"38821:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38813:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38893:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38906:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38917:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38902:3:27"},"nodeType":"YulFunctionCall","src":"38902:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"38849:43:27"},"nodeType":"YulFunctionCall","src":"38849:71:27"},"nodeType":"YulExpressionStatement","src":"38849:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38974:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38987:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38998:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38983:3:27"},"nodeType":"YulFunctionCall","src":"38983:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"38930:43:27"},"nodeType":"YulFunctionCall","src":"38930:72:27"},"nodeType":"YulExpressionStatement","src":"38930:72:27"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38767:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38779:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38787:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38798:4:27","type":""}],"src":"38677:332:27"},{"body":{"nodeType":"YulBlock","src":"39078:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39095:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39117:5:27"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"39100:16:27"},"nodeType":"YulFunctionCall","src":"39100:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39088:6:27"},"nodeType":"YulFunctionCall","src":"39088:36:27"},"nodeType":"YulExpressionStatement","src":"39088:36:27"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39066:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"39073:3:27","type":""}],"src":"39015:115:27"},{"body":{"nodeType":"YulBlock","src":"39232:122:27","statements":[{"nodeType":"YulAssignment","src":"39242:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39254:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39265:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39250:3:27"},"nodeType":"YulFunctionCall","src":"39250:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39242:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39320:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39333:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39344:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39329:3:27"},"nodeType":"YulFunctionCall","src":"39329:17:27"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"39278:41:27"},"nodeType":"YulFunctionCall","src":"39278:69:27"},"nodeType":"YulExpressionStatement","src":"39278:69:27"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39204:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39216:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39227:4:27","type":""}],"src":"39136:218:27"},{"body":{"nodeType":"YulBlock","src":"39473:34:27","statements":[{"nodeType":"YulAssignment","src":"39483:18:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"39498:3:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"39483:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39445:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"39450:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"39461:11:27","type":""}],"src":"39360:147:27"},{"body":{"nodeType":"YulBlock","src":"39653:209:27","statements":[{"nodeType":"YulAssignment","src":"39663:95:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39746:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"39751:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39670:75:27"},"nodeType":"YulFunctionCall","src":"39670:88:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39663:3:27"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"39805:5:27"},{"name":"pos","nodeType":"YulIdentifier","src":"39812:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"39817:6:27"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"39768:36:27"},"nodeType":"YulFunctionCall","src":"39768:56:27"},"nodeType":"YulExpressionStatement","src":"39768:56:27"},{"nodeType":"YulAssignment","src":"39833:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39844:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"39849:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39840:3:27"},"nodeType":"YulFunctionCall","src":"39840:16:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39833:3:27"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"39626:5:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"39633:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"39641:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39649:3:27","type":""}],"src":"39535:327:27"},{"body":{"nodeType":"YulBlock","src":"39910:52:27","statements":[{"nodeType":"YulAssignment","src":"39920:35:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39945:2:27","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"39949:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"39941:3:27"},"nodeType":"YulFunctionCall","src":"39941:14:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"39920:8:27"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39891:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"39901:8:27","type":""}],"src":"39868:94:27"},{"body":{"nodeType":"YulBlock","src":"40015:47:27","statements":[{"nodeType":"YulAssignment","src":"40025:31:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40050:5:27"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"40036:13:27"},"nodeType":"YulFunctionCall","src":"40036:20:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"40025:7:27"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39997:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"40007:7:27","type":""}],"src":"39968:94:27"},{"body":{"nodeType":"YulBlock","src":"40115:53:27","statements":[{"nodeType":"YulAssignment","src":"40125:37:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40156:5:27"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"40136:19:27"},"nodeType":"YulFunctionCall","src":"40136:26:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"40125:7:27"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40097:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"40107:7:27","type":""}],"src":"40068:100:27"},{"body":{"nodeType":"YulBlock","src":"40257:74:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40274:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40317:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"40299:17:27"},"nodeType":"YulFunctionCall","src":"40299:24:27"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"40279:19:27"},"nodeType":"YulFunctionCall","src":"40279:45:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40267:6:27"},"nodeType":"YulFunctionCall","src":"40267:58:27"},"nodeType":"YulExpressionStatement","src":"40267:58:27"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40245:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"40252:3:27","type":""}],"src":"40174:157:27"},{"body":{"nodeType":"YulBlock","src":"40384:32:27","statements":[{"nodeType":"YulAssignment","src":"40394:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"40405:5:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"40394:7:27"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40366:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"40376:7:27","type":""}],"src":"40337:79:27"},{"body":{"nodeType":"YulBlock","src":"40505:74:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40522:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40565:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40547:17:27"},"nodeType":"YulFunctionCall","src":"40547:24:27"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"40527:19:27"},"nodeType":"YulFunctionCall","src":"40527:45:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40515:6:27"},"nodeType":"YulFunctionCall","src":"40515:58:27"},"nodeType":"YulExpressionStatement","src":"40515:58:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40493:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"40500:3:27","type":""}],"src":"40422:157:27"},{"body":{"nodeType":"YulBlock","src":"40785:373:27","statements":[{"nodeType":"YulAssignment","src":"40796:110:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40885:6:27"},{"name":"value1","nodeType":"YulIdentifier","src":"40893:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"40902:3:27"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"40803:81:27"},"nodeType":"YulFunctionCall","src":"40803:103:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40796:3:27"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"40978:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"40987:3:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"40916:61:27"},"nodeType":"YulFunctionCall","src":"40916:75:27"},"nodeType":"YulExpressionStatement","src":"40916:75:27"},{"nodeType":"YulAssignment","src":"41000:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41011:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"41016:2:27","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41007:3:27"},"nodeType":"YulFunctionCall","src":"41007:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41000:3:27"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"41091:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"41100:3:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"41029:61:27"},"nodeType":"YulFunctionCall","src":"41029:75:27"},"nodeType":"YulExpressionStatement","src":"41029:75:27"},{"nodeType":"YulAssignment","src":"41113:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41124:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"41129:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41120:3:27"},"nodeType":"YulFunctionCall","src":"41120:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41113:3:27"}]},{"nodeType":"YulAssignment","src":"41142:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"41149:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41142:3:27"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40740:3:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"40746:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"40754:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40762:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40770:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40781:3:27","type":""}],"src":"40585:573:27"},{"body":{"nodeType":"YulBlock","src":"41272:278:27","statements":[{"nodeType":"YulVariableDeclaration","src":"41282:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41328:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"41296:31:27"},"nodeType":"YulFunctionCall","src":"41296:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"41286:6:27","type":""}]},{"nodeType":"YulAssignment","src":"41343:95:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41426:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"41431:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"41350:75:27"},"nodeType":"YulFunctionCall","src":"41350:88:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41343:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41486:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"41493:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41482:3:27"},"nodeType":"YulFunctionCall","src":"41482:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"41500:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"41505:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"41447:34:27"},"nodeType":"YulFunctionCall","src":"41447:65:27"},"nodeType":"YulExpressionStatement","src":"41447:65:27"},{"nodeType":"YulAssignment","src":"41521:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41532:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"41537:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41528:3:27"},"nodeType":"YulFunctionCall","src":"41528:16:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41521:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41253:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"41260:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41268:3:27","type":""}],"src":"41164:386:27"},{"body":{"nodeType":"YulBlock","src":"41690:137:27","statements":[{"nodeType":"YulAssignment","src":"41701:100:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41788:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"41797:3:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"41708:79:27"},"nodeType":"YulFunctionCall","src":"41708:93:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41701:3:27"}]},{"nodeType":"YulAssignment","src":"41811:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"41818:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41811:3:27"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41669:3:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41675:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41686:3:27","type":""}],"src":"41556:271:27"},{"body":{"nodeType":"YulBlock","src":"41861:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41878:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41881:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41871:6:27"},"nodeType":"YulFunctionCall","src":"41871:88:27"},"nodeType":"YulExpressionStatement","src":"41871:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41975:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"41978:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41968:6:27"},"nodeType":"YulFunctionCall","src":"41968:15:27"},"nodeType":"YulExpressionStatement","src":"41968:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41999:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42002:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41992:6:27"},"nodeType":"YulFunctionCall","src":"41992:15:27"},"nodeType":"YulExpressionStatement","src":"41992:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"41833:180:27"},{"body":{"nodeType":"YulBlock","src":"42084:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42101:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42124:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"42106:17:27"},"nodeType":"YulFunctionCall","src":"42106:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42094:6:27"},"nodeType":"YulFunctionCall","src":"42094:37:27"},"nodeType":"YulExpressionStatement","src":"42094:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42072:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"42079:3:27","type":""}],"src":"42019:118:27"},{"body":{"nodeType":"YulBlock","src":"42241:124:27","statements":[{"nodeType":"YulAssignment","src":"42251:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42263:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42274:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42259:3:27"},"nodeType":"YulFunctionCall","src":"42259:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42251:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42331:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42344:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42355:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42340:3:27"},"nodeType":"YulFunctionCall","src":"42340:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"42287:43:27"},"nodeType":"YulFunctionCall","src":"42287:71:27"},"nodeType":"YulExpressionStatement","src":"42287:71:27"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42213:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42225:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42236:4:27","type":""}],"src":"42143:222:27"},{"body":{"nodeType":"YulBlock","src":"42399:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42416:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42419:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42409:6:27"},"nodeType":"YulFunctionCall","src":"42409:88:27"},"nodeType":"YulExpressionStatement","src":"42409:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42513:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"42516:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42506:6:27"},"nodeType":"YulFunctionCall","src":"42506:15:27"},"nodeType":"YulExpressionStatement","src":"42506:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42537:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42540:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42530:6:27"},"nodeType":"YulFunctionCall","src":"42530:15:27"},"nodeType":"YulExpressionStatement","src":"42530:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"42371:180:27"},{"body":{"nodeType":"YulBlock","src":"42608:269:27","statements":[{"nodeType":"YulAssignment","src":"42618:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42632:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"42638:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"42628:3:27"},"nodeType":"YulFunctionCall","src":"42628:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42618:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"42649:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42679:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"42685:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42675:3:27"},"nodeType":"YulFunctionCall","src":"42675:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"42653:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"42726:51:27","statements":[{"nodeType":"YulAssignment","src":"42740:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42754:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"42762:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42750:3:27"},"nodeType":"YulFunctionCall","src":"42750:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42740:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"42706:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"42699:6:27"},"nodeType":"YulFunctionCall","src":"42699:26:27"},"nodeType":"YulIf","src":"42696:81:27"},{"body":{"nodeType":"YulBlock","src":"42829:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"42843:16:27"},"nodeType":"YulFunctionCall","src":"42843:18:27"},"nodeType":"YulExpressionStatement","src":"42843:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"42793:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42816:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"42824:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"42813:2:27"},"nodeType":"YulFunctionCall","src":"42813:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"42790:2:27"},"nodeType":"YulFunctionCall","src":"42790:38:27"},"nodeType":"YulIf","src":"42787:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42592:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"42601:6:27","type":""}],"src":"42557:320:27"},{"body":{"nodeType":"YulBlock","src":"43009:206:27","statements":[{"nodeType":"YulAssignment","src":"43019:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43031:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"43042:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43027:3:27"},"nodeType":"YulFunctionCall","src":"43027:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43019:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43099:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43112:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"43123:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43108:3:27"},"nodeType":"YulFunctionCall","src":"43108:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"43055:43:27"},"nodeType":"YulFunctionCall","src":"43055:71:27"},"nodeType":"YulExpressionStatement","src":"43055:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"43180:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43193:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"43204:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43189:3:27"},"nodeType":"YulFunctionCall","src":"43189:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"43136:43:27"},"nodeType":"YulFunctionCall","src":"43136:72:27"},"nodeType":"YulExpressionStatement","src":"43136:72:27"}]},"name":"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42973:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42985:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42993:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43004:4:27","type":""}],"src":"42883:332:27"},{"body":{"nodeType":"YulBlock","src":"43310:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43327:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43330:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43320:6:27"},"nodeType":"YulFunctionCall","src":"43320:12:27"},"nodeType":"YulExpressionStatement","src":"43320:12:27"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"43221:117:27"},{"body":{"nodeType":"YulBlock","src":"43433:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43450:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43453:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43443:6:27"},"nodeType":"YulFunctionCall","src":"43443:12:27"},"nodeType":"YulExpressionStatement","src":"43443:12:27"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"43344:117:27"},{"body":{"nodeType":"YulBlock","src":"43556:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43573:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43576:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43566:6:27"},"nodeType":"YulFunctionCall","src":"43566:12:27"},"nodeType":"YulExpressionStatement","src":"43566:12:27"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"43467:117:27"},{"body":{"nodeType":"YulBlock","src":"43680:634:27","statements":[{"nodeType":"YulVariableDeclaration","src":"43690:51:27","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"43729:11:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"43716:12:27"},"nodeType":"YulFunctionCall","src":"43716:25:27"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"43694:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"43835:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"43837:77:27"},"nodeType":"YulFunctionCall","src":"43837:79:27"},"nodeType":"YulExpressionStatement","src":"43837:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"43764:18:27"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"43792:12:27"},"nodeType":"YulFunctionCall","src":"43792:14:27"},{"name":"base_ref","nodeType":"YulIdentifier","src":"43808:8:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43788:3:27"},"nodeType":"YulFunctionCall","src":"43788:29:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43823:4:27","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"43829:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43819:3:27"},"nodeType":"YulFunctionCall","src":"43819:12:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43784:3:27"},"nodeType":"YulFunctionCall","src":"43784:48:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"43760:3:27"},"nodeType":"YulFunctionCall","src":"43760:73:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43753:6:27"},"nodeType":"YulFunctionCall","src":"43753:81:27"},"nodeType":"YulIf","src":"43750:168:27"},{"nodeType":"YulAssignment","src":"43927:41:27","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"43939:8:27"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"43949:18:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43935:3:27"},"nodeType":"YulFunctionCall","src":"43935:33:27"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"43927:4:27"}]},{"nodeType":"YulAssignment","src":"43978:28:27","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"44001:4:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"43988:12:27"},"nodeType":"YulFunctionCall","src":"43988:18:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"43978:6:27"}]},{"body":{"nodeType":"YulBlock","src":"44049:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"44051:77:27"},"nodeType":"YulFunctionCall","src":"44051:79:27"},"nodeType":"YulExpressionStatement","src":"44051:79:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"44021:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"44029:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44018:2:27"},"nodeType":"YulFunctionCall","src":"44018:30:27"},"nodeType":"YulIf","src":"44015:117:27"},{"nodeType":"YulAssignment","src":"44141:21:27","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"44153:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"44159:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44149:3:27"},"nodeType":"YulFunctionCall","src":"44149:13:27"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"44141:4:27"}]},{"body":{"nodeType":"YulBlock","src":"44224:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"44226:77:27"},"nodeType":"YulFunctionCall","src":"44226:79:27"},"nodeType":"YulExpressionStatement","src":"44226:79:27"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"44178:4:27"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"44188:12:27"},"nodeType":"YulFunctionCall","src":"44188:14:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"44208:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"44216:4:27","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"44204:3:27"},"nodeType":"YulFunctionCall","src":"44204:17:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44184:3:27"},"nodeType":"YulFunctionCall","src":"44184:38:27"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"44174:3:27"},"nodeType":"YulFunctionCall","src":"44174:49:27"},"nodeType":"YulIf","src":"44171:136:27"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"43641:8:27","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"43651:11:27","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"43667:4:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"43673:6:27","type":""}],"src":"43590:724:27"},{"body":{"nodeType":"YulBlock","src":"44464:147:27","statements":[{"nodeType":"YulAssignment","src":"44475:110:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"44564:6:27"},{"name":"value1","nodeType":"YulIdentifier","src":"44572:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"44581:3:27"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"44482:81:27"},"nodeType":"YulFunctionCall","src":"44482:103:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44475:3:27"}]},{"nodeType":"YulAssignment","src":"44595:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"44602:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44595:3:27"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44435:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44441:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"44449:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44460:3:27","type":""}],"src":"44320:291:27"},{"body":{"nodeType":"YulBlock","src":"44771:288:27","statements":[{"nodeType":"YulAssignment","src":"44781:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44793:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"44804:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44789:3:27"},"nodeType":"YulFunctionCall","src":"44789:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44781:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"44861:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44874:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"44885:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44870:3:27"},"nodeType":"YulFunctionCall","src":"44870:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44817:43:27"},"nodeType":"YulFunctionCall","src":"44817:71:27"},"nodeType":"YulExpressionStatement","src":"44817:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"44942:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44955:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"44966:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44951:3:27"},"nodeType":"YulFunctionCall","src":"44951:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"44898:43:27"},"nodeType":"YulFunctionCall","src":"44898:72:27"},"nodeType":"YulExpressionStatement","src":"44898:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"45024:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45037:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45048:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45033:3:27"},"nodeType":"YulFunctionCall","src":"45033:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44980:43:27"},"nodeType":"YulFunctionCall","src":"44980:72:27"},"nodeType":"YulExpressionStatement","src":"44980:72:27"}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44727:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"44739:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44747:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"44755:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44766:4:27","type":""}],"src":"44617:442:27"},{"body":{"nodeType":"YulBlock","src":"45191:206:27","statements":[{"nodeType":"YulAssignment","src":"45201:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45213:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45224:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45209:3:27"},"nodeType":"YulFunctionCall","src":"45209:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45201:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45281:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45294:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45305:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45290:3:27"},"nodeType":"YulFunctionCall","src":"45290:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"45237:43:27"},"nodeType":"YulFunctionCall","src":"45237:71:27"},"nodeType":"YulExpressionStatement","src":"45237:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"45362:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45375:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45386:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45371:3:27"},"nodeType":"YulFunctionCall","src":"45371:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"45318:43:27"},"nodeType":"YulFunctionCall","src":"45318:72:27"},"nodeType":"YulExpressionStatement","src":"45318:72:27"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45155:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"45167:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45175:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45186:4:27","type":""}],"src":"45065:332:27"},{"body":{"nodeType":"YulBlock","src":"45597:434:27","statements":[{"nodeType":"YulAssignment","src":"45607:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45619:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45630:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45615:3:27"},"nodeType":"YulFunctionCall","src":"45615:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45607:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45688:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45701:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45712:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45697:3:27"},"nodeType":"YulFunctionCall","src":"45697:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"45644:43:27"},"nodeType":"YulFunctionCall","src":"45644:71:27"},"nodeType":"YulExpressionStatement","src":"45644:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"45769:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45782:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45793:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45778:3:27"},"nodeType":"YulFunctionCall","src":"45778:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"45725:43:27"},"nodeType":"YulFunctionCall","src":"45725:72:27"},"nodeType":"YulExpressionStatement","src":"45725:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"45845:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45858:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45869:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45854:3:27"},"nodeType":"YulFunctionCall","src":"45854:18:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"45807:37:27"},"nodeType":"YulFunctionCall","src":"45807:66:27"},"nodeType":"YulExpressionStatement","src":"45807:66:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45894:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45905:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45890:3:27"},"nodeType":"YulFunctionCall","src":"45890:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45914:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"45920:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45910:3:27"},"nodeType":"YulFunctionCall","src":"45910:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45883:6:27"},"nodeType":"YulFunctionCall","src":"45883:48:27"},"nodeType":"YulExpressionStatement","src":"45883:48:27"},{"nodeType":"YulAssignment","src":"45940:84:27","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"46010:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"46019:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45948:61:27"},"nodeType":"YulFunctionCall","src":"45948:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45940:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45545:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"45557:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"45565:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"45573:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45581:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45592:4:27","type":""}],"src":"45403:628:27"},{"body":{"nodeType":"YulBlock","src":"46151:34:27","statements":[{"nodeType":"YulAssignment","src":"46161:18:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"46176:3:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"46161:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46123:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"46128:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"46139:11:27","type":""}],"src":"46037:148:27"},{"body":{"nodeType":"YulBlock","src":"46301:280:27","statements":[{"nodeType":"YulVariableDeclaration","src":"46311:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46358:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"46325:32:27"},"nodeType":"YulFunctionCall","src":"46325:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"46315:6:27","type":""}]},{"nodeType":"YulAssignment","src":"46373:96:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46457:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"46462:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46380:76:27"},"nodeType":"YulFunctionCall","src":"46380:89:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46373:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46517:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"46524:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46513:3:27"},"nodeType":"YulFunctionCall","src":"46513:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"46531:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"46536:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"46478:34:27"},"nodeType":"YulFunctionCall","src":"46478:65:27"},"nodeType":"YulExpressionStatement","src":"46478:65:27"},{"nodeType":"YulAssignment","src":"46552:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46563:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"46568:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46559:3:27"},"nodeType":"YulFunctionCall","src":"46559:16:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46552:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46282:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"46289:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46297:3:27","type":""}],"src":"46191:390:27"},{"body":{"nodeType":"YulBlock","src":"46723:139:27","statements":[{"nodeType":"YulAssignment","src":"46734:102:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46823:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"46832:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46741:81:27"},"nodeType":"YulFunctionCall","src":"46741:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46734:3:27"}]},{"nodeType":"YulAssignment","src":"46846:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"46853:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46846:3:27"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46702:3:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46708:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46719:3:27","type":""}],"src":"46587:275:27"},{"body":{"nodeType":"YulBlock","src":"46974:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46996:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"47004:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46992:3:27"},"nodeType":"YulFunctionCall","src":"46992:14:27"},{"hexValue":"496e76616c69642073656372657420636f6465","kind":"string","nodeType":"YulLiteral","src":"47008:21:27","type":"","value":"Invalid secret code"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46985:6:27"},"nodeType":"YulFunctionCall","src":"46985:45:27"},"nodeType":"YulExpressionStatement","src":"46985:45:27"}]},"name":"store_literal_in_memory_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46966:6:27","type":""}],"src":"46868:169:27"},{"body":{"nodeType":"YulBlock","src":"47189:220:27","statements":[{"nodeType":"YulAssignment","src":"47199:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47265:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"47270:2:27","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47206:58:27"},"nodeType":"YulFunctionCall","src":"47206:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47199:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47371:3:27"}],"functionName":{"name":"store_literal_in_memory_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9","nodeType":"YulIdentifier","src":"47282:88:27"},"nodeType":"YulFunctionCall","src":"47282:93:27"},"nodeType":"YulExpressionStatement","src":"47282:93:27"},{"nodeType":"YulAssignment","src":"47384:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47395:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"47400:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47391:3:27"},"nodeType":"YulFunctionCall","src":"47391:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47384:3:27"}]}]},"name":"abi_encode_t_stringliteral_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47177:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47185:3:27","type":""}],"src":"47043:366:27"},{"body":{"nodeType":"YulBlock","src":"47586:248:27","statements":[{"nodeType":"YulAssignment","src":"47596:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47608:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"47619:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47604:3:27"},"nodeType":"YulFunctionCall","src":"47604:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47596:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47643:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"47654:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47639:3:27"},"nodeType":"YulFunctionCall","src":"47639:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47662:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"47668:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47658:3:27"},"nodeType":"YulFunctionCall","src":"47658:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47632:6:27"},"nodeType":"YulFunctionCall","src":"47632:47:27"},"nodeType":"YulExpressionStatement","src":"47632:47:27"},{"nodeType":"YulAssignment","src":"47688:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47822:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47696:124:27"},"nodeType":"YulFunctionCall","src":"47696:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47688:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47566:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47581:4:27","type":""}],"src":"47415:419:27"},{"body":{"nodeType":"YulBlock","src":"47868:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47885:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47888:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47878:6:27"},"nodeType":"YulFunctionCall","src":"47878:88:27"},"nodeType":"YulExpressionStatement","src":"47878:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47982:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"47985:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47975:6:27"},"nodeType":"YulFunctionCall","src":"47975:15:27"},"nodeType":"YulExpressionStatement","src":"47975:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48006:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"48009:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47999:6:27"},"nodeType":"YulFunctionCall","src":"47999:15:27"},"nodeType":"YulExpressionStatement","src":"47999:15:27"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"47840:180:27"},{"body":{"nodeType":"YulBlock","src":"48132:65:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48154:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"48162:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48150:3:27"},"nodeType":"YulFunctionCall","src":"48150:14:27"},{"hexValue":"4e6f742074686520686967686573742073636f7265","kind":"string","nodeType":"YulLiteral","src":"48166:23:27","type":"","value":"Not the highest score"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48143:6:27"},"nodeType":"YulFunctionCall","src":"48143:47:27"},"nodeType":"YulExpressionStatement","src":"48143:47:27"}]},"name":"store_literal_in_memory_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48124:6:27","type":""}],"src":"48026:171:27"},{"body":{"nodeType":"YulBlock","src":"48349:220:27","statements":[{"nodeType":"YulAssignment","src":"48359:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48425:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"48430:2:27","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48366:58:27"},"nodeType":"YulFunctionCall","src":"48366:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48359:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48531:3:27"}],"functionName":{"name":"store_literal_in_memory_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505","nodeType":"YulIdentifier","src":"48442:88:27"},"nodeType":"YulFunctionCall","src":"48442:93:27"},"nodeType":"YulExpressionStatement","src":"48442:93:27"},{"nodeType":"YulAssignment","src":"48544:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48555:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"48560:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48551:3:27"},"nodeType":"YulFunctionCall","src":"48551:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48544:3:27"}]}]},"name":"abi_encode_t_stringliteral_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48337:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48345:3:27","type":""}],"src":"48203:366:27"},{"body":{"nodeType":"YulBlock","src":"48746:248:27","statements":[{"nodeType":"YulAssignment","src":"48756:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48768:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"48779:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48764:3:27"},"nodeType":"YulFunctionCall","src":"48764:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48756:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48803:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"48814:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48799:3:27"},"nodeType":"YulFunctionCall","src":"48799:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48822:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"48828:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48818:3:27"},"nodeType":"YulFunctionCall","src":"48818:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48792:6:27"},"nodeType":"YulFunctionCall","src":"48792:47:27"},"nodeType":"YulExpressionStatement","src":"48792:47:27"},{"nodeType":"YulAssignment","src":"48848:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48982:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48856:124:27"},"nodeType":"YulFunctionCall","src":"48856:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48848:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48726:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48741:4:27","type":""}],"src":"48575:419:27"},{"body":{"nodeType":"YulBlock","src":"49058:62:27","statements":[{"body":{"nodeType":"YulBlock","src":"49092:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"49094:16:27"},"nodeType":"YulFunctionCall","src":"49094:18:27"},"nodeType":"YulExpressionStatement","src":"49094:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49081:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"49088:1:27","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"49078:2:27"},"nodeType":"YulFunctionCall","src":"49078:12:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"49071:6:27"},"nodeType":"YulFunctionCall","src":"49071:20:27"},"nodeType":"YulIf","src":"49068:46:27"}]},"name":"validator_assert_t_enum$_Difficulty_$4607","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49051:5:27","type":""}],"src":"49000:120:27"},{"body":{"nodeType":"YulBlock","src":"49186:81:27","statements":[{"nodeType":"YulAssignment","src":"49196:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"49207:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"49196:7:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49255:5:27"}],"functionName":{"name":"validator_assert_t_enum$_Difficulty_$4607","nodeType":"YulIdentifier","src":"49213:41:27"},"nodeType":"YulFunctionCall","src":"49213:48:27"},"nodeType":"YulExpressionStatement","src":"49213:48:27"}]},"name":"cleanup_t_enum$_Difficulty_$4607","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49168:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"49178:7:27","type":""}],"src":"49126:141:27"},{"body":{"nodeType":"YulBlock","src":"49346:68:27","statements":[{"nodeType":"YulAssignment","src":"49356:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49402:5:27"}],"functionName":{"name":"cleanup_t_enum$_Difficulty_$4607","nodeType":"YulIdentifier","src":"49369:32:27"},"nodeType":"YulFunctionCall","src":"49369:39:27"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"49356:9:27"}]}]},"name":"convert_t_enum$_Difficulty_$4607_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49326:5:27","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"49336:9:27","type":""}],"src":"49273:141:27"},{"body":{"nodeType":"YulBlock","src":"49463:53:27","statements":[{"nodeType":"YulAssignment","src":"49473:36:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49498:3:27","type":"","value":"248"},{"name":"value","nodeType":"YulIdentifier","src":"49503:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"49494:3:27"},"nodeType":"YulFunctionCall","src":"49494:15:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"49473:8:27"}]}]},"name":"shift_left_248","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49444:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"49454:8:27","type":""}],"src":"49420:96:27"},{"body":{"nodeType":"YulBlock","src":"49567:48:27","statements":[{"nodeType":"YulAssignment","src":"49577:32:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49603:5:27"}],"functionName":{"name":"shift_left_248","nodeType":"YulIdentifier","src":"49588:14:27"},"nodeType":"YulFunctionCall","src":"49588:21:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"49577:7:27"}]}]},"name":"leftAlign_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49549:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"49559:7:27","type":""}],"src":"49522:93:27"},{"body":{"nodeType":"YulBlock","src":"49717:98:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49734:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49801:5:27"}],"functionName":{"name":"convert_t_enum$_Difficulty_$4607_to_t_uint8","nodeType":"YulIdentifier","src":"49757:43:27"},"nodeType":"YulFunctionCall","src":"49757:50:27"}],"functionName":{"name":"leftAlign_t_uint8","nodeType":"YulIdentifier","src":"49739:17:27"},"nodeType":"YulFunctionCall","src":"49739:69:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49727:6:27"},"nodeType":"YulFunctionCall","src":"49727:82:27"},"nodeType":"YulExpressionStatement","src":"49727:82:27"}]},"name":"abi_encode_t_enum$_Difficulty_$4607_to_t_uint8_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49705:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"49712:3:27","type":""}],"src":"49621:194:27"},{"body":{"nodeType":"YulBlock","src":"49868:32:27","statements":[{"nodeType":"YulAssignment","src":"49878:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"49889:5:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"49878:7:27"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49850:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"49860:7:27","type":""}],"src":"49821:79:27"},{"body":{"nodeType":"YulBlock","src":"49989:74:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50006:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50049:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"50031:17:27"},"nodeType":"YulFunctionCall","src":"50031:24:27"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"50011:19:27"},"nodeType":"YulFunctionCall","src":"50011:45:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49999:6:27"},"nodeType":"YulFunctionCall","src":"49999:58:27"},"nodeType":"YulExpressionStatement","src":"49999:58:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49977:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"49984:3:27","type":""}],"src":"49906:157:27"},{"body":{"nodeType":"YulBlock","src":"50254:378:27","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"50327:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"50336:3:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"50265:61:27"},"nodeType":"YulFunctionCall","src":"50265:75:27"},"nodeType":"YulExpressionStatement","src":"50265:75:27"},{"nodeType":"YulAssignment","src":"50349:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50360:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"50365:2:27","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50356:3:27"},"nodeType":"YulFunctionCall","src":"50356:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50349:3:27"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"50453:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"50462:3:27"}],"functionName":{"name":"abi_encode_t_enum$_Difficulty_$4607_to_t_uint8_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"50378:74:27"},"nodeType":"YulFunctionCall","src":"50378:88:27"},"nodeType":"YulExpressionStatement","src":"50378:88:27"},{"nodeType":"YulAssignment","src":"50475:18:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50486:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"50491:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50482:3:27"},"nodeType":"YulFunctionCall","src":"50482:11:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50475:3:27"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"50565:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"50574:3:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"50503:61:27"},"nodeType":"YulFunctionCall","src":"50503:75:27"},"nodeType":"YulExpressionStatement","src":"50503:75:27"},{"nodeType":"YulAssignment","src":"50587:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50598:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"50603:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50594:3:27"},"nodeType":"YulFunctionCall","src":"50594:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50587:3:27"}]},{"nodeType":"YulAssignment","src":"50616:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"50623:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50616:3:27"}]}]},"name":"abi_encode_tuple_packed_t_address_t_enum$_Difficulty_$4607_t_bytes32__to_t_address_t_uint8_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50217:3:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"50223:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"50231:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"50239:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50250:3:27","type":""}],"src":"50069:563:27"},{"body":{"nodeType":"YulBlock","src":"50792:288:27","statements":[{"nodeType":"YulAssignment","src":"50802:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50814:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"50825:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50810:3:27"},"nodeType":"YulFunctionCall","src":"50810:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50802:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"50882:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50895:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"50906:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50891:3:27"},"nodeType":"YulFunctionCall","src":"50891:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"50838:43:27"},"nodeType":"YulFunctionCall","src":"50838:71:27"},"nodeType":"YulExpressionStatement","src":"50838:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"50963:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50976:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"50987:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50972:3:27"},"nodeType":"YulFunctionCall","src":"50972:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"50919:43:27"},"nodeType":"YulFunctionCall","src":"50919:72:27"},"nodeType":"YulExpressionStatement","src":"50919:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"51045:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51058:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"51069:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51054:3:27"},"nodeType":"YulFunctionCall","src":"51054:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"51001:43:27"},"nodeType":"YulFunctionCall","src":"51001:72:27"},"nodeType":"YulExpressionStatement","src":"51001:72:27"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes32__to_t_address_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50748:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"50760:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"50768:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"50776:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50787:4:27","type":""}],"src":"50638:442:27"},{"body":{"nodeType":"YulBlock","src":"51192:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51214:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51222:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51210:3:27"},"nodeType":"YulFunctionCall","src":"51210:14:27"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"51226:34:27","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51203:6:27"},"nodeType":"YulFunctionCall","src":"51203:58:27"},"nodeType":"YulExpressionStatement","src":"51203:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51282:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51290:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51278:3:27"},"nodeType":"YulFunctionCall","src":"51278:15:27"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"51295:8:27","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51271:6:27"},"nodeType":"YulFunctionCall","src":"51271:33:27"},"nodeType":"YulExpressionStatement","src":"51271:33:27"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51184:6:27","type":""}],"src":"51086:225:27"},{"body":{"nodeType":"YulBlock","src":"51463:220:27","statements":[{"nodeType":"YulAssignment","src":"51473:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51539:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"51544:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51480:58:27"},"nodeType":"YulFunctionCall","src":"51480:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"51473:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51645:3:27"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"51556:88:27"},"nodeType":"YulFunctionCall","src":"51556:93:27"},"nodeType":"YulExpressionStatement","src":"51556:93:27"},{"nodeType":"YulAssignment","src":"51658:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51669:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"51674:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51665:3:27"},"nodeType":"YulFunctionCall","src":"51665:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51658:3:27"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51451:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51459:3:27","type":""}],"src":"51317:366:27"},{"body":{"nodeType":"YulBlock","src":"51860:248:27","statements":[{"nodeType":"YulAssignment","src":"51870:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51882:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"51893:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51878:3:27"},"nodeType":"YulFunctionCall","src":"51878:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51870:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51917:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"51928:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51913:3:27"},"nodeType":"YulFunctionCall","src":"51913:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51936:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"51942:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51932:3:27"},"nodeType":"YulFunctionCall","src":"51932:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51906:6:27"},"nodeType":"YulFunctionCall","src":"51906:47:27"},"nodeType":"YulExpressionStatement","src":"51906:47:27"},{"nodeType":"YulAssignment","src":"51962:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52096:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51970:124:27"},"nodeType":"YulFunctionCall","src":"51970:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51962:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51840:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51855:4:27","type":""}],"src":"51689:419:27"},{"body":{"nodeType":"YulBlock","src":"52170:60:27","statements":[{"nodeType":"YulAssignment","src":"52180:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"52188:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"52180:4:27"}]},{"nodeType":"YulAssignment","src":"52201:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"52213:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"52218:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52209:3:27"},"nodeType":"YulFunctionCall","src":"52209:14:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"52201:4:27"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"52157:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"52165:4:27","type":""}],"src":"52114:116:27"},{"body":{"nodeType":"YulBlock","src":"52281:105:27","statements":[{"nodeType":"YulAssignment","src":"52291:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52306:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"52313:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"52302:3:27"},"nodeType":"YulFunctionCall","src":"52302:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"52291:7:27"}]}]},"name":"cleanup_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"52263:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"52273:7:27","type":""}],"src":"52236:150:27"},{"body":{"nodeType":"YulBlock","src":"52447:99:27","statements":[{"nodeType":"YulVariableDeclaration","src":"52458:42:27","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"52495:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"52489:5:27"},"nodeType":"YulFunctionCall","src":"52489:10:27"}],"functionName":{"name":"cleanup_t_bytes20","nodeType":"YulIdentifier","src":"52471:17:27"},"nodeType":"YulFunctionCall","src":"52471:29:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"52462:5:27","type":""}]},{"nodeType":"YulAssignment","src":"52510:29:27","value":{"name":"value","nodeType":"YulIdentifier","src":"52534:5:27"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"52510:11:27"}]}]},"name":"read_from_memoryt_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"52427:3:27","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"52435:11:27","type":""}],"src":"52392:154:27"},{"body":{"nodeType":"YulBlock","src":"52605:54:27","statements":[{"nodeType":"YulAssignment","src":"52615:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"52640:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"52646:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"52636:3:27"},"nodeType":"YulFunctionCall","src":"52636:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"52615:8:27"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"52580:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"52586:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"52596:8:27","type":""}],"src":"52552:107:27"},{"body":{"nodeType":"YulBlock","src":"52755:504:27","statements":[{"nodeType":"YulVariableDeclaration","src":"52766:52:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"52812:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"52780:31:27"},"nodeType":"YulFunctionCall","src":"52780:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"52770:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"52827:21:27","value":{"name":"array","nodeType":"YulIdentifier","src":"52843:5:27"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"52831:8:27","type":""}]},{"nodeType":"YulAssignment","src":"52858:52:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"52904:5:27"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"52870:33:27"},"nodeType":"YulFunctionCall","src":"52870:40:27"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"52858:8:27"}]},{"nodeType":"YulAssignment","src":"52920:44:27","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"52955:8:27"}],"functionName":{"name":"read_from_memoryt_bytes20","nodeType":"YulIdentifier","src":"52929:25:27"},"nodeType":"YulFunctionCall","src":"52929:35:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"52920:5:27"}]},{"body":{"nodeType":"YulBlock","src":"52992:260:27","statements":[{"nodeType":"YulAssignment","src":"53006:236:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53036:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"53103:1:27","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"53110:2:27","type":"","value":"20"},{"name":"length","nodeType":"YulIdentifier","src":"53114:6:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53106:3:27"},"nodeType":"YulFunctionCall","src":"53106:15:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"53099:3:27"},"nodeType":"YulFunctionCall","src":"53099:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"53144:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"53059:18:27"},"nodeType":"YulFunctionCall","src":"53059:169:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"53015:3:27"},"nodeType":"YulFunctionCall","src":"53015:227:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"53006:5:27"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"52980:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"52988:2:27","type":"","value":"20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"52977:2:27"},"nodeType":"YulFunctionCall","src":"52977:14:27"},"nodeType":"YulIf","src":"52974:278:27"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"52739:5:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"52749:5:27","type":""}],"src":"52665:594:27"},{"body":{"nodeType":"YulBlock","src":"53409:253:27","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"53482:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"53491:3:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"53420:61:27"},"nodeType":"YulFunctionCall","src":"53420:75:27"},"nodeType":"YulExpressionStatement","src":"53420:75:27"},{"nodeType":"YulAssignment","src":"53504:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53515:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"53520:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53511:3:27"},"nodeType":"YulFunctionCall","src":"53511:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53504:3:27"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"53595:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"53604:3:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"53533:61:27"},"nodeType":"YulFunctionCall","src":"53533:75:27"},"nodeType":"YulExpressionStatement","src":"53533:75:27"},{"nodeType":"YulAssignment","src":"53617:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53628:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"53633:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53624:3:27"},"nodeType":"YulFunctionCall","src":"53624:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53617:3:27"}]},{"nodeType":"YulAssignment","src":"53646:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"53653:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"53646:3:27"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"53380:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"53386:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"53394:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"53405:3:27","type":""}],"src":"53265:397:27"},{"body":{"nodeType":"YulBlock","src":"53774:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53796:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53804:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53792:3:27"},"nodeType":"YulFunctionCall","src":"53792:14:27"},{"hexValue":"466972737420506c616365204e46547320617265206e6f6e2d7472616e736665","kind":"string","nodeType":"YulLiteral","src":"53808:34:27","type":"","value":"First Place NFTs are non-transfe"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53785:6:27"},"nodeType":"YulFunctionCall","src":"53785:58:27"},"nodeType":"YulExpressionStatement","src":"53785:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53864:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53872:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53860:3:27"},"nodeType":"YulFunctionCall","src":"53860:15:27"},{"hexValue":"7261626c65","kind":"string","nodeType":"YulLiteral","src":"53877:7:27","type":"","value":"rable"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53853:6:27"},"nodeType":"YulFunctionCall","src":"53853:32:27"},"nodeType":"YulExpressionStatement","src":"53853:32:27"}]},"name":"store_literal_in_memory_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53766:6:27","type":""}],"src":"53668:224:27"},{"body":{"nodeType":"YulBlock","src":"54044:220:27","statements":[{"nodeType":"YulAssignment","src":"54054:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54120:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"54125:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54061:58:27"},"nodeType":"YulFunctionCall","src":"54061:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54054:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54226:3:27"}],"functionName":{"name":"store_literal_in_memory_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910","nodeType":"YulIdentifier","src":"54137:88:27"},"nodeType":"YulFunctionCall","src":"54137:93:27"},"nodeType":"YulExpressionStatement","src":"54137:93:27"},{"nodeType":"YulAssignment","src":"54239:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54250:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"54255:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54246:3:27"},"nodeType":"YulFunctionCall","src":"54246:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54239:3:27"}]}]},"name":"abi_encode_t_stringliteral_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"54032:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54040:3:27","type":""}],"src":"53898:366:27"},{"body":{"nodeType":"YulBlock","src":"54441:248:27","statements":[{"nodeType":"YulAssignment","src":"54451:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54463:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"54474:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54459:3:27"},"nodeType":"YulFunctionCall","src":"54459:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54451:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54498:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"54509:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54494:3:27"},"nodeType":"YulFunctionCall","src":"54494:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54517:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"54523:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54513:3:27"},"nodeType":"YulFunctionCall","src":"54513:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54487:6:27"},"nodeType":"YulFunctionCall","src":"54487:47:27"},"nodeType":"YulExpressionStatement","src":"54487:47:27"},{"nodeType":"YulAssignment","src":"54543:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54677:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54551:124:27"},"nodeType":"YulFunctionCall","src":"54551:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54543:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54421:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54436:4:27","type":""}],"src":"54270:419:27"},{"body":{"nodeType":"YulBlock","src":"54801:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54823:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"54831:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54819:3:27"},"nodeType":"YulFunctionCall","src":"54819:14:27"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"54835:34:27","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54812:6:27"},"nodeType":"YulFunctionCall","src":"54812:58:27"},"nodeType":"YulExpressionStatement","src":"54812:58:27"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"54793:6:27","type":""}],"src":"54695:182:27"},{"body":{"nodeType":"YulBlock","src":"55029:220:27","statements":[{"nodeType":"YulAssignment","src":"55039:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55105:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"55110:2:27","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55046:58:27"},"nodeType":"YulFunctionCall","src":"55046:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55039:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55211:3:27"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"55122:88:27"},"nodeType":"YulFunctionCall","src":"55122:93:27"},"nodeType":"YulExpressionStatement","src":"55122:93:27"},{"nodeType":"YulAssignment","src":"55224:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55235:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"55240:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55231:3:27"},"nodeType":"YulFunctionCall","src":"55231:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55224:3:27"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55017:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55025:3:27","type":""}],"src":"54883:366:27"},{"body":{"nodeType":"YulBlock","src":"55426:248:27","statements":[{"nodeType":"YulAssignment","src":"55436:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55448:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"55459:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55444:3:27"},"nodeType":"YulFunctionCall","src":"55444:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55436:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55483:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"55494:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55479:3:27"},"nodeType":"YulFunctionCall","src":"55479:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55502:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"55508:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55498:3:27"},"nodeType":"YulFunctionCall","src":"55498:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55472:6:27"},"nodeType":"YulFunctionCall","src":"55472:47:27"},"nodeType":"YulExpressionStatement","src":"55472:47:27"},{"nodeType":"YulAssignment","src":"55528:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55662:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55536:124:27"},"nodeType":"YulFunctionCall","src":"55536:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55528:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55406:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55421:4:27","type":""}],"src":"55255:419:27"},{"body":{"nodeType":"YulBlock","src":"55733:87:27","statements":[{"nodeType":"YulAssignment","src":"55743:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"55751:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"55743:4:27"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"55771:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"55774:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55764:6:27"},"nodeType":"YulFunctionCall","src":"55764:14:27"},"nodeType":"YulExpressionStatement","src":"55764:14:27"},{"nodeType":"YulAssignment","src":"55787:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"55805:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55808:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"55795:9:27"},"nodeType":"YulFunctionCall","src":"55795:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"55787:4:27"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"55720:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"55728:4:27","type":""}],"src":"55680:140:27"},{"body":{"nodeType":"YulBlock","src":"55870:49:27","statements":[{"nodeType":"YulAssignment","src":"55880:33:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55898:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"55905:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55894:3:27"},"nodeType":"YulFunctionCall","src":"55894:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"55910:2:27","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"55890:3:27"},"nodeType":"YulFunctionCall","src":"55890:23:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"55880:6:27"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"55853:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"55863:6:27","type":""}],"src":"55826:93:27"},{"body":{"nodeType":"YulBlock","src":"56001:317:27","statements":[{"nodeType":"YulVariableDeclaration","src":"56011:35:27","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"56032:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"56044:1:27","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"56028:3:27"},"nodeType":"YulFunctionCall","src":"56028:18:27"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"56015:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"56055:109:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"56086:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"56097:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"56067:18:27"},"nodeType":"YulFunctionCall","src":"56067:97:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"56059:4:27","type":""}]},{"nodeType":"YulAssignment","src":"56173:51:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"56204:9:27"},{"name":"toInsert","nodeType":"YulIdentifier","src":"56215:8:27"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"56185:18:27"},"nodeType":"YulFunctionCall","src":"56185:39:27"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"56173:8:27"}]},{"nodeType":"YulAssignment","src":"56233:30:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"56246:5:27"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"56257:4:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"56253:3:27"},"nodeType":"YulFunctionCall","src":"56253:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"56242:3:27"},"nodeType":"YulFunctionCall","src":"56242:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"56233:5:27"}]},{"nodeType":"YulAssignment","src":"56272:40:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"56285:5:27"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"56296:8:27"},{"name":"mask","nodeType":"YulIdentifier","src":"56306:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"56292:3:27"},"nodeType":"YulFunctionCall","src":"56292:19:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"56282:2:27"},"nodeType":"YulFunctionCall","src":"56282:30:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"56272:6:27"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"55962:5:27","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"55969:10:27","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"55981:8:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"55994:6:27","type":""}],"src":"55925:393:27"},{"body":{"nodeType":"YulBlock","src":"56356:28:27","statements":[{"nodeType":"YulAssignment","src":"56366:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"56373:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"56366:3:27"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"56342:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"56352:3:27","type":""}],"src":"56324:60:27"},{"body":{"nodeType":"YulBlock","src":"56450:82:27","statements":[{"nodeType":"YulAssignment","src":"56460:66:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"56518:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"56500:17:27"},"nodeType":"YulFunctionCall","src":"56500:24:27"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"56491:8:27"},"nodeType":"YulFunctionCall","src":"56491:34:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"56473:17:27"},"nodeType":"YulFunctionCall","src":"56473:53:27"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"56460:9:27"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"56430:5:27","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"56440:9:27","type":""}],"src":"56390:142:27"},{"body":{"nodeType":"YulBlock","src":"56585:28:27","statements":[{"nodeType":"YulAssignment","src":"56595:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"56602:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"56595:3:27"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"56571:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"56581:3:27","type":""}],"src":"56538:75:27"},{"body":{"nodeType":"YulBlock","src":"56695:193:27","statements":[{"nodeType":"YulVariableDeclaration","src":"56705:63:27","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"56760:7:27"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"56729:30:27"},"nodeType":"YulFunctionCall","src":"56729:39:27"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"56709:16:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"56784:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"56824:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"56818:5:27"},"nodeType":"YulFunctionCall","src":"56818:11:27"},{"name":"offset","nodeType":"YulIdentifier","src":"56831:6:27"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"56863:16:27"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"56839:23:27"},"nodeType":"YulFunctionCall","src":"56839:41:27"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"56790:27:27"},"nodeType":"YulFunctionCall","src":"56790:91:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"56777:6:27"},"nodeType":"YulFunctionCall","src":"56777:105:27"},"nodeType":"YulExpressionStatement","src":"56777:105:27"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"56672:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"56678:6:27","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"56686:7:27","type":""}],"src":"56619:269:27"},{"body":{"nodeType":"YulBlock","src":"56943:24:27","statements":[{"nodeType":"YulAssignment","src":"56953:8:27","value":{"kind":"number","nodeType":"YulLiteral","src":"56960:1:27","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"56953:3:27"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"56939:3:27","type":""}],"src":"56894:73:27"},{"body":{"nodeType":"YulBlock","src":"57026:136:27","statements":[{"nodeType":"YulVariableDeclaration","src":"57036:46:27","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"57050:30:27"},"nodeType":"YulFunctionCall","src":"57050:32:27"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"57040:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"57135:4:27"},{"name":"offset","nodeType":"YulIdentifier","src":"57141:6:27"},{"name":"zero_0","nodeType":"YulIdentifier","src":"57149:6:27"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"57091:43:27"},"nodeType":"YulFunctionCall","src":"57091:65:27"},"nodeType":"YulExpressionStatement","src":"57091:65:27"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"57012:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"57018:6:27","type":""}],"src":"56973:189:27"},{"body":{"nodeType":"YulBlock","src":"57218:136:27","statements":[{"body":{"nodeType":"YulBlock","src":"57285:63:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"57329:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"57336:1:27","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"57299:29:27"},"nodeType":"YulFunctionCall","src":"57299:39:27"},"nodeType":"YulExpressionStatement","src":"57299:39:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"57238:5:27"},{"name":"end","nodeType":"YulIdentifier","src":"57245:3:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"57235:2:27"},"nodeType":"YulFunctionCall","src":"57235:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"57250:26:27","statements":[{"nodeType":"YulAssignment","src":"57252:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"57265:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"57272:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57261:3:27"},"nodeType":"YulFunctionCall","src":"57261:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"57252:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"57232:2:27","statements":[]},"src":"57228:120:27"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"57206:5:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"57213:3:27","type":""}],"src":"57168:186:27"},{"body":{"nodeType":"YulBlock","src":"57438:463:27","statements":[{"body":{"nodeType":"YulBlock","src":"57464:430:27","statements":[{"nodeType":"YulVariableDeclaration","src":"57478:53:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"57525:5:27"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"57494:30:27"},"nodeType":"YulFunctionCall","src":"57494:37:27"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"57482:8:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"57544:63:27","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"57567:8:27"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"57595:10:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"57577:17:27"},"nodeType":"YulFunctionCall","src":"57577:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57563:3:27"},"nodeType":"YulFunctionCall","src":"57563:44:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"57548:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"57764:27:27","statements":[{"nodeType":"YulAssignment","src":"57766:23:27","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"57781:8:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"57766:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"57748:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"57760:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"57745:2:27"},"nodeType":"YulFunctionCall","src":"57745:18:27"},"nodeType":"YulIf","src":"57742:49:27"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"57833:11:27"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"57850:8:27"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"57878:3:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"57860:17:27"},"nodeType":"YulFunctionCall","src":"57860:22:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57846:3:27"},"nodeType":"YulFunctionCall","src":"57846:37:27"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"57804:28:27"},"nodeType":"YulFunctionCall","src":"57804:80:27"},"nodeType":"YulExpressionStatement","src":"57804:80:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"57455:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"57460:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"57452:2:27"},"nodeType":"YulFunctionCall","src":"57452:11:27"},"nodeType":"YulIf","src":"57449:445:27"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"57414:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"57421:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"57426:10:27","type":""}],"src":"57360:541:27"},{"body":{"nodeType":"YulBlock","src":"57970:54:27","statements":[{"nodeType":"YulAssignment","src":"57980:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"58005:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"58011:5:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"58001:3:27"},"nodeType":"YulFunctionCall","src":"58001:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"57980:8:27"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"57945:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"57951:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"57961:8:27","type":""}],"src":"57907:117:27"},{"body":{"nodeType":"YulBlock","src":"58081:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"58091:68:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"58140:1:27","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"58143:5:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"58136:3:27"},"nodeType":"YulFunctionCall","src":"58136:13:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"58155:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"58151:3:27"},"nodeType":"YulFunctionCall","src":"58151:6:27"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"58107:28:27"},"nodeType":"YulFunctionCall","src":"58107:51:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"58103:3:27"},"nodeType":"YulFunctionCall","src":"58103:56:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"58095:4:27","type":""}]},{"nodeType":"YulAssignment","src":"58168:25:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"58182:4:27"},{"name":"mask","nodeType":"YulIdentifier","src":"58188:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"58178:3:27"},"nodeType":"YulFunctionCall","src":"58178:15:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"58168:6:27"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"58058:4:27","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"58064:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"58074:6:27","type":""}],"src":"58030:169:27"},{"body":{"nodeType":"YulBlock","src":"58285:214:27","statements":[{"nodeType":"YulAssignment","src":"58418:37:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"58445:4:27"},{"name":"len","nodeType":"YulIdentifier","src":"58451:3:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"58426:18:27"},"nodeType":"YulFunctionCall","src":"58426:29:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"58418:4:27"}]},{"nodeType":"YulAssignment","src":"58464:29:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"58475:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"58485:1:27","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"58488:3:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"58481:3:27"},"nodeType":"YulFunctionCall","src":"58481:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"58472:2:27"},"nodeType":"YulFunctionCall","src":"58472:21:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"58464:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"58266:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"58272:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"58280:4:27","type":""}],"src":"58204:295:27"},{"body":{"nodeType":"YulBlock","src":"58594:1300:27","statements":[{"nodeType":"YulVariableDeclaration","src":"58605:50:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"58651:3:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"58619:31:27"},"nodeType":"YulFunctionCall","src":"58619:36:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"58609:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"58740:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"58742:16:27"},"nodeType":"YulFunctionCall","src":"58742:18:27"},"nodeType":"YulExpressionStatement","src":"58742:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"58712:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"58720:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"58709:2:27"},"nodeType":"YulFunctionCall","src":"58709:30:27"},"nodeType":"YulIf","src":"58706:56:27"},{"nodeType":"YulVariableDeclaration","src":"58772:52:27","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"58818:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"58812:5:27"},"nodeType":"YulFunctionCall","src":"58812:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"58786:25:27"},"nodeType":"YulFunctionCall","src":"58786:38:27"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"58776:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"58916:4:27"},{"name":"oldLen","nodeType":"YulIdentifier","src":"58922:6:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"58930:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"58871:44:27"},"nodeType":"YulFunctionCall","src":"58871:66:27"},"nodeType":"YulExpressionStatement","src":"58871:66:27"},{"nodeType":"YulVariableDeclaration","src":"58947:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"58964:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"58951:9:27","type":""}]},{"nodeType":"YulAssignment","src":"58975:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"58988:4:27","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"58975:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"59039:610:27","statements":[{"nodeType":"YulVariableDeclaration","src":"59053:37:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"59072:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"59084:4:27","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"59080:3:27"},"nodeType":"YulFunctionCall","src":"59080:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"59068:3:27"},"nodeType":"YulFunctionCall","src":"59068:22:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"59057:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"59104:50:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"59149:4:27"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"59118:30:27"},"nodeType":"YulFunctionCall","src":"59118:36:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"59108:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"59167:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"59176:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"59171:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"59235:163:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"59260:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"59278:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"59283:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59274:3:27"},"nodeType":"YulFunctionCall","src":"59274:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"59268:5:27"},"nodeType":"YulFunctionCall","src":"59268:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"59253:6:27"},"nodeType":"YulFunctionCall","src":"59253:42:27"},"nodeType":"YulExpressionStatement","src":"59253:42:27"},{"nodeType":"YulAssignment","src":"59312:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"59326:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"59334:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59322:3:27"},"nodeType":"YulFunctionCall","src":"59322:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"59312:6:27"}]},{"nodeType":"YulAssignment","src":"59353:31:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"59370:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"59381:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59366:3:27"},"nodeType":"YulFunctionCall","src":"59366:18:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"59353:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"59201:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"59204:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"59198:2:27"},"nodeType":"YulFunctionCall","src":"59198:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"59213:21:27","statements":[{"nodeType":"YulAssignment","src":"59215:17:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"59224:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"59227:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59220:3:27"},"nodeType":"YulFunctionCall","src":"59220:12:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"59215:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"59194:3:27","statements":[]},"src":"59190:208:27"},{"body":{"nodeType":"YulBlock","src":"59434:156:27","statements":[{"nodeType":"YulVariableDeclaration","src":"59452:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"59479:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"59484:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59475:3:27"},"nodeType":"YulFunctionCall","src":"59475:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"59469:5:27"},"nodeType":"YulFunctionCall","src":"59469:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"59456:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"59519:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"59546:9:27"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"59561:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"59569:4:27","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"59557:3:27"},"nodeType":"YulFunctionCall","src":"59557:17:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"59527:18:27"},"nodeType":"YulFunctionCall","src":"59527:48:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"59512:6:27"},"nodeType":"YulFunctionCall","src":"59512:64:27"},"nodeType":"YulExpressionStatement","src":"59512:64:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"59417:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"59426:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"59414:2:27"},"nodeType":"YulFunctionCall","src":"59414:19:27"},"nodeType":"YulIf","src":"59411:179:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"59610:4:27"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"59624:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"59632:1:27","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"59620:3:27"},"nodeType":"YulFunctionCall","src":"59620:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"59636:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59616:3:27"},"nodeType":"YulFunctionCall","src":"59616:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"59603:6:27"},"nodeType":"YulFunctionCall","src":"59603:36:27"},"nodeType":"YulExpressionStatement","src":"59603:36:27"}]},"nodeType":"YulCase","src":"59032:617:27","value":{"kind":"number","nodeType":"YulLiteral","src":"59037:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"59666:222:27","statements":[{"nodeType":"YulVariableDeclaration","src":"59680:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"59693:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"59684:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"59717:67:27","statements":[{"nodeType":"YulAssignment","src":"59735:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"59754:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"59759:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59750:3:27"},"nodeType":"YulFunctionCall","src":"59750:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"59744:5:27"},"nodeType":"YulFunctionCall","src":"59744:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"59735:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"59710:6:27"},"nodeType":"YulIf","src":"59707:77:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"59804:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"59863:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"59870:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"59810:52:27"},"nodeType":"YulFunctionCall","src":"59810:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"59797:6:27"},"nodeType":"YulFunctionCall","src":"59797:81:27"},"nodeType":"YulExpressionStatement","src":"59797:81:27"}]},"nodeType":"YulCase","src":"59658:230:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"59012:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"59020:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"59009:2:27"},"nodeType":"YulFunctionCall","src":"59009:14:27"},"nodeType":"YulSwitch","src":"59002:886:27"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"58583:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"58589:3:27","type":""}],"src":"58504:1390:27"},{"body":{"nodeType":"YulBlock","src":"59928:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"59945:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"59948:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59938:6:27"},"nodeType":"YulFunctionCall","src":"59938:88:27"},"nodeType":"YulExpressionStatement","src":"59938:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"60042:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"60045:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60035:6:27"},"nodeType":"YulFunctionCall","src":"60035:15:27"},"nodeType":"YulExpressionStatement","src":"60035:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"60066:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"60069:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"60059:6:27"},"nodeType":"YulFunctionCall","src":"60059:15:27"},"nodeType":"YulExpressionStatement","src":"60059:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"59900:180:27"},{"body":{"nodeType":"YulBlock","src":"60129:128:27","statements":[{"nodeType":"YulAssignment","src":"60139:33:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"60166:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"60148:17:27"},"nodeType":"YulFunctionCall","src":"60148:24:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"60139:5:27"}]},{"body":{"nodeType":"YulBlock","src":"60200:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"60202:16:27"},"nodeType":"YulFunctionCall","src":"60202:18:27"},"nodeType":"YulExpressionStatement","src":"60202:18:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"60187:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"60194:4:27","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"60184:2:27"},"nodeType":"YulFunctionCall","src":"60184:15:27"},"nodeType":"YulIf","src":"60181:41:27"},{"nodeType":"YulAssignment","src":"60231:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"60242:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"60249:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"60238:3:27"},"nodeType":"YulFunctionCall","src":"60238:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"60231:3:27"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"60115:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"60125:3:27","type":""}],"src":"60086:171:27"},{"body":{"nodeType":"YulBlock","src":"60429:351:27","statements":[{"nodeType":"YulAssignment","src":"60439:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60451:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"60462:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60447:3:27"},"nodeType":"YulFunctionCall","src":"60447:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60439:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"60519:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60532:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"60543:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60528:3:27"},"nodeType":"YulFunctionCall","src":"60528:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"60475:43:27"},"nodeType":"YulFunctionCall","src":"60475:71:27"},"nodeType":"YulExpressionStatement","src":"60475:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"60594:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60607:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"60618:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60603:3:27"},"nodeType":"YulFunctionCall","src":"60603:18:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"60556:37:27"},"nodeType":"YulFunctionCall","src":"60556:66:27"},"nodeType":"YulExpressionStatement","src":"60556:66:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60643:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"60654:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60639:3:27"},"nodeType":"YulFunctionCall","src":"60639:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"60663:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"60669:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"60659:3:27"},"nodeType":"YulFunctionCall","src":"60659:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60632:6:27"},"nodeType":"YulFunctionCall","src":"60632:48:27"},"nodeType":"YulExpressionStatement","src":"60632:48:27"},{"nodeType":"YulAssignment","src":"60689:84:27","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"60759:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"60768:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60697:61:27"},"nodeType":"YulFunctionCall","src":"60697:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60689:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60385:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"60397:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"60405:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"60413:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"60424:4:27","type":""}],"src":"60263:517:27"},{"body":{"nodeType":"YulBlock","src":"61014:523:27","statements":[{"nodeType":"YulAssignment","src":"61024:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61036:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"61047:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61032:3:27"},"nodeType":"YulFunctionCall","src":"61032:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61024:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"61105:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61118:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"61129:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61114:3:27"},"nodeType":"YulFunctionCall","src":"61114:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"61061:43:27"},"nodeType":"YulFunctionCall","src":"61061:71:27"},"nodeType":"YulExpressionStatement","src":"61061:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"61186:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61199:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"61210:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61195:3:27"},"nodeType":"YulFunctionCall","src":"61195:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"61142:43:27"},"nodeType":"YulFunctionCall","src":"61142:72:27"},"nodeType":"YulExpressionStatement","src":"61142:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"61268:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61281:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"61292:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61277:3:27"},"nodeType":"YulFunctionCall","src":"61277:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"61224:43:27"},"nodeType":"YulFunctionCall","src":"61224:72:27"},"nodeType":"YulExpressionStatement","src":"61224:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"61350:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61363:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"61374:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61359:3:27"},"nodeType":"YulFunctionCall","src":"61359:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"61306:43:27"},"nodeType":"YulFunctionCall","src":"61306:72:27"},"nodeType":"YulExpressionStatement","src":"61306:72:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61399:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"61410:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61395:3:27"},"nodeType":"YulFunctionCall","src":"61395:19:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61420:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"61426:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"61416:3:27"},"nodeType":"YulFunctionCall","src":"61416:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61388:6:27"},"nodeType":"YulFunctionCall","src":"61388:49:27"},"nodeType":"YulExpressionStatement","src":"61388:49:27"},{"nodeType":"YulAssignment","src":"61446:84:27","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"61516:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"61525:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61454:61:27"},"nodeType":"YulFunctionCall","src":"61454:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61446:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60954:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"60966:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"60974:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"60982:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"60990:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"60998:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"61009:4:27","type":""}],"src":"60786:751:27"},{"body":{"nodeType":"YulBlock","src":"61586:190:27","statements":[{"nodeType":"YulAssignment","src":"61596:33:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"61623:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"61605:17:27"},"nodeType":"YulFunctionCall","src":"61605:24:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"61596:5:27"}]},{"body":{"nodeType":"YulBlock","src":"61719:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"61721:16:27"},"nodeType":"YulFunctionCall","src":"61721:18:27"},"nodeType":"YulExpressionStatement","src":"61721:18:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"61644:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"61651:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"61641:2:27"},"nodeType":"YulFunctionCall","src":"61641:77:27"},"nodeType":"YulIf","src":"61638:103:27"},{"nodeType":"YulAssignment","src":"61750:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"61761:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"61768:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61757:3:27"},"nodeType":"YulFunctionCall","src":"61757:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"61750:3:27"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"61572:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"61582:3:27","type":""}],"src":"61543:233:27"},{"body":{"nodeType":"YulBlock","src":"61888:108:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"61910:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"61918:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61906:3:27"},"nodeType":"YulFunctionCall","src":"61906:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"61922:66:27","type":"","value":"0x0006000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61899:6:27"},"nodeType":"YulFunctionCall","src":"61899:90:27"},"nodeType":"YulExpressionStatement","src":"61899:90:27"}]},"name":"store_literal_in_memory_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"61880:6:27","type":""}],"src":"61782:214:27"},{"body":{"nodeType":"YulBlock","src":"62166:236:27","statements":[{"nodeType":"YulAssignment","src":"62176:91:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62260:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"62265:1:27","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"62183:76:27"},"nodeType":"YulFunctionCall","src":"62183:84:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"62176:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62365:3:27"}],"functionName":{"name":"store_literal_in_memory_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863","nodeType":"YulIdentifier","src":"62276:88:27"},"nodeType":"YulFunctionCall","src":"62276:93:27"},"nodeType":"YulExpressionStatement","src":"62276:93:27"},{"nodeType":"YulAssignment","src":"62378:18:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62389:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"62394:1:27","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62385:3:27"},"nodeType":"YulFunctionCall","src":"62385:11:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"62378:3:27"}]}]},"name":"abi_encode_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"62154:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"62162:3:27","type":""}],"src":"62002:400:27"},{"body":{"nodeType":"YulBlock","src":"62645:304:27","statements":[{"nodeType":"YulAssignment","src":"62656:155:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62807:3:27"}],"functionName":{"name":"abi_encode_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"62663:142:27"},"nodeType":"YulFunctionCall","src":"62663:148:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"62656:3:27"}]},{"nodeType":"YulAssignment","src":"62821:102:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"62910:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"62919:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"62828:81:27"},"nodeType":"YulFunctionCall","src":"62828:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"62821:3:27"}]},{"nodeType":"YulAssignment","src":"62933:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"62940:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"62933:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"62624:3:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"62630:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"62641:3:27","type":""}],"src":"62408:541:27"},{"body":{"nodeType":"YulBlock","src":"63093:269:27","statements":[{"nodeType":"YulAssignment","src":"63103:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63115:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"63126:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63111:3:27"},"nodeType":"YulFunctionCall","src":"63111:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"63103:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"63177:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63190:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"63201:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63186:3:27"},"nodeType":"YulFunctionCall","src":"63186:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"63139:37:27"},"nodeType":"YulFunctionCall","src":"63139:65:27"},"nodeType":"YulExpressionStatement","src":"63139:65:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63225:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"63236:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63221:3:27"},"nodeType":"YulFunctionCall","src":"63221:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"63245:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"63251:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"63241:3:27"},"nodeType":"YulFunctionCall","src":"63241:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"63214:6:27"},"nodeType":"YulFunctionCall","src":"63214:48:27"},"nodeType":"YulExpressionStatement","src":"63214:48:27"},{"nodeType":"YulAssignment","src":"63271:84:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"63341:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"63350:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"63279:61:27"},"nodeType":"YulFunctionCall","src":"63279:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"63271:4:27"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"63057:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"63069:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"63077:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"63088:4:27","type":""}],"src":"62955:407:27"},{"body":{"nodeType":"YulBlock","src":"63413:105:27","statements":[{"nodeType":"YulAssignment","src":"63423:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63438:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"63445:66:27","type":"","value":"0xffffffffffffffffffff00000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"63434:3:27"},"nodeType":"YulFunctionCall","src":"63434:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"63423:7:27"}]}]},"name":"cleanup_t_bytes10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63395:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"63405:7:27","type":""}],"src":"63368:150:27"},{"body":{"nodeType":"YulBlock","src":"63571:32:27","statements":[{"nodeType":"YulAssignment","src":"63581:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"63592:5:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"63581:7:27"}]}]},"name":"leftAlign_t_bytes10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63553:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"63563:7:27","type":""}],"src":"63524:79:27"},{"body":{"nodeType":"YulBlock","src":"63692:74:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"63709:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63752:5:27"}],"functionName":{"name":"cleanup_t_bytes10","nodeType":"YulIdentifier","src":"63734:17:27"},"nodeType":"YulFunctionCall","src":"63734:24:27"}],"functionName":{"name":"leftAlign_t_bytes10","nodeType":"YulIdentifier","src":"63714:19:27"},"nodeType":"YulFunctionCall","src":"63714:45:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"63702:6:27"},"nodeType":"YulFunctionCall","src":"63702:58:27"},"nodeType":"YulExpressionStatement","src":"63702:58:27"}]},"name":"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63680:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"63687:3:27","type":""}],"src":"63609:157:27"},{"body":{"nodeType":"YulBlock","src":"63816:105:27","statements":[{"nodeType":"YulAssignment","src":"63826:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63841:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"63848:66:27","type":"","value":"0xffff000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"63837:3:27"},"nodeType":"YulFunctionCall","src":"63837:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"63826:7:27"}]}]},"name":"cleanup_t_bytes2","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63798:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"63808:7:27","type":""}],"src":"63772:149:27"},{"body":{"nodeType":"YulBlock","src":"63973:32:27","statements":[{"nodeType":"YulAssignment","src":"63983:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"63994:5:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"63983:7:27"}]}]},"name":"leftAlign_t_bytes2","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63955:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"63965:7:27","type":""}],"src":"63927:78:27"},{"body":{"nodeType":"YulBlock","src":"64092:72:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64109:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"64150:5:27"}],"functionName":{"name":"cleanup_t_bytes2","nodeType":"YulIdentifier","src":"64133:16:27"},"nodeType":"YulFunctionCall","src":"64133:23:27"}],"functionName":{"name":"leftAlign_t_bytes2","nodeType":"YulIdentifier","src":"64114:18:27"},"nodeType":"YulFunctionCall","src":"64114:43:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64102:6:27"},"nodeType":"YulFunctionCall","src":"64102:56:27"},"nodeType":"YulExpressionStatement","src":"64102:56:27"}]},"name":"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"64080:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"64087:3:27","type":""}],"src":"64011:153:27"},{"body":{"nodeType":"YulBlock","src":"64217:32:27","statements":[{"nodeType":"YulAssignment","src":"64227:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"64238:5:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"64227:7:27"}]}]},"name":"leftAlign_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"64199:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"64209:7:27","type":""}],"src":"64170:79:27"},{"body":{"nodeType":"YulBlock","src":"64338:74:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64355:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"64398:5:27"}],"functionName":{"name":"cleanup_t_bytes20","nodeType":"YulIdentifier","src":"64380:17:27"},"nodeType":"YulFunctionCall","src":"64380:24:27"}],"functionName":{"name":"leftAlign_t_bytes20","nodeType":"YulIdentifier","src":"64360:19:27"},"nodeType":"YulFunctionCall","src":"64360:45:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64348:6:27"},"nodeType":"YulFunctionCall","src":"64348:58:27"},"nodeType":"YulExpressionStatement","src":"64348:58:27"}]},"name":"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"64326:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"64333:3:27","type":""}],"src":"64255:157:27"},{"body":{"nodeType":"YulBlock","src":"64588:363:27","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"64661:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"64670:3:27"}],"functionName":{"name":"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"64599:61:27"},"nodeType":"YulFunctionCall","src":"64599:75:27"},"nodeType":"YulExpressionStatement","src":"64599:75:27"},{"nodeType":"YulAssignment","src":"64683:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64694:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"64699:2:27","type":"","value":"10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64690:3:27"},"nodeType":"YulFunctionCall","src":"64690:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"64683:3:27"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"64772:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"64781:3:27"}],"functionName":{"name":"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"64712:59:27"},"nodeType":"YulFunctionCall","src":"64712:73:27"},"nodeType":"YulExpressionStatement","src":"64712:73:27"},{"nodeType":"YulAssignment","src":"64794:18:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64805:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"64810:1:27","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64801:3:27"},"nodeType":"YulFunctionCall","src":"64801:11:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"64794:3:27"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"64884:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"64893:3:27"}],"functionName":{"name":"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"64822:61:27"},"nodeType":"YulFunctionCall","src":"64822:75:27"},"nodeType":"YulExpressionStatement","src":"64822:75:27"},{"nodeType":"YulAssignment","src":"64906:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64917:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"64922:2:27","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64913:3:27"},"nodeType":"YulFunctionCall","src":"64913:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"64906:3:27"}]},{"nodeType":"YulAssignment","src":"64935:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"64942:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"64935:3:27"}]}]},"name":"abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"64551:3:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"64557:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"64565:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"64573:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"64584:3:27","type":""}],"src":"64418:533:27"},{"body":{"nodeType":"YulBlock","src":"65012:99:27","statements":[{"nodeType":"YulVariableDeclaration","src":"65023:42:27","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"65060:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"65054:5:27"},"nodeType":"YulFunctionCall","src":"65054:10:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"65036:17:27"},"nodeType":"YulFunctionCall","src":"65036:29:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"65027:5:27","type":""}]},{"nodeType":"YulAssignment","src":"65075:29:27","value":{"name":"value","nodeType":"YulIdentifier","src":"65099:5:27"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"65075:11:27"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"64992:3:27","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"65000:11:27","type":""}],"src":"64957:154:27"},{"body":{"nodeType":"YulBlock","src":"65207:504:27","statements":[{"nodeType":"YulVariableDeclaration","src":"65218:52:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"65264:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"65232:31:27"},"nodeType":"YulFunctionCall","src":"65232:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"65222:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"65279:21:27","value":{"name":"array","nodeType":"YulIdentifier","src":"65295:5:27"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"65283:8:27","type":""}]},{"nodeType":"YulAssignment","src":"65310:52:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"65356:5:27"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"65322:33:27"},"nodeType":"YulFunctionCall","src":"65322:40:27"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"65310:8:27"}]},{"nodeType":"YulAssignment","src":"65372:44:27","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"65407:8:27"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"65381:25:27"},"nodeType":"YulFunctionCall","src":"65381:35:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"65372:5:27"}]},{"body":{"nodeType":"YulBlock","src":"65444:260:27","statements":[{"nodeType":"YulAssignment","src":"65458:236:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"65488:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"65555:1:27","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"65562:2:27","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"65566:6:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"65558:3:27"},"nodeType":"YulFunctionCall","src":"65558:15:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"65551:3:27"},"nodeType":"YulFunctionCall","src":"65551:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"65596:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"65511:18:27"},"nodeType":"YulFunctionCall","src":"65511:169:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"65467:3:27"},"nodeType":"YulFunctionCall","src":"65467:227:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"65458:5:27"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"65432:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"65440:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"65429:2:27"},"nodeType":"YulFunctionCall","src":"65429:14:27"},"nodeType":"YulIf","src":"65426:278:27"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"65191:5:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"65201:5:27","type":""}],"src":"65117:594:27"},{"body":{"nodeType":"YulBlock","src":"65861:275:27","statements":[{"nodeType":"YulAssignment","src":"65871:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65883:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"65894:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65879:3:27"},"nodeType":"YulFunctionCall","src":"65879:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"65871:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"65951:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65964:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"65975:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65960:3:27"},"nodeType":"YulFunctionCall","src":"65960:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"65907:43:27"},"nodeType":"YulFunctionCall","src":"65907:71:27"},"nodeType":"YulExpressionStatement","src":"65907:71:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65999:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"66010:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65995:3:27"},"nodeType":"YulFunctionCall","src":"65995:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"66019:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"66025:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"66015:3:27"},"nodeType":"YulFunctionCall","src":"66015:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65988:6:27"},"nodeType":"YulFunctionCall","src":"65988:48:27"},"nodeType":"YulExpressionStatement","src":"65988:48:27"},{"nodeType":"YulAssignment","src":"66045:84:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"66115:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"66124:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"66053:61:27"},"nodeType":"YulFunctionCall","src":"66053:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"66045:4:27"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"65825:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"65837:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"65845:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"65856:4:27","type":""}],"src":"65717:419:27"},{"body":{"nodeType":"YulBlock","src":"66236:338:27","statements":[{"nodeType":"YulAssignment","src":"66246:74:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"66312:6:27"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"66271:40:27"},"nodeType":"YulFunctionCall","src":"66271:48:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"66255:15:27"},"nodeType":"YulFunctionCall","src":"66255:65:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"66246:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"66336:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"66343:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"66329:6:27"},"nodeType":"YulFunctionCall","src":"66329:21:27"},"nodeType":"YulExpressionStatement","src":"66329:21:27"},{"nodeType":"YulVariableDeclaration","src":"66359:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"66374:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"66381:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66370:3:27"},"nodeType":"YulFunctionCall","src":"66370:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"66363:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"66424:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"66426:77:27"},"nodeType":"YulFunctionCall","src":"66426:79:27"},"nodeType":"YulExpressionStatement","src":"66426:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"66405:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"66410:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66401:3:27"},"nodeType":"YulFunctionCall","src":"66401:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"66419:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"66398:2:27"},"nodeType":"YulFunctionCall","src":"66398:25:27"},"nodeType":"YulIf","src":"66395:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"66551:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"66556:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"66561:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"66516:34:27"},"nodeType":"YulFunctionCall","src":"66516:52:27"},"nodeType":"YulExpressionStatement","src":"66516:52:27"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"66209:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"66214:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"66222:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"66230:5:27","type":""}],"src":"66142:432:27"},{"body":{"nodeType":"YulBlock","src":"66665:281:27","statements":[{"body":{"nodeType":"YulBlock","src":"66714:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"66716:77:27"},"nodeType":"YulFunctionCall","src":"66716:79:27"},"nodeType":"YulExpressionStatement","src":"66716:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"66693:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"66701:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66689:3:27"},"nodeType":"YulFunctionCall","src":"66689:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"66708:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"66685:3:27"},"nodeType":"YulFunctionCall","src":"66685:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"66678:6:27"},"nodeType":"YulFunctionCall","src":"66678:35:27"},"nodeType":"YulIf","src":"66675:122:27"},{"nodeType":"YulVariableDeclaration","src":"66806:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"66826:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"66820:5:27"},"nodeType":"YulFunctionCall","src":"66820:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"66810:6:27","type":""}]},{"nodeType":"YulAssignment","src":"66842:98:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"66913:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"66921:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66909:3:27"},"nodeType":"YulFunctionCall","src":"66909:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"66928:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"66936:3:27"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"66851:57:27"},"nodeType":"YulFunctionCall","src":"66851:89:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"66842:5:27"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"66643:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"66651:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"66659:5:27","type":""}],"src":"66593:353:27"},{"body":{"nodeType":"YulBlock","src":"67038:436:27","statements":[{"body":{"nodeType":"YulBlock","src":"67084:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"67086:77:27"},"nodeType":"YulFunctionCall","src":"67086:79:27"},"nodeType":"YulExpressionStatement","src":"67086:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"67059:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"67068:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"67055:3:27"},"nodeType":"YulFunctionCall","src":"67055:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"67080:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"67051:3:27"},"nodeType":"YulFunctionCall","src":"67051:32:27"},"nodeType":"YulIf","src":"67048:119:27"},{"nodeType":"YulBlock","src":"67177:290:27","statements":[{"nodeType":"YulVariableDeclaration","src":"67192:38:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"67216:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"67227:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67212:3:27"},"nodeType":"YulFunctionCall","src":"67212:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67206:5:27"},"nodeType":"YulFunctionCall","src":"67206:24:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"67196:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"67277:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"67279:77:27"},"nodeType":"YulFunctionCall","src":"67279:79:27"},"nodeType":"YulExpressionStatement","src":"67279:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"67249:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"67257:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"67246:2:27"},"nodeType":"YulFunctionCall","src":"67246:30:27"},"nodeType":"YulIf","src":"67243:117:27"},{"nodeType":"YulAssignment","src":"67374:83:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"67429:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"67440:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67425:3:27"},"nodeType":"YulFunctionCall","src":"67425:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"67449:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"67384:40:27"},"nodeType":"YulFunctionCall","src":"67384:73:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"67374:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"67008:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"67019:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"67031:6:27","type":""}],"src":"66952:522:27"},{"body":{"nodeType":"YulBlock","src":"67525:149:27","statements":[{"nodeType":"YulAssignment","src":"67535:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"67558:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"67540:17:27"},"nodeType":"YulFunctionCall","src":"67540:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"67535:1:27"}]},{"nodeType":"YulAssignment","src":"67569:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"67592:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"67574:17:27"},"nodeType":"YulFunctionCall","src":"67574:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"67569:1:27"}]},{"nodeType":"YulAssignment","src":"67603:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"67615:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"67618:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"67611:3:27"},"nodeType":"YulFunctionCall","src":"67611:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"67603:4:27"}]},{"body":{"nodeType":"YulBlock","src":"67645:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"67647:16:27"},"nodeType":"YulFunctionCall","src":"67647:18:27"},"nodeType":"YulExpressionStatement","src":"67647:18:27"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"67636:4:27"},{"name":"x","nodeType":"YulIdentifier","src":"67642:1:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"67633:2:27"},"nodeType":"YulFunctionCall","src":"67633:11:27"},"nodeType":"YulIf","src":"67630:37:27"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"67511:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"67514:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"67520:4:27","type":""}],"src":"67480:194:27"},{"body":{"nodeType":"YulBlock","src":"67708:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"67725:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"67728:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"67718:6:27"},"nodeType":"YulFunctionCall","src":"67718:88:27"},"nodeType":"YulExpressionStatement","src":"67718:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"67822:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"67825:4:27","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"67815:6:27"},"nodeType":"YulFunctionCall","src":"67815:15:27"},"nodeType":"YulExpressionStatement","src":"67815:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"67846:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"67849:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"67839:6:27"},"nodeType":"YulFunctionCall","src":"67839:15:27"},"nodeType":"YulExpressionStatement","src":"67839:15:27"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"67680:180:27"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0000000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_enum$_Difficulty_$4607(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Difficulty_$4607(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Difficulty_$4607(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Difficulty_$4607(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Difficulty_$4607(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bytes32t_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bool_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bool[]\n    function abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bool_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bool(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bool[]\n    function abi_decode_t_array$_t_bool_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_bool_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Difficulty_$4607(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Difficulty_$4607(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_Difficulty_$4607t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Difficulty_$4607(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32t_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid secret code\")\n\n    }\n\n    function abi_encode_t_stringliteral_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4f531adafb8d8cd89bee57f6fd9332dd452e5c277ed06feb043f354b491d8b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not the highest score\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a1521f9df8720797df63f2a29f07d9e3d1f372f435c481d4c2cb757145dc505_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_assert_t_enum$_Difficulty_$4607(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Difficulty_$4607(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Difficulty_$4607(value)\n    }\n\n    function convert_t_enum$_Difficulty_$4607_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Difficulty_$4607(value)\n    }\n\n    function shift_left_248(value) -> newValue {\n        newValue :=\n\n        shl(248, value)\n\n    }\n\n    function leftAlign_t_uint8(value) -> aligned {\n        aligned := shift_left_248(value)\n    }\n\n    function abi_encode_t_enum$_Difficulty_$4607_to_t_uint8_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint8(convert_t_enum$_Difficulty_$4607_to_t_uint8(value)))\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_enum$_Difficulty_$4607_t_bytes32__to_t_address_t_uint8_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_enum$_Difficulty_$4607_to_t_uint8_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 1)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bytes32__to_t_address_t_address_t_bytes32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function read_from_memoryt_bytes20(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes20(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes20(dataArea)\n\n        if lt(length, 20) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(20, length)),\n                    0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910(memPtr) {\n\n        mstore(add(memPtr, 0), \"First Place NFTs are non-transfe\")\n\n        mstore(add(memPtr, 32), \"rable\")\n\n    }\n\n    function abi_encode_t_stringliteral_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_338e0c067eadd77ab5306dca39b75fb7ecc9c94cbd2314b4bde866aed9e88910_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0006000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_e580472a9795b10c3d85f245b4d05a0bebbb0cae1257ffd1a66c327439f62863_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function cleanup_t_bytes10(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff00000000000000000000000000000000000000000000)\n    }\n\n    function leftAlign_t_bytes10(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes10(cleanup_t_bytes10(value)))\n    }\n\n    function cleanup_t_bytes2(value) -> cleaned {\n        cleaned := and(value, 0xffff000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function leftAlign_t_bytes2(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes2(cleanup_t_bytes2(value)))\n    }\n\n    function leftAlign_t_bytes20(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes20(cleanup_t_bytes20(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 10)\n\n        abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 2)\n\n        abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101bb5760003560e01c80637f23690c116100ec578063be9f0e6f1161008a578063db8c966311610064578063db8c966314610751578063dedff9c61461077a578063f2fde38b146107b7578063fffc2c94146107e057610235565b8063be9f0e6f146106d6578063cdca9f39146106ff578063d6c1407c1461072857610235565b80638da5cb5b116100c65780638da5cb5b146106155780638f22d85314610640578063979024211461067d578063a3b261f21461069957610235565b80637f23690c1461059357806386a10ddd146105af5780638d959c24146105d857610235565b80634fc4289c116101595780636963d438116101335780636963d438146104d957806370a0823114610516578063715018a6146105535780637e87632c1461056a57610235565b80634fc4289c14610436578063511b69521461047357806354f6127f1461049c57610235565b80631d26fce6116101955780631d26fce614610342578063217b22701461037f5780632a3654a4146103bc57806349a6078d146103f957610235565b806301ffc9a71461029d57806316e023b3146102da57806318160ddd1461031757610235565b366102355760003403610203576040517fe5099ee30000000000000000000000000000000000000000000000000000000081526004016101fa90613685565b60405180910390fd5b6040517f61f4944200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660606004600036905010156102865782826040517fe5099ee300000000000000000000000000000000000000000000000000000000815260040161027d9291906136f2565b60405180910390fd5b610290838361081e565b9050915050805190602001f35b3480156102a957600080fd5b506102c460048036038101906102bf9190613782565b61099c565b6040516102d191906137ca565b60405180910390f35b3480156102e657600080fd5b5061030160048036038101906102fc919061381b565b610a0d565b60405161030e91906138c9565b60405180910390f35b34801561032357600080fd5b5061032c610a21565b6040516103399190613904565b60405180910390f35b34801561034e57600080fd5b5061036960048036038101906103649190613a67565b610a2b565b6040516103769190613beb565b60405180910390f35b34801561038b57600080fd5b506103a660048036038101906103a19190613c0d565b610b33565b6040516103b39190613c7b565b60405180910390f35b3480156103c857600080fd5b506103e360048036038101906103de9190613cc2565b610be6565b6040516103f091906137ca565b60405180910390f35b34801561040557600080fd5b50610420600480360381019061041b9190613c0d565b610bfa565b60405161042d9190613dc0565b60405180910390f35b34801561044257600080fd5b5061045d60048036038101906104589190613e07565b610c27565b60405161046a9190613e89565b60405180910390f35b34801561047f57600080fd5b5061049a60048036038101906104959190613f7d565b610cc7565b005b3480156104a857600080fd5b506104c360048036038101906104be9190613c0d565b610d28565b6040516104d091906138c9565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb919061406f565b610d3a565b60405161050d9190613beb565b60405180910390f35b34801561052257600080fd5b5061053d600480360381019061053891906140bc565b610eb6565b60405161054a9190613904565b60405180910390f35b34801561055f57600080fd5b50610568610f06565b005b34801561057657600080fd5b50610591600480360381019061058c9190614350565b610f1a565b005b6105ad60048036038101906105a89190614457565b61102e565b005b3480156105bb57600080fd5b506105d660048036038101906105d191906144b3565b61107e565b005b3480156105e457600080fd5b506105ff60048036038101906105fa9190613c0d565b6112da565b60405161060c91906138c9565b60405180910390f35b34801561062157600080fd5b5061062a6112ec565b6040516106379190613c7b565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190614522565b611315565b60405161067491906137ca565b60405180910390f35b61069760048036038101906106929190614562565b611344565b005b3480156106a557600080fd5b506106c060048036038101906106bb91906140bc565b611394565b6040516106cd9190614698565b60405180910390f35b3480156106e257600080fd5b506106fd60048036038101906106f891906146ba565b6113e4565b005b34801561070b57600080fd5b506107266004803603810190610721919061482e565b6114e7565b005b34801561073457600080fd5b5061074f600480360381019061074a919061489d565b611be3565b005b34801561075d57600080fd5b506107786004803603810190610773919061490c565b611bfb565b005b34801561078657600080fd5b506107a1600480360381019061079c919061498f565b611dcc565b6040516107ae9190613beb565b60405180910390f35b3480156107c357600080fd5b506107de60048036038101906107d991906140bc565b611e7d565b005b3480156107ec57600080fd5b5061080760048036038101906108029190613e07565b611f00565b6040516108159291906149d8565b60405180910390f35b6060600061084f6000357fffffffff0000000000000000000000000000000000000000000000000000000016611f44565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e7576000357fffffffff00000000000000000000000000000000000000000000000000000000166040517fbb370b2b0000000000000000000000000000000000000000000000000000000081526004016108de9190614a10565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1634878733346040516020016109199493929190614ac4565b6040516020818303038152906040526040516109359190614b30565b60006040518083038185875af1925050503d8060008114610972576040519150601f19603f3d011682016040523d82523d6000602084013e610977565b606091505b5091509150811561098d57809350505050610996565b80518060208301fd5b92915050565b6000633a27170660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109f657506109f582611ffe565b5b80610a065750610a058261205f565b5b9050919050565b6060610a1983836120c6565b905092915050565b6000600254905090565b60608151835114610a68576040517f2fa71dfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825167ffffffffffffffff811115610a8357610a82613924565b5b604051908082528060200260200182016040528015610ab657816020015b6060815260200190600190039081610aa15790505b50905060005b8351811015610b2c57610b03848281518110610adb57610ada614b47565b5b6020026020010151848381518110610af657610af5614b47565b5b60200260200101516120c6565b828281518110610b1657610b15614b47565b5b6020026020010181905250806001019050610abc565b5092915050565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bdd57826040517fae8f9a36000000000000000000000000000000000000000000000000000000008152600401610bd49190614b85565b60405180910390fd5b80915050919050565b6000610bf28383612194565b905092915050565b6060610c0582612201565b610c206005600084815260200190815260200160002061224e565b9050919050565b60086020528060005260406000206000915090508054610c4690614bcf565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7290614bcf565b8015610cbf5780601f10610c9457610100808354040283529160200191610cbf565b820191906000526020600020905b815481529060010190602001808311610ca257829003601f168201915b505050505081565b610cd13384612194565b610d145782336040517f1294d2a9000000000000000000000000000000000000000000000000000000008152600401610d0b929190614c00565b60405180910390fd5b610d21858585858561226f565b5050505050565b6060610d33826122aa565b9050919050565b60608282905067ffffffffffffffff811115610d5957610d58613924565b5b604051908082528060200260200182016040528015610d8c57816020015b6060815260200190600190039081610d775790505b50905060005b83839050811015610eaf576000803073ffffffffffffffffffffffffffffffffffffffff16868685818110610dca57610dc9614b47565b5b9050602002810190610ddc9190614c38565b604051610dea929190614c9b565b600060405180830381855af49150503d8060008114610e25576040519150601f19603f3d011682016040523d82523d6000602084013e610e2a565b606091505b509150915081610e83576000815114610e465780518082602001fd5b826040517f234eb819000000000000000000000000000000000000000000000000000000008152600401610e7a9190613904565b60405180910390fd5b80848481518110610e9757610e96614b47565b5b60200260200101819052508260010192505050610d92565b5092915050565b6000610eff600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061234f565b9050919050565b610f0e612364565b610f1860006123e2565b565b600085519050845181141580610f31575083518114155b80610f3d575082518114155b80610f49575081518114155b15610f80576040517f93a8311900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b818110156110255761101a878281518110610fa157610fa0614b47565b5b6020026020010151878381518110610fbc57610fbb614b47565b5b6020026020010151878481518110610fd757610fd6614b47565b5b6020026020010151878581518110610ff257610ff1614b47565b5b602002602001015187868151811061100d5761100c614b47565b5b6020026020010151610cc7565b806001019050610f83565b50505050505050565b611036612364565b60003414611070576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61107a82826124a6565b5050565b600061108983610b33565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110ff578083336040517f5b271ea20000000000000000000000000000000000000000000000000000000081526004016110f693929190614cb4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611165576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ca576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006111f1856005600087815260200190815260200160002061251090919063ffffffff16565b9050806112375784846040517fa7626b6800000000000000000000000000000000000000000000000000000000815260040161122e929190614ceb565b60405180910390fd5b838273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc2366712158660405161129591906138c9565b60405180910390a4600033856001866040516020016112b79493929190614d14565b60405160208183030381529060405290506112d28682612540565b505050505050565b60606112e5826122aa565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60076020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b61134c612364565b60003414611386576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113908282612572565b5050565b60606113dd600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612642565b9050919050565b6113ec612364565b815183511415806113ff57508051825114155b15611436576040517f2fa71dfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000835103611471576040517f80c9830500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b83518110156114e1576114d684828151811061149357611492614b47565b5b60200260200101518483815181106114ae576114ad614b47565b5b60200260200101518484815181106114c9576114c8614b47565b5b6020026020010151612663565b806001019050611474565b50505050565b600954816040516020016114fb9190614d9c565b6040516020818303038152906040528051906020012014611551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154890614dff565b60405180910390fd5b60006006600084600281111561156a57611569614e1f565b5b600281111561157c5761157b614e1f565b5b81526020019081526020016000209050806001015484116115d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c990614e9a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611699578381600101819055503373ffffffffffffffffffffffffffffffffffffffff1683600281111561165c5761165b614e1f565b5b7f300ff980efdfcbf9315c1929dbd04369fe492b36170e95357766ec52103924f68660405161168b9190613904565b60405180910390a350611bde565b600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561179c5750600760008260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600281111561176d5761176c614e1f565b5b600281111561177f5761177e614e1f565b5b815260200190815260200160002060009054906101000a900460ff165b1561198b5760008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16847f8c14e706f344a21eb23261ab6a4811d5599e56e890562777a6914925a59512736040516020016117fc93929190614f4a565b604051602081830303815290604052805190602001209050611853816040518060400160405280601781526020017f466972737420506c616365204e4654207265766f6b65640000000000000000008152506126ea565b6000600760008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008660028111156118cd576118cc614e1f565b5b60028111156118df576118de614e1f565b5b815260200190815260200160002060006101000a81548160ff0219169083151502179055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1684600281111561195257611951614e1f565b5b7f6d74bd0bfb57711860bd7d6d0648d03e2fdff362f5f46a8f91388d8f39911d08836040516119819190614b85565b60405180910390a3505b600033847f8c14e706f344a21eb23261ab6a4811d5599e56e890562777a6914925a59512736040516020016119c293929190614f4a565b604051602081830303815290604052805190602001209050611a1c338260016040518060400160405280600f81526020017f466972737420506c616365204e46540000000000000000000000000000000000815250612871565b611a268185612aed565b611a4030826040518060200160405280600081525061107e565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000866002811115611a9657611a95614e1f565b5b6002811115611aa857611aa7614e1f565b5b815260200190815260200160002060006101000a81548160ff021916908315150217905550338260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508482600101819055503373ffffffffffffffffffffffffffffffffffffffff16846002811115611b4357611b42614e1f565b5b7f300ff980efdfcbf9315c1929dbd04369fe492b36170e95357766ec52103924f687604051611b729190613904565b60405180910390a33373ffffffffffffffffffffffffffffffffffffffff16846002811115611ba457611ba3614e1f565b5b7fb292d132bb6533ea558b88bbe806f164b9034ea4d33ee745e74e2dd96070181283604051611bd39190614b85565b60405180910390a350505b505050565b611beb612364565b611bf6838383612663565b505050565b6000611c0684610b33565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611cb0573373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611caf573381856040517f760b5acd000000000000000000000000000000000000000000000000000000008152600401611ca693929190614f87565b60405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611d16576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611d7b576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d888582868686612be5565b8215611dc55760008185600085604051602001611da89493929190614d14565b6040516020818303038152906040529050611dc38682612540565b505b5050505050565b6060815167ffffffffffffffff811115611de957611de8613924565b5b604051908082528060200260200182016040528015611e1c57816020015b6060815260200190600190039081611e075790505b50905060005b8251811015611e7757611e4e838281518110611e4157611e40614b47565b5b60200260200101516122aa565b828281518110611e6157611e60614b47565b5b6020026020010181905250806001019050611e22565b50919050565b611e85612364565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ef4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eeb90615030565b60405180910390fd5b611efd816123e2565b50565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000806000611f7f69cee78b4094da8601109660b01b857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916612cc2565b90506000611f8c826122aa565b90506014815114158015611fa257506000815114155b15611fe457806040517f42bfe79f000000000000000000000000000000000000000000000000000000008152600401611fdb91906138c9565b60405180910390fd5b80611fee906150ae565b60601c6001935093505050915091565b600063a918fa6b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612058575061205782612d02565b5b9050919050565b6000806120726301ffc9a760e01b611f44565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036120b35760009150506120c1565b6120bd8184612d63565b9150505b919050565b60606001600084846040516020016120df929190615115565b604051602081830303815290604052805190602001208152602001908152602001600020805461210e90614bcf565b80601f016020809104026020016040519081016040528092919081815260200182805461213a90614bcf565b80156121875780601f1061215c57610100808354040283529160200191612187565b820191906000526020600020905b81548152906001019060200180831161216a57829003601f168201915b5050505050905092915050565b600061219f82610b33565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806121f957506121f88360056000858152602001908152602001600020612e2290919063ffffffff16565b5b905092915050565b61220a81612e52565b61224b57806040517fae8f9a360000000000000000000000000000000000000000000000000000000081526004016122429190614b85565b60405180910390fd5b50565b6060600061225e83600001612ebe565b905060608190508092505050919050565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a1906151b3565b60405180910390fd5b60606001600083815260200190815260200160002080546122ca90614bcf565b80601f01602080910402602001604051908101604052809291908181526020018280546122f690614bcf565b80156123435780601f1061231857610100808354040283529160200191612343565b820191906000526020600020905b81548152906001019060200180831161232657829003601f168201915b50505050509050919050565b600061235d82600001612f1a565b9050919050565b61236c612f2b565b73ffffffffffffffffffffffffffffffffffffffff1661238a6112ec565b73ffffffffffffffffffffffffffffffffffffffff16146123e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123d79061521f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d60001b8203612502576040517f3664800a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61250c8282612f33565b5050565b6000612538836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6130a4565b905092915050565b61256e827f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097060001b83613114565b5050565b80518251146125ad576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008251036125e8576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561263d5761263283828151811061260a57612609614b47565b5b602002602001015183838151811061262557612624614b47565b5b60200260200101516124a6565b8060010190506125eb565b505050565b6060600061265283600001612ebe565b905060608190508092505050919050565b8060016000858560405160200161267b929190615115565b60405160208183030381529060405280519060200120815260200190815260200160002090816126ab91906153de565b5081837fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb836040516126dd91906138c9565b60405180910390a3505050565b60006126f583610b33565b9050612706816000856000866131d3565b61270f83610b33565b9050600260008154612720906154df565b9190508190555061273181846131da565b61278283600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061325090919063ffffffff16565b506003600084815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905582600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf3360008760405161281d93929190615508565b60405180910390a461283481600085600086613267565b6000338260008686604051602001612850959493929190615546565b604051602081830303815290604052905061286b828261326e565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036128d7576040517f24ecef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128e083612e52565b1561292257826040517f34c7b5110000000000000000000000000000000000000000000000000000000081526004016129199190614b85565b60405180910390fd5b6129306000858585856131d3565b61293983612e52565b1561297b57826040517f34c7b5110000000000000000000000000000000000000000000000000000000081526004016129729190614b85565b60405180910390fd5b60026000815461298a906155a0565b919050819055506129e283600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206132a090919063ffffffff16565b50836003600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf338686604051612a9893929190615508565b60405180910390a4612aae600085858585613267565b6000336000868685604051602001612aca959493929190615546565b6040516020818303038152906040529050612ae68584836132b7565b5050505050565b600060086000836002811115612b0657612b05614e1f565b5b6002811115612b1857612b17614e1f565b5b81526020019081526020016000208054612b3190614bcf565b80601f0160208091040260200160405190810160405280929190818152602001828054612b5d90614bcf565b8015612baa5780601f10612b7f57610100808354040283529160200191612baa565b820191906000526020600020905b815481529060010190602001808311612b8d57829003601f168201915b50505050509050600081604051602001612bc49190615633565b6040516020818303038152906040529050612bdf84826124a6565b50505050565b6000612c0c866005600087815260200190815260200160002061341d90919063ffffffff16565b905080612c525785846040517f4aa31a8c000000000000000000000000000000000000000000000000000000008152600401612c49929190614ceb565b60405180910390fd5b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c8686604051612cb2929190615655565b60405180910390a4505050505050565b60008083600060f01b84604051602001612cde93929190615740565b604051602081830303815290604052905080612cf990615792565b91505092915050565b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612d5c5750612d5b8261344d565b5b9050919050565b6000806301ffc9a760e01b83604051602401612d7f9190614a10565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015612e0a575060208210155b8015612e165750600081115b94505050505092915050565b6000612e4a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6134b7565b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b606081600001805480602002602001604051908101604052809291908181526020018280548015612f0e57602002820191906000526020600020905b815481526020019060010190808311612efa575b50505050509050919050565b600081600001805490509050919050565b600033905090565b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b8203612f8f576040517f85c169bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b8203612feb576040517f76755b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b8203613047576040517f4ef6d7fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060016000848152602001908152602001600020908161306791906153de565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405161309891906138c9565b60405180910390a25050565b60006130b083836134b7565b61310957826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061310e565b600090505b92915050565b613144636bb56a1460e01b8473ffffffffffffffffffffffffffffffffffffffff16612d6390919063ffffffff16565b156131ce578273ffffffffffffffffffffffffffffffffffffffff16636bb56a1483836040518363ffffffff1660e01b81526004016131849291906157f9565b6000604051808303816000875af11580156131a3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906131cc9190615899565b505b505050565b5050505050565b600060056000838152602001908152602001600020905060006131fc826134da565b90506000805b828110156132485761321e6000856134ef90919063ffffffff16565b915061323d828787600060405180602001604052806000815250612be5565b806001019050613202565b505050505050565b600061325f8360000183613509565b905092915050565b5050505050565b61329c827fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0060001b83613114565b5050565b60006132af83600001836130a4565b905092915050565b6132c883636bb56a1460e01b612d63565b15613379578273ffffffffffffffffffffffffffffffffffffffff16636bb56a147f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d60001b836040518363ffffffff1660e01b815260040161332b9291906157f9565b6000604051808303816000875af115801561334a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906133739190615899565b50613418565b816134175760008373ffffffffffffffffffffffffffffffffffffffff163b146133da57826040517f4349776d0000000000000000000000000000000000000000000000000000000081526004016133d19190613c7b565b60405180910390fd5b826040517f0317313700000000000000000000000000000000000000000000000000000000815260040161340e9190613c7b565b60405180910390fd5b5b505050565b6000613445836000018373ffffffffffffffffffffffffffffffffffffffff1660001b613509565b905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60006134e882600001612f1a565b9050919050565b60006134fe836000018361361d565b60001c905092915050565b6000808360010160008481526020019081526020016000205490506000811461361157600060018261353b91906158e2565b905060006001866000018054905061355391906158e2565b90508181146135c257600086600001828154811061357457613573614b47565b5b906000526020600020015490508087600001848154811061359857613597614b47565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806135d6576135d5615916565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050613617565b60009150505b92915050565b600082600001828154811061363557613634614b47565b5b9060005260206000200154905092915050565b600082825260208201905092915050565b60008082015250565b600061366f600483613648565b915061367a82613659565b602082019050919050565b6000602082019050818103600083015261369e81613662565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006136d18385613648565b93506136de8385846136a5565b6136e7836136b4565b840190509392505050565b6000602082019050818103600083015261370d8184866136c5565b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61375f8161372a565b811461376a57600080fd5b50565b60008135905061377c81613756565b92915050565b60006020828403121561379857613797613720565b5b60006137a68482850161376d565b91505092915050565b60008115159050919050565b6137c4816137af565b82525050565b60006020820190506137df60008301846137bb565b92915050565b6000819050919050565b6137f8816137e5565b811461380357600080fd5b50565b600081359050613815816137ef565b92915050565b6000806040838503121561383257613831613720565b5b600061384085828601613806565b925050602061385185828601613806565b9150509250929050565b600081519050919050565b60005b83811015613884578082015181840152602081019050613869565b60008484015250505050565b600061389b8261385b565b6138a58185613648565b93506138b5818560208601613866565b6138be816136b4565b840191505092915050565b600060208201905081810360008301526138e38184613890565b905092915050565b6000819050919050565b6138fe816138eb565b82525050565b600060208201905061391960008301846138f5565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61395c826136b4565b810181811067ffffffffffffffff8211171561397b5761397a613924565b5b80604052505050565b600061398e613716565b905061399a8282613953565b919050565b600067ffffffffffffffff8211156139ba576139b9613924565b5b602082029050602081019050919050565b600080fd5b60006139e36139de8461399f565b613984565b90508083825260208201905060208402830185811115613a0657613a056139cb565b5b835b81811015613a2f5780613a1b8882613806565b845260208401935050602081019050613a08565b5050509392505050565b600082601f830112613a4e57613a4d61391f565b5b8135613a5e8482602086016139d0565b91505092915050565b60008060408385031215613a7e57613a7d613720565b5b600083013567ffffffffffffffff811115613a9c57613a9b613725565b5b613aa885828601613a39565b925050602083013567ffffffffffffffff811115613ac957613ac8613725565b5b613ad585828601613a39565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000613b278261385b565b613b318185613b0b565b9350613b41818560208601613866565b613b4a816136b4565b840191505092915050565b6000613b618383613b1c565b905092915050565b6000602082019050919050565b6000613b8182613adf565b613b8b8185613aea565b935083602082028501613b9d85613afb565b8060005b85811015613bd95784840389528151613bba8582613b55565b9450613bc583613b69565b925060208a01995050600181019050613ba1565b50829750879550505050505092915050565b60006020820190508181036000830152613c058184613b76565b905092915050565b600060208284031215613c2357613c22613720565b5b6000613c3184828501613806565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613c6582613c3a565b9050919050565b613c7581613c5a565b82525050565b6000602082019050613c906000830184613c6c565b92915050565b613c9f81613c5a565b8114613caa57600080fd5b50565b600081359050613cbc81613c96565b92915050565b60008060408385031215613cd957613cd8613720565b5b6000613ce785828601613cad565b9250506020613cf885828601613806565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613d3781613c5a565b82525050565b6000613d498383613d2e565b60208301905092915050565b6000602082019050919050565b6000613d6d82613d02565b613d778185613d0d565b9350613d8283613d1e565b8060005b83811015613db3578151613d9a8882613d3d565b9750613da583613d55565b925050600181019050613d86565b5085935050505092915050565b60006020820190508181036000830152613dda8184613d62565b905092915050565b60038110613def57600080fd5b50565b600081359050613e0181613de2565b92915050565b600060208284031215613e1d57613e1c613720565b5b6000613e2b84828501613df2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000613e5b82613e34565b613e658185613e3f565b9350613e75818560208601613866565b613e7e816136b4565b840191505092915050565b60006020820190508181036000830152613ea38184613e50565b905092915050565b613eb4816137af565b8114613ebf57600080fd5b50565b600081359050613ed181613eab565b92915050565b600080fd5b600067ffffffffffffffff821115613ef757613ef6613924565b5b613f00826136b4565b9050602081019050919050565b6000613f20613f1b84613edc565b613984565b905082815260208101848484011115613f3c57613f3b613ed7565b5b613f478482856136a5565b509392505050565b600082601f830112613f6457613f6361391f565b5b8135613f74848260208601613f0d565b91505092915050565b600080600080600060a08688031215613f9957613f98613720565b5b6000613fa788828901613cad565b9550506020613fb888828901613cad565b9450506040613fc988828901613806565b9350506060613fda88828901613ec2565b925050608086013567ffffffffffffffff811115613ffb57613ffa613725565b5b61400788828901613f4f565b9150509295509295909350565b600080fd5b60008083601f84011261402f5761402e61391f565b5b8235905067ffffffffffffffff81111561404c5761404b614014565b5b602083019150836020820283011115614068576140676139cb565b5b9250929050565b6000806020838503121561408657614085613720565b5b600083013567ffffffffffffffff8111156140a4576140a3613725565b5b6140b085828601614019565b92509250509250929050565b6000602082840312156140d2576140d1613720565b5b60006140e084828501613cad565b91505092915050565b600067ffffffffffffffff82111561410457614103613924565b5b602082029050602081019050919050565b6000614128614123846140e9565b613984565b9050808382526020820190506020840283018581111561414b5761414a6139cb565b5b835b8181101561417457806141608882613cad565b84526020840193505060208101905061414d565b5050509392505050565b600082601f8301126141935761419261391f565b5b81356141a3848260208601614115565b91505092915050565b600067ffffffffffffffff8211156141c7576141c6613924565b5b602082029050602081019050919050565b60006141eb6141e6846141ac565b613984565b9050808382526020820190506020840283018581111561420e5761420d6139cb565b5b835b8181101561423757806142238882613ec2565b845260208401935050602081019050614210565b5050509392505050565b600082601f8301126142565761425561391f565b5b81356142668482602086016141d8565b91505092915050565b600067ffffffffffffffff82111561428a57614289613924565b5b602082029050602081019050919050565b60006142ae6142a98461426f565b613984565b905080838252602082019050602084028301858111156142d1576142d06139cb565b5b835b8181101561431857803567ffffffffffffffff8111156142f6576142f561391f565b5b8086016143038982613f4f565b855260208501945050506020810190506142d3565b5050509392505050565b600082601f8301126143375761433661391f565b5b813561434784826020860161429b565b91505092915050565b600080600080600060a0868803121561436c5761436b613720565b5b600086013567ffffffffffffffff81111561438a57614389613725565b5b6143968882890161417e565b955050602086013567ffffffffffffffff8111156143b7576143b6613725565b5b6143c38882890161417e565b945050604086013567ffffffffffffffff8111156143e4576143e3613725565b5b6143f088828901613a39565b935050606086013567ffffffffffffffff81111561441157614410613725565b5b61441d88828901614241565b925050608086013567ffffffffffffffff81111561443e5761443d613725565b5b61444a88828901614322565b9150509295509295909350565b6000806040838503121561446e5761446d613720565b5b600061447c85828601613806565b925050602083013567ffffffffffffffff81111561449d5761449c613725565b5b6144a985828601613f4f565b9150509250929050565b6000806000606084860312156144cc576144cb613720565b5b60006144da86828701613cad565b93505060206144eb86828701613806565b925050604084013567ffffffffffffffff81111561450c5761450b613725565b5b61451886828701613f4f565b9150509250925092565b6000806040838503121561453957614538613720565b5b600061454785828601613cad565b925050602061455885828601613df2565b9150509250929050565b6000806040838503121561457957614578613720565b5b600083013567ffffffffffffffff81111561459757614596613725565b5b6145a385828601613a39565b925050602083013567ffffffffffffffff8111156145c4576145c3613725565b5b6145d085828601614322565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61460f816137e5565b82525050565b60006146218383614606565b60208301905092915050565b6000602082019050919050565b6000614645826145da565b61464f81856145e5565b935061465a836145f6565b8060005b8381101561468b5781516146728882614615565b975061467d8361462d565b92505060018101905061465e565b5085935050505092915050565b600060208201905081810360008301526146b2818461463a565b905092915050565b6000806000606084860312156146d3576146d2613720565b5b600084013567ffffffffffffffff8111156146f1576146f0613725565b5b6146fd86828701613a39565b935050602084013567ffffffffffffffff81111561471e5761471d613725565b5b61472a86828701613a39565b925050604084013567ffffffffffffffff81111561474b5761474a613725565b5b61475786828701614322565b9150509250925092565b61476a816138eb565b811461477557600080fd5b50565b60008135905061478781614761565b92915050565b600067ffffffffffffffff8211156147a8576147a7613924565b5b6147b1826136b4565b9050602081019050919050565b60006147d16147cc8461478d565b613984565b9050828152602081018484840111156147ed576147ec613ed7565b5b6147f88482856136a5565b509392505050565b600082601f8301126148155761481461391f565b5b81356148258482602086016147be565b91505092915050565b60008060006060848603121561484757614846613720565b5b600061485586828701614778565b935050602061486686828701613df2565b925050604084013567ffffffffffffffff81111561488757614886613725565b5b61489386828701614800565b9150509250925092565b6000806000606084860312156148b6576148b5613720565b5b60006148c486828701613806565b93505060206148d586828701613806565b925050604084013567ffffffffffffffff8111156148f6576148f5613725565b5b61490286828701613f4f565b9150509250925092565b6000806000806080858703121561492657614925613720565b5b600061493487828801613cad565b945050602061494587828801613806565b935050604061495687828801613ec2565b925050606085013567ffffffffffffffff81111561497757614976613725565b5b61498387828801613f4f565b91505092959194509250565b6000602082840312156149a5576149a4613720565b5b600082013567ffffffffffffffff8111156149c3576149c2613725565b5b6149cf84828501613a39565b91505092915050565b60006040820190506149ed6000830185613c6c565b6149fa60208301846138f5565b9392505050565b614a0a8161372a565b82525050565b6000602082019050614a256000830184614a01565b92915050565b600081905092915050565b6000614a428385614a2b565b9350614a4f8385846136a5565b82840190509392505050565b60008160601b9050919050565b6000614a7382614a5b565b9050919050565b6000614a8582614a68565b9050919050565b614a9d614a9882613c5a565b614a7a565b82525050565b6000819050919050565b614abe614ab9826138eb565b614aa3565b82525050565b6000614ad1828688614a36565b9150614add8285614a8c565b601482019150614aed8284614aad565b60208201915081905095945050505050565b6000614b0a8261385b565b614b148185614a2b565b9350614b24818560208601613866565b80840191505092915050565b6000614b3c8284614aff565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b614b7f816137e5565b82525050565b6000602082019050614b9a6000830184614b76565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680614be757607f821691505b602082108103614bfa57614bf9614ba0565b5b50919050565b6000604082019050614c156000830185614b76565b614c226020830184613c6c565b9392505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112614c5557614c54614c29565b5b80840192508235915067ffffffffffffffff821115614c7757614c76614c2e565b5b602083019250600182023603831315614c9357614c92614c33565b5b509250929050565b6000614ca8828486614a36565b91508190509392505050565b6000606082019050614cc96000830186613c6c565b614cd66020830185614b76565b614ce36040830184613c6c565b949350505050565b6000604082019050614d006000830185613c6c565b614d0d6020830184614b76565b9392505050565b6000608082019050614d296000830187613c6c565b614d366020830186614b76565b614d4360408301856137bb565b8181036060830152614d558184613890565b905095945050505050565b600081905092915050565b6000614d7682613e34565b614d808185614d60565b9350614d90818560208601613866565b80840191505092915050565b6000614da88284614d6b565b915081905092915050565b7f496e76616c69642073656372657420636f646500000000000000000000000000600082015250565b6000614de9601383613e3f565b9150614df482614db3565b602082019050919050565b60006020820190508181036000830152614e1881614ddc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e6f742074686520686967686573742073636f72650000000000000000000000600082015250565b6000614e84601583613e3f565b9150614e8f82614e4e565b602082019050919050565b60006020820190508181036000830152614eb381614e77565b9050919050565b60038110614ecb57614eca614e1f565b5b50565b6000819050614edc82614eba565b919050565b6000614eec82614ece565b9050919050565b60008160f81b9050919050565b6000614f0b82614ef3565b9050919050565b614f23614f1e82614ee1565b614f00565b82525050565b6000819050919050565b614f44614f3f826137e5565b614f29565b82525050565b6000614f568286614a8c565b601482019150614f668285614f12565b600182019150614f768284614f33565b602082019150819050949350505050565b6000606082019050614f9c6000830186613c6c565b614fa96020830185613c6c565b614fb66040830184614b76565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061501a602683613e3f565b915061502582614fbe565b604082019050919050565b600060208201905081810360008301526150498161500d565b9050919050565b6000819050602082019050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b60006150988251615060565b80915050919050565b600082821b905092915050565b60006150b98261385b565b826150c384615050565b90506150ce8161508c565b9250601482101561510e576151097fffffffffffffffffffffffffffffffffffffffff000000000000000000000000836014036008026150a1565b831692505b5050919050565b60006151218285614f33565b6020820191506151318284614f33565b6020820191508190509392505050565b7f466972737420506c616365204e46547320617265206e6f6e2d7472616e73666560008201527f7261626c65000000000000000000000000000000000000000000000000000000602082015250565b600061519d602583613e3f565b91506151a882615141565b604082019050919050565b600060208201905081810360008301526151cc81615190565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000615209602083613e3f565b9150615214826151d3565b602082019050919050565b60006020820190508181036000830152615238816151fc565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b6000600883026152947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826150a1565b61529e86836150a1565b95508019841693508086168417925050509392505050565b6000819050919050565b60006152db6152d66152d1846138eb565b6152b6565b6138eb565b9050919050565b6000819050919050565b6152f5836152c0565b615309615301826152e2565b848454615264565b825550505050565b600090565b61531e615311565b6153298184846152ec565b505050565b5b8181101561534d57615342600082615316565b60018101905061532f565b5050565b601f821115615392576153638161523f565b61536c84615254565b8101602085101561537b578190505b61538f61538785615254565b83018261532e565b50505b505050565b600082821c905092915050565b60006153b560001984600802615397565b1980831691505092915050565b60006153ce83836153a4565b9150826002028217905092915050565b6153e78261385b565b67ffffffffffffffff811115615400576153ff613924565b5b61540a8254614bcf565b615415828285615351565b600060209050601f8311600181146154485760008415615436578287015190505b61544085826153c2565b8655506154a8565b601f1984166154568661523f565b60005b8281101561547e57848901518255600182019150602085019450602081019050615459565b8683101561549b5784890151615497601f8916826153a4565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006154ea826138eb565b9150600082036154fd576154fc6154b0565b5b600182039050919050565b600060608201905061551d6000830186613c6c565b61552a60208301856137bb565b818103604083015261553c8184613890565b9050949350505050565b600060a08201905061555b6000830188613c6c565b6155686020830187613c6c565b6155756040830186613c6c565b6155826060830185614b76565b81810360808301526155948184613890565b90509695505050505050565b60006155ab826138eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036155dd576155dc6154b0565b5b600182019050919050565b7e06000000000000000000000000000000000000000000000000000000000000600082015250565b600061561d600283614d60565b9150615628826155e8565b600282019050919050565b600061563e82615610565b915061564a8284614d6b565b915081905092915050565b600060408201905061566a60008301856137bb565b818103602083015261567c8184613890565b90509392505050565b60007fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6000819050919050565b6156cc6156c782615685565b6156b1565b82525050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b615719615714826156d2565b6156fe565b82525050565b6000819050919050565b61573a61573582615060565b61571f565b82525050565b600061574c82866156bb565b600a8201915061575c8285615708565b60028201915061576c8284615729565b601482019150819050949350505050565b600061578982516137e5565b80915050919050565b600061579d8261385b565b826157a784615050565b90506157b28161577d565b925060208210156157f2576157ed7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026150a1565b831692505b5050919050565b600060408201905061580e6000830185614b76565b81810360208301526158208184613890565b90509392505050565b600061583c61583784613edc565b613984565b90508281526020810184848401111561585857615857613ed7565b5b615863848285613866565b509392505050565b600082601f8301126158805761587f61391f565b5b8151615890848260208601615829565b91505092915050565b6000602082840312156158af576158ae613720565b5b600082015167ffffffffffffffff8111156158cd576158cc613725565b5b6158d98482850161586b565b91505092915050565b60006158ed826138eb565b91506158f8836138eb565b92508282039050818111156159105761590f6154b0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d5826caf06d073651989ede571d9ec2c6456d11512583aa6ac212fae404e56df64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F23690C GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xBE9F0E6F GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDB8C9663 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDB8C9663 EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7B7 JUMPI DUP1 PUSH4 0xFFFC2C94 EQ PUSH2 0x7E0 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0xBE9F0E6F EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0xCDCA9F39 EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0xD6C1407C EQ PUSH2 0x728 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x8F22D853 EQ PUSH2 0x640 JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xA3B261F2 EQ PUSH2 0x699 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x7F23690C EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x86A10DDD EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x8D959C24 EQ PUSH2 0x5D8 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x4FC4289C GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x6963D438 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x7E87632C EQ PUSH2 0x56A JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x4FC4289C EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x511B6952 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x49C JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x1D26FCE6 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x1D26FCE6 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x217B2270 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x2A3654A4 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x49A6078D EQ PUSH2 0x3F9 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x16E023B3 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x317 JUMPI PUSH2 0x235 JUMP JUMPDEST CALLDATASIZE PUSH2 0x235 JUMPI PUSH1 0x0 CALLVALUE SUB PUSH2 0x203 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA SWAP1 PUSH2 0x3685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x61F4944200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO PUSH2 0x286 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27D SWAP3 SWAP2 SWAP1 PUSH2 0x36F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x290 DUP4 DUP4 PUSH2 0x81E JUMP JUMPDEST SWAP1 POP SWAP2 POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x3782 JUMP JUMPDEST PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x381B JUMP JUMPDEST PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x3A67 JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x3BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x3C0D JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x3C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x3CC2 JUMP JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x3C0D JUMP JUMPDEST PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x3DC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x3E07 JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x3E89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x3F7D JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x3C0D JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x406F JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x3BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x40BC JUMP JUMPDEST PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH2 0xF06 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x591 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x4350 JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x4457 JUMP JUMPDEST PUSH2 0x102E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x44B3 JUMP JUMPDEST PUSH2 0x107E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x3C0D JUMP JUMPDEST PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62A PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x3C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x4522 JUMP JUMPDEST PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x697 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x4562 JUMP JUMPDEST PUSH2 0x1344 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x40BC JUMP JUMPDEST PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x4698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x46BA JUMP JUMPDEST PUSH2 0x13E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x726 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x721 SWAP2 SWAP1 PUSH2 0x482E JUMP JUMPDEST PUSH2 0x14E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x74F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x489D JUMP JUMPDEST PUSH2 0x1BE3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x778 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x490C JUMP JUMPDEST PUSH2 0x1BFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x498F JUMP JUMPDEST PUSH2 0x1DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0x3BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x40BC JUMP JUMPDEST PUSH2 0x1E7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x807 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x3E07 JUMP JUMPDEST PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x815 SWAP3 SWAP2 SWAP1 PUSH2 0x49D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x84F PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1F44 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x40 MLOAD PUSH32 0xBB370B2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0x4A10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE DUP8 DUP8 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x919 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x4B30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x977 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x98D JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x996 JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3A271706 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9F6 JUMPI POP PUSH2 0x9F5 DUP3 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xA06 JUMPI POP PUSH2 0xA05 DUP3 PUSH2 0x205F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA19 DUP4 DUP4 PUSH2 0x20C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2FA71DFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA83 JUMPI PUSH2 0xA82 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAB6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAA1 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xB2C JUMPI PUSH2 0xB03 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xADB JUMPI PUSH2 0xADA PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAF6 JUMPI PUSH2 0xAF5 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20C6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB16 JUMPI PUSH2 0xB15 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xABC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDD JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD4 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF2 DUP4 DUP4 PUSH2 0x2194 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC05 DUP3 PUSH2 0x2201 JUMP JUMPDEST PUSH2 0xC20 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x224E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0xC46 SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCBF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC94 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCBF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCA2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xCD1 CALLER DUP5 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0xD14 JUMPI DUP3 CALLER PUSH1 0x40 MLOAD PUSH32 0x1294D2A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP3 SWAP2 SWAP1 PUSH2 0x4C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD21 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x226F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD33 DUP3 PUSH2 0x22AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD8C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD77 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x4C38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDEA SWAP3 SWAP2 SWAP1 PUSH2 0x4C9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE25 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xE83 JUMPI PUSH1 0x0 DUP2 MLOAD EQ PUSH2 0xE46 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x234EB81900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7A SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xE97 JUMPI PUSH2 0xE96 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xD92 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFF PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x234F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0E PUSH2 0x2364 JUMP JUMPDEST PUSH2 0xF18 PUSH1 0x0 PUSH2 0x23E2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD SWAP1 POP DUP5 MLOAD DUP2 EQ ISZERO DUP1 PUSH2 0xF31 JUMPI POP DUP4 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xF3D JUMPI POP DUP3 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xF49 JUMPI POP DUP2 MLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x93A8311900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1025 JUMPI PUSH2 0x101A DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFA1 JUMPI PUSH2 0xFA0 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xFBC JUMPI PUSH2 0xFBB PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xFD7 JUMPI PUSH2 0xFD6 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xFF2 JUMPI PUSH2 0xFF1 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x100D JUMPI PUSH2 0x100C PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCC7 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xF83 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1036 PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x1070 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x107A DUP3 DUP3 PUSH2 0x24A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1089 DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10FF JUMPI DUP1 DUP4 CALLER PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11F1 DUP6 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2510 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1237 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0xA7626B6800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122E SWAP3 SWAP2 SWAP1 PUSH2 0x4CEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B1B58AA2EC0CEC2228B2D37124556D41F5A1F7B12F089171F896CC236671215 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 CALLER DUP6 PUSH1 0x1 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12B7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x12D2 DUP7 DUP3 PUSH2 0x2540 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12E5 DUP3 PUSH2 0x22AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x134C PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1390 DUP3 DUP3 PUSH2 0x2572 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13DD PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2642 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13EC PUSH2 0x2364 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ ISZERO DUP1 PUSH2 0x13FF JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1436 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2FA71DFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80C9830500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14D6 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1493 JUMPI PUSH2 0x1492 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14AE JUMPI PUSH2 0x14AD PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x14C9 JUMPI PUSH2 0x14C8 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2663 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1474 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14FB SWAP2 SWAP1 PUSH2 0x4D9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x1551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1548 SWAP1 PUSH2 0x4DFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x156A JUMPI PUSH2 0x1569 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x157C JUMPI PUSH2 0x157B PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD DUP5 GT PUSH2 0x15D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C9 SWAP1 PUSH2 0x4E9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1699 JUMPI DUP4 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH32 0x300FF980EFDFCBF9315C1929DBD04369FE492B36170E95357766EC52103924F6 DUP7 PUSH1 0x40 MLOAD PUSH2 0x168B SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x176D JUMPI PUSH2 0x176C PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x198B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x8C14E706F344A21EB23261AB6A4811D5599E56E890562777A6914925A5951273 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1853 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466972737420506C616365204E4654207265766F6B6564000000000000000000 DUP2 MSTORE POP PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18DF JUMPI PUSH2 0x18DE PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1952 JUMPI PUSH2 0x1951 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH32 0x6D74BD0BFB57711860BD7D6D0648D03E2FDFF362F5F46A8F91388D8F39911D08 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1981 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH1 0x0 CALLER DUP5 PUSH32 0x8C14E706F344A21EB23261AB6A4811D5599E56E890562777A6914925A5951273 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1A1C CALLER DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466972737420506C616365204E46540000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2871 JUMP JUMPDEST PUSH2 0x1A26 DUP2 DUP6 PUSH2 0x2AED JUMP JUMPDEST PUSH2 0x1A40 ADDRESS DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x107E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A95 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1AA8 JUMPI PUSH2 0x1AA7 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B43 JUMPI PUSH2 0x1B42 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH32 0x300FF980EFDFCBF9315C1929DBD04369FE492B36170E95357766EC52103924F6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1B72 SWAP2 SWAP1 PUSH2 0x3904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BA4 JUMPI PUSH2 0x1BA3 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH32 0xB292D132BB6533EA558B88BBE806F164B9034EA4D33EE745E74E2DD960701812 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BD3 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1BEB PUSH2 0x2364 JUMP JUMPDEST PUSH2 0x1BF6 DUP4 DUP4 DUP4 PUSH2 0x2663 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C06 DUP5 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CB0 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CAF JUMPI CALLER DUP2 DUP6 PUSH1 0x40 MLOAD PUSH32 0x760B5ACD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D88 DUP6 DUP3 DUP7 DUP7 DUP7 PUSH2 0x2BE5 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1DC5 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DA8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1DC3 DUP7 DUP3 PUSH2 0x2540 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E1C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1E07 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1E77 JUMPI PUSH2 0x1E4E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E41 JUMPI PUSH2 0x1E40 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x22AA JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E61 JUMPI PUSH2 0x1E60 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1E22 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E85 PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EEB SWAP1 PUSH2 0x5030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EFD DUP2 PUSH2 0x23E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1F7F PUSH10 0xCEE78B4094DA86011096 PUSH1 0xB0 SHL DUP6 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH2 0x2CC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F8C DUP3 PUSH2 0x22AA JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1FA2 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1FE4 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x42BFE79F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FDB SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1FEE SWAP1 PUSH2 0x50AE JUMP JUMPDEST PUSH1 0x60 SHR PUSH1 0x1 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xA918FA6B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2058 JUMPI POP PUSH2 0x2057 DUP3 PUSH2 0x2D02 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2072 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x1F44 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20B3 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x20BD DUP2 DUP5 PUSH2 0x2D63 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20DF SWAP3 SWAP2 SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x210E SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x213A SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2187 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x215C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2187 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x216A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219F DUP3 PUSH2 0xB33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x21F9 JUMPI POP PUSH2 0x21F8 DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2E22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x220A DUP2 PUSH2 0x2E52 JUMP JUMPDEST PUSH2 0x224B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2242 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x225E DUP4 PUSH1 0x0 ADD PUSH2 0x2EBE JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A1 SWAP1 PUSH2 0x51B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x22CA SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22F6 SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2343 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2318 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2343 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2326 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235D DUP3 PUSH1 0x0 ADD PUSH2 0x2F1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236C PUSH2 0x2F2B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x238A PUSH2 0x12EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23D7 SWAP1 PUSH2 0x521F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D PUSH1 0x0 SHL DUP3 SUB PUSH2 0x2502 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3664800A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x250C DUP3 DUP3 PUSH2 0x2F33 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x256E DUP3 PUSH32 0x8A1C15A8799F71B547E08E2BCB2E85257E81B0A07EEE2CE6712549EEF1F00970 PUSH1 0x0 SHL DUP4 PUSH2 0x3114 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x25AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD SUB PUSH2 0x25E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x263D JUMPI PUSH2 0x2632 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x260A JUMPI PUSH2 0x2609 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2625 JUMPI PUSH2 0x2624 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x24A6 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x25EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2652 DUP4 PUSH1 0x0 ADD PUSH2 0x2EBE JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x267B SWAP3 SWAP2 SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x26AB SWAP2 SWAP1 PUSH2 0x53DE JUMP JUMPDEST POP DUP2 DUP4 PUSH32 0xA6E4251F855F750545FE414F120DB91C76B88DEF14D120969E5BB2D3F05DEBBB DUP4 PUSH1 0x40 MLOAD PUSH2 0x26DD SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F5 DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP PUSH2 0x2706 DUP2 PUSH1 0x0 DUP6 PUSH1 0x0 DUP7 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x270F DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD PUSH2 0x2720 SWAP1 PUSH2 0x54DF JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x2731 DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST PUSH2 0x2782 DUP4 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3250 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER PUSH1 0x0 DUP8 PUSH1 0x40 MLOAD PUSH2 0x281D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2834 DUP2 PUSH1 0x0 DUP6 PUSH1 0x0 DUP7 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x0 CALLER DUP3 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2850 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x286B DUP3 DUP3 PUSH2 0x326E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24ECEF4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28E0 DUP4 PUSH2 0x2E52 JUMP JUMPDEST ISZERO PUSH2 0x2922 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x34C7B51100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2919 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2930 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x2939 DUP4 PUSH2 0x2E52 JUMP JUMPDEST ISZERO PUSH2 0x297B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x34C7B51100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2972 SWAP2 SWAP1 PUSH2 0x4B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD PUSH2 0x298A SWAP1 PUSH2 0x55A0 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x29E2 DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x32A0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2A98 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2AAE PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2ACA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x2AE6 DUP6 DUP5 DUP4 PUSH2 0x32B7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B06 JUMPI PUSH2 0x2B05 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B18 JUMPI PUSH2 0x2B17 PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x2B31 SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5D SWAP1 PUSH2 0x4BCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BAA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B7F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BAA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B8D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2BC4 SWAP2 SWAP1 PUSH2 0x5633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x2BDF DUP5 DUP3 PUSH2 0x24A6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0C DUP7 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x341D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2C52 JUMPI DUP6 DUP5 PUSH1 0x40 MLOAD PUSH32 0x4AA31A8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C49 SWAP3 SWAP2 SWAP1 PUSH2 0x4CEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC78CD419D6136F9F1C1C6AEC1D3FAE098CFFAF8BC86314A8F2685E32FE574E3C DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2CB2 SWAP3 SWAP2 SWAP1 PUSH2 0x5655 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 PUSH1 0xF0 SHL DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2CDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5740 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x2CF9 SWAP1 PUSH2 0x5792 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2D5C JUMPI POP PUSH2 0x2D5B DUP3 PUSH2 0x344D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2D7F SWAP2 SWAP1 PUSH2 0x4A10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x2E0A JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2E16 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4A DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x34B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2F0E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2EFA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x2F8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x85C169BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x2FEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x76755B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 SUB PUSH2 0x3047 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4EF6D7FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x3067 SWAP2 SWAP1 PUSH2 0x53DE JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3098 SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B0 DUP4 DUP4 PUSH2 0x34B7 JUMP JUMPDEST PUSH2 0x3109 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x310E JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3144 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2D63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x31CE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3184 SWAP3 SWAP2 SWAP1 PUSH2 0x57F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31CC SWAP2 SWAP1 PUSH2 0x5899 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x31FC DUP3 PUSH2 0x34DA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3248 JUMPI PUSH2 0x321E PUSH1 0x0 DUP6 PUSH2 0x34EF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x323D DUP3 DUP8 DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2BE5 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x3202 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x325F DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x3509 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x329C DUP3 PUSH32 0xB23EAE7E6D1564B295B4C3E3BE402D9A2F0776C57BDF365903496F6FA481AB00 PUSH1 0x0 SHL DUP4 PUSH2 0x3114 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AF DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32C8 DUP4 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL PUSH2 0x2D63 JUMP JUMPDEST ISZERO PUSH2 0x3379 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 PUSH32 0xB084A55EBF70FD3C06FD755269DAC2212C4D3F0F4D09079780BFA50C1B2984D PUSH1 0x0 SHL DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332B SWAP3 SWAP2 SWAP1 PUSH2 0x57F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x334A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3373 SWAP2 SWAP1 PUSH2 0x5899 JUMP JUMPDEST POP PUSH2 0x3418 JUMP JUMPDEST DUP2 PUSH2 0x3417 JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x33DA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x4349776D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33D1 SWAP2 SWAP1 PUSH2 0x3C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x317313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x340E SWAP2 SWAP1 PUSH2 0x3C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3445 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x3509 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E8 DUP3 PUSH1 0x0 ADD PUSH2 0x2F1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FE DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x361D JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x3611 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x353B SWAP2 SWAP1 PUSH2 0x58E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x3553 SWAP2 SWAP1 PUSH2 0x58E2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x35C2 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3574 JUMPI PUSH2 0x3573 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3598 JUMPI PUSH2 0x3597 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x35D6 JUMPI PUSH2 0x35D5 PUSH2 0x5916 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3617 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3635 JUMPI PUSH2 0x3634 PUSH2 0x4B47 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366F PUSH1 0x4 DUP4 PUSH2 0x3648 JUMP JUMPDEST SWAP2 POP PUSH2 0x367A DUP3 PUSH2 0x3659 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x369E DUP2 PUSH2 0x3662 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D1 DUP4 DUP6 PUSH2 0x3648 JUMP JUMPDEST SWAP4 POP PUSH2 0x36DE DUP4 DUP6 DUP5 PUSH2 0x36A5 JUMP JUMPDEST PUSH2 0x36E7 DUP4 PUSH2 0x36B4 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x370D DUP2 DUP5 DUP7 PUSH2 0x36C5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x375F DUP2 PUSH2 0x372A JUMP JUMPDEST DUP2 EQ PUSH2 0x376A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x377C DUP2 PUSH2 0x3756 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3798 JUMPI PUSH2 0x3797 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37A6 DUP5 DUP3 DUP6 ADD PUSH2 0x376D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37C4 DUP2 PUSH2 0x37AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37F8 DUP2 PUSH2 0x37E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x3803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3815 DUP2 PUSH2 0x37EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3832 JUMPI PUSH2 0x3831 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3840 DUP6 DUP3 DUP7 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3851 DUP6 DUP3 DUP7 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3884 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3869 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x389B DUP3 PUSH2 0x385B JUMP JUMPDEST PUSH2 0x38A5 DUP2 DUP6 PUSH2 0x3648 JUMP JUMPDEST SWAP4 POP PUSH2 0x38B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3866 JUMP JUMPDEST PUSH2 0x38BE DUP2 PUSH2 0x36B4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38E3 DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38FE DUP2 PUSH2 0x38EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3919 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x395C DUP3 PUSH2 0x36B4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x397B JUMPI PUSH2 0x397A PUSH2 0x3924 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x398E PUSH2 0x3716 JUMP JUMPDEST SWAP1 POP PUSH2 0x399A DUP3 DUP3 PUSH2 0x3953 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x39BA JUMPI PUSH2 0x39B9 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39E3 PUSH2 0x39DE DUP5 PUSH2 0x399F JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3A06 JUMPI PUSH2 0x3A05 PUSH2 0x39CB JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A2F JUMPI DUP1 PUSH2 0x3A1B DUP9 DUP3 PUSH2 0x3806 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A08 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A4E JUMPI PUSH2 0x3A4D PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A5E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x39D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A7E JUMPI PUSH2 0x3A7D PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A9C JUMPI PUSH2 0x3A9B PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x3AA8 DUP6 DUP3 DUP7 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AC9 JUMPI PUSH2 0x3AC8 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x3AD5 DUP6 DUP3 DUP7 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B27 DUP3 PUSH2 0x385B JUMP JUMPDEST PUSH2 0x3B31 DUP2 DUP6 PUSH2 0x3B0B JUMP JUMPDEST SWAP4 POP PUSH2 0x3B41 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3866 JUMP JUMPDEST PUSH2 0x3B4A DUP2 PUSH2 0x36B4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B61 DUP4 DUP4 PUSH2 0x3B1C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B81 DUP3 PUSH2 0x3ADF JUMP JUMPDEST PUSH2 0x3B8B DUP2 DUP6 PUSH2 0x3AEA JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3B9D DUP6 PUSH2 0x3AFB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3BD9 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3BBA DUP6 DUP3 PUSH2 0x3B55 JUMP JUMPDEST SWAP5 POP PUSH2 0x3BC5 DUP4 PUSH2 0x3B69 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3BA1 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C05 DUP2 DUP5 PUSH2 0x3B76 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C23 JUMPI PUSH2 0x3C22 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C31 DUP5 DUP3 DUP6 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C65 DUP3 PUSH2 0x3C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C75 DUP2 PUSH2 0x3C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C90 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C9F DUP2 PUSH2 0x3C5A JUMP JUMPDEST DUP2 EQ PUSH2 0x3CAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CBC DUP2 PUSH2 0x3C96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CD9 JUMPI PUSH2 0x3CD8 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CE7 DUP6 DUP3 DUP7 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3CF8 DUP6 DUP3 DUP7 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D37 DUP2 PUSH2 0x3C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D49 DUP4 DUP4 PUSH2 0x3D2E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D6D DUP3 PUSH2 0x3D02 JUMP JUMPDEST PUSH2 0x3D77 DUP2 DUP6 PUSH2 0x3D0D JUMP JUMPDEST SWAP4 POP PUSH2 0x3D82 DUP4 PUSH2 0x3D1E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3DB3 JUMPI DUP2 MLOAD PUSH2 0x3D9A DUP9 DUP3 PUSH2 0x3D3D JUMP JUMPDEST SWAP8 POP PUSH2 0x3DA5 DUP4 PUSH2 0x3D55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3D86 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DDA DUP2 DUP5 PUSH2 0x3D62 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3DEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E01 DUP2 PUSH2 0x3DE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E1D JUMPI PUSH2 0x3E1C PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E2B DUP5 DUP3 DUP6 ADD PUSH2 0x3DF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E5B DUP3 PUSH2 0x3E34 JUMP JUMPDEST PUSH2 0x3E65 DUP2 DUP6 PUSH2 0x3E3F JUMP JUMPDEST SWAP4 POP PUSH2 0x3E75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3866 JUMP JUMPDEST PUSH2 0x3E7E DUP2 PUSH2 0x36B4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EA3 DUP2 DUP5 PUSH2 0x3E50 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EB4 DUP2 PUSH2 0x37AF JUMP JUMPDEST DUP2 EQ PUSH2 0x3EBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3ED1 DUP2 PUSH2 0x3EAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EF7 JUMPI PUSH2 0x3EF6 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH2 0x3F00 DUP3 PUSH2 0x36B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F20 PUSH2 0x3F1B DUP5 PUSH2 0x3EDC JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3F3C JUMPI PUSH2 0x3F3B PUSH2 0x3ED7 JUMP JUMPDEST JUMPDEST PUSH2 0x3F47 DUP5 DUP3 DUP6 PUSH2 0x36A5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F64 JUMPI PUSH2 0x3F63 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F74 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3F0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3F99 JUMPI PUSH2 0x3F98 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3FA7 DUP9 DUP3 DUP10 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3FB8 DUP9 DUP3 DUP10 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x3FC9 DUP9 DUP3 DUP10 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x3FDA DUP9 DUP3 DUP10 ADD PUSH2 0x3EC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FFB JUMPI PUSH2 0x3FFA PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4007 DUP9 DUP3 DUP10 ADD PUSH2 0x3F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x402F JUMPI PUSH2 0x402E PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x404C JUMPI PUSH2 0x404B PUSH2 0x4014 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4068 JUMPI PUSH2 0x4067 PUSH2 0x39CB JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4086 JUMPI PUSH2 0x4085 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40A4 JUMPI PUSH2 0x40A3 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x40B0 DUP6 DUP3 DUP7 ADD PUSH2 0x4019 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40D2 JUMPI PUSH2 0x40D1 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40E0 DUP5 DUP3 DUP6 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4104 JUMPI PUSH2 0x4103 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4128 PUSH2 0x4123 DUP5 PUSH2 0x40E9 JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x414B JUMPI PUSH2 0x414A PUSH2 0x39CB JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4174 JUMPI DUP1 PUSH2 0x4160 DUP9 DUP3 PUSH2 0x3CAD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x414D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4193 JUMPI PUSH2 0x4192 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x41A3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4115 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x41C7 JUMPI PUSH2 0x41C6 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41EB PUSH2 0x41E6 DUP5 PUSH2 0x41AC JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x420E JUMPI PUSH2 0x420D PUSH2 0x39CB JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4237 JUMPI DUP1 PUSH2 0x4223 DUP9 DUP3 PUSH2 0x3EC2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4210 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4256 JUMPI PUSH2 0x4255 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4266 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x41D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x428A JUMPI PUSH2 0x4289 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42AE PUSH2 0x42A9 DUP5 PUSH2 0x426F JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x42D1 JUMPI PUSH2 0x42D0 PUSH2 0x39CB JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4318 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42F6 JUMPI PUSH2 0x42F5 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4303 DUP10 DUP3 PUSH2 0x3F4F JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x42D3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4337 JUMPI PUSH2 0x4336 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4347 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x429B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x436C JUMPI PUSH2 0x436B PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x438A JUMPI PUSH2 0x4389 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4396 DUP9 DUP3 DUP10 ADD PUSH2 0x417E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43B7 JUMPI PUSH2 0x43B6 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x43C3 DUP9 DUP3 DUP10 ADD PUSH2 0x417E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43E4 JUMPI PUSH2 0x43E3 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x43F0 DUP9 DUP3 DUP10 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4411 JUMPI PUSH2 0x4410 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x441D DUP9 DUP3 DUP10 ADD PUSH2 0x4241 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443E JUMPI PUSH2 0x443D PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x444A DUP9 DUP3 DUP10 ADD PUSH2 0x4322 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x446E JUMPI PUSH2 0x446D PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x447C DUP6 DUP3 DUP7 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x449D JUMPI PUSH2 0x449C PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x44A9 DUP6 DUP3 DUP7 ADD PUSH2 0x3F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x44CC JUMPI PUSH2 0x44CB PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44DA DUP7 DUP3 DUP8 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x44EB DUP7 DUP3 DUP8 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x450C JUMPI PUSH2 0x450B PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4518 DUP7 DUP3 DUP8 ADD PUSH2 0x3F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4539 JUMPI PUSH2 0x4538 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4547 DUP6 DUP3 DUP7 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4558 DUP6 DUP3 DUP7 ADD PUSH2 0x3DF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4579 JUMPI PUSH2 0x4578 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4597 JUMPI PUSH2 0x4596 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x45A3 DUP6 DUP3 DUP7 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45C4 JUMPI PUSH2 0x45C3 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x45D0 DUP6 DUP3 DUP7 ADD PUSH2 0x4322 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x460F DUP2 PUSH2 0x37E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4621 DUP4 DUP4 PUSH2 0x4606 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4645 DUP3 PUSH2 0x45DA JUMP JUMPDEST PUSH2 0x464F DUP2 DUP6 PUSH2 0x45E5 JUMP JUMPDEST SWAP4 POP PUSH2 0x465A DUP4 PUSH2 0x45F6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x468B JUMPI DUP2 MLOAD PUSH2 0x4672 DUP9 DUP3 PUSH2 0x4615 JUMP JUMPDEST SWAP8 POP PUSH2 0x467D DUP4 PUSH2 0x462D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x465E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46B2 DUP2 DUP5 PUSH2 0x463A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x46D3 JUMPI PUSH2 0x46D2 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46F1 JUMPI PUSH2 0x46F0 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x46FD DUP7 DUP3 DUP8 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x471E JUMPI PUSH2 0x471D PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x472A DUP7 DUP3 DUP8 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x474B JUMPI PUSH2 0x474A PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4757 DUP7 DUP3 DUP8 ADD PUSH2 0x4322 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x476A DUP2 PUSH2 0x38EB JUMP JUMPDEST DUP2 EQ PUSH2 0x4775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4787 DUP2 PUSH2 0x4761 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x47A8 JUMPI PUSH2 0x47A7 PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH2 0x47B1 DUP3 PUSH2 0x36B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47D1 PUSH2 0x47CC DUP5 PUSH2 0x478D JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x47ED JUMPI PUSH2 0x47EC PUSH2 0x3ED7 JUMP JUMPDEST JUMPDEST PUSH2 0x47F8 DUP5 DUP3 DUP6 PUSH2 0x36A5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4815 JUMPI PUSH2 0x4814 PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4825 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x47BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4847 JUMPI PUSH2 0x4846 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4855 DUP7 DUP3 DUP8 ADD PUSH2 0x4778 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4866 DUP7 DUP3 DUP8 ADD PUSH2 0x3DF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4887 JUMPI PUSH2 0x4886 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4893 DUP7 DUP3 DUP8 ADD PUSH2 0x4800 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x48B6 JUMPI PUSH2 0x48B5 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48C4 DUP7 DUP3 DUP8 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x48D5 DUP7 DUP3 DUP8 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48F6 JUMPI PUSH2 0x48F5 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4902 DUP7 DUP3 DUP8 ADD PUSH2 0x3F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4926 JUMPI PUSH2 0x4925 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4934 DUP8 DUP3 DUP9 ADD PUSH2 0x3CAD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4945 DUP8 DUP3 DUP9 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4956 DUP8 DUP3 DUP9 ADD PUSH2 0x3EC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4977 JUMPI PUSH2 0x4976 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x4983 DUP8 DUP3 DUP9 ADD PUSH2 0x3F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49A5 JUMPI PUSH2 0x49A4 PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x49C3 JUMPI PUSH2 0x49C2 PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x49CF DUP5 DUP3 DUP6 ADD PUSH2 0x3A39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x49ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x49FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x38F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4A0A DUP2 PUSH2 0x372A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A25 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A42 DUP4 DUP6 PUSH2 0x4A2B JUMP JUMPDEST SWAP4 POP PUSH2 0x4A4F DUP4 DUP6 DUP5 PUSH2 0x36A5 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A73 DUP3 PUSH2 0x4A5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A85 DUP3 PUSH2 0x4A68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A9D PUSH2 0x4A98 DUP3 PUSH2 0x3C5A JUMP JUMPDEST PUSH2 0x4A7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ABE PUSH2 0x4AB9 DUP3 PUSH2 0x38EB JUMP JUMPDEST PUSH2 0x4AA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AD1 DUP3 DUP7 DUP9 PUSH2 0x4A36 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ADD DUP3 DUP6 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4AED DUP3 DUP5 PUSH2 0x4AAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0A DUP3 PUSH2 0x385B JUMP JUMPDEST PUSH2 0x4B14 DUP2 DUP6 PUSH2 0x4A2B JUMP JUMPDEST SWAP4 POP PUSH2 0x4B24 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3866 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3C DUP3 DUP5 PUSH2 0x4AFF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4B7F DUP2 PUSH2 0x37E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B9A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4B76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4BE7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4BFA JUMPI PUSH2 0x4BF9 PUSH2 0x4BA0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4C15 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4B76 JUMP JUMPDEST PUSH2 0x4C22 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C6C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4C55 JUMPI PUSH2 0x4C54 PUSH2 0x4C29 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C77 JUMPI PUSH2 0x4C76 PUSH2 0x4C2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x4C93 JUMPI PUSH2 0x4C92 PUSH2 0x4C33 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CA8 DUP3 DUP5 DUP7 PUSH2 0x4A36 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4CC9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x4CD6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4B76 JUMP JUMPDEST PUSH2 0x4CE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C6C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4D00 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x4D0D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4B76 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4D29 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x4D36 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4B76 JUMP JUMPDEST PUSH2 0x4D43 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x37BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4D55 DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D76 DUP3 PUSH2 0x3E34 JUMP JUMPDEST PUSH2 0x4D80 DUP2 DUP6 PUSH2 0x4D60 JUMP JUMPDEST SWAP4 POP PUSH2 0x4D90 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3866 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA8 DUP3 DUP5 PUSH2 0x4D6B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642073656372657420636F646500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DE9 PUSH1 0x13 DUP4 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP PUSH2 0x4DF4 DUP3 PUSH2 0x4DB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E18 DUP2 PUSH2 0x4DDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E6F742074686520686967686573742073636F72650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E84 PUSH1 0x15 DUP4 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP PUSH2 0x4E8F DUP3 PUSH2 0x4E4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EB3 DUP2 PUSH2 0x4E77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x4ECB JUMPI PUSH2 0x4ECA PUSH2 0x4E1F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4EDC DUP3 PUSH2 0x4EBA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EEC DUP3 PUSH2 0x4ECE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0B DUP3 PUSH2 0x4EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F23 PUSH2 0x4F1E DUP3 PUSH2 0x4EE1 JUMP JUMPDEST PUSH2 0x4F00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F44 PUSH2 0x4F3F DUP3 PUSH2 0x37E5 JUMP JUMPDEST PUSH2 0x4F29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F56 DUP3 DUP7 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4F66 DUP3 DUP6 PUSH2 0x4F12 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH2 0x4F76 DUP3 DUP5 PUSH2 0x4F33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4F9C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x4FA9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x4FB6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4B76 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501A PUSH1 0x26 DUP4 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP PUSH2 0x5025 DUP3 PUSH2 0x4FBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5049 DUP2 PUSH2 0x500D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5098 DUP3 MLOAD PUSH2 0x5060 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50B9 DUP3 PUSH2 0x385B JUMP JUMPDEST DUP3 PUSH2 0x50C3 DUP5 PUSH2 0x5050 JUMP JUMPDEST SWAP1 POP PUSH2 0x50CE DUP2 PUSH2 0x508C JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x510E JUMPI PUSH2 0x5109 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x50A1 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5121 DUP3 DUP6 PUSH2 0x4F33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x5131 DUP3 DUP5 PUSH2 0x4F33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x466972737420506C616365204E46547320617265206E6F6E2D7472616E736665 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7261626C65000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519D PUSH1 0x25 DUP4 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP PUSH2 0x51A8 DUP3 PUSH2 0x5141 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51CC DUP2 PUSH2 0x5190 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5209 PUSH1 0x20 DUP4 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP PUSH2 0x5214 DUP3 PUSH2 0x51D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5238 DUP2 PUSH2 0x51FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5294 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x50A1 JUMP JUMPDEST PUSH2 0x529E DUP7 DUP4 PUSH2 0x50A1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52DB PUSH2 0x52D6 PUSH2 0x52D1 DUP5 PUSH2 0x38EB JUMP JUMPDEST PUSH2 0x52B6 JUMP JUMPDEST PUSH2 0x38EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52F5 DUP4 PUSH2 0x52C0 JUMP JUMPDEST PUSH2 0x5309 PUSH2 0x5301 DUP3 PUSH2 0x52E2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5264 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x531E PUSH2 0x5311 JUMP JUMPDEST PUSH2 0x5329 DUP2 DUP5 DUP5 PUSH2 0x52EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x534D JUMPI PUSH2 0x5342 PUSH1 0x0 DUP3 PUSH2 0x5316 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x532F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5392 JUMPI PUSH2 0x5363 DUP2 PUSH2 0x523F JUMP JUMPDEST PUSH2 0x536C DUP5 PUSH2 0x5254 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x537B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x538F PUSH2 0x5387 DUP6 PUSH2 0x5254 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x532E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5397 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53CE DUP4 DUP4 PUSH2 0x53A4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x53E7 DUP3 PUSH2 0x385B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5400 JUMPI PUSH2 0x53FF PUSH2 0x3924 JUMP JUMPDEST JUMPDEST PUSH2 0x540A DUP3 SLOAD PUSH2 0x4BCF JUMP JUMPDEST PUSH2 0x5415 DUP3 DUP3 DUP6 PUSH2 0x5351 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5448 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5436 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5440 DUP6 DUP3 PUSH2 0x53C2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x54A8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5456 DUP7 PUSH2 0x523F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x547E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5459 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x549B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5497 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x53A4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54EA DUP3 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x54FD JUMPI PUSH2 0x54FC PUSH2 0x54B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x551D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x552A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x37BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x553C DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x555B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x5568 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x5575 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x5582 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4B76 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5594 DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55AB DUP3 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x55DD JUMPI PUSH2 0x55DC PUSH2 0x54B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH31 0x6000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x561D PUSH1 0x2 DUP4 PUSH2 0x4D60 JUMP JUMPDEST SWAP2 POP PUSH2 0x5628 DUP3 PUSH2 0x55E8 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x563E DUP3 PUSH2 0x5610 JUMP JUMPDEST SWAP2 POP PUSH2 0x564A DUP3 DUP5 PUSH2 0x4D6B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x566A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x37BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x567C DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56CC PUSH2 0x56C7 DUP3 PUSH2 0x5685 JUMP JUMPDEST PUSH2 0x56B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5719 PUSH2 0x5714 DUP3 PUSH2 0x56D2 JUMP JUMPDEST PUSH2 0x56FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x573A PUSH2 0x5735 DUP3 PUSH2 0x5060 JUMP JUMPDEST PUSH2 0x571F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x574C DUP3 DUP7 PUSH2 0x56BB JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP2 POP PUSH2 0x575C DUP3 DUP6 PUSH2 0x5708 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x576C DUP3 DUP5 PUSH2 0x5729 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5789 DUP3 MLOAD PUSH2 0x37E5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x579D DUP3 PUSH2 0x385B JUMP JUMPDEST DUP3 PUSH2 0x57A7 DUP5 PUSH2 0x5050 JUMP JUMPDEST SWAP1 POP PUSH2 0x57B2 DUP2 PUSH2 0x577D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x57F2 JUMPI PUSH2 0x57ED PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x50A1 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x580E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4B76 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5820 DUP2 DUP5 PUSH2 0x3890 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x583C PUSH2 0x5837 DUP5 PUSH2 0x3EDC JUMP JUMPDEST PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5858 JUMPI PUSH2 0x5857 PUSH2 0x3ED7 JUMP JUMPDEST JUMPDEST PUSH2 0x5863 DUP5 DUP3 DUP6 PUSH2 0x3866 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5880 JUMPI PUSH2 0x587F PUSH2 0x391F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5890 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5829 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58AF JUMPI PUSH2 0x58AE PUSH2 0x3720 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58CD JUMPI PUSH2 0x58CC PUSH2 0x3725 JUMP JUMPDEST JUMPDEST PUSH2 0x58D9 DUP5 DUP3 DUP6 ADD PUSH2 0x586B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58ED DUP3 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x58F8 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5910 JUMPI PUSH2 0x590F PUSH2 0x54B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 DUP3 PUSH13 0xAF06D073651989EDE571D9EC2C PUSH5 0x56D1151258 GASPRICE 0xA6 0xAC 0x21 0x2F 0xAE BLOCKHASH 0x4E JUMP 0xDF PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"168:4225:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7033:1:19;7020:9;:14;7016:90;;7057:38;;;;;;;;;;:::i;:::-;;;;;;;;7016:90;7123:34;;;;;;;;;;;;;;168:4225:26;;;6534:12:19;6580:1;6562:8;;:15;;:19;6558:90;;;6628:8;;6604:33;;;;;;;;;;;;:::i;:::-;;;;;;;;6558:90;6664:34;6689:8;;6664:24;:34::i;:::-;6657:41;;6452:253;;;168:4225:26;;;;;;10233:331:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12247:205;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11165:109;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12523:637;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11605:290;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18018:185;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18274:197;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:59:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18964:349:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1815:151:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14468:1081:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11377:157;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:20;;;;;;;;;;;;;:::i;:::-;;19384:683:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3076:232:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15655:1062:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4035:121:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;434:71:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3963:341:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11966:167:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13515:730;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2232:1507:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13231:213:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16788:1159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2016:458:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;381:47:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;8159:1031:19;8267:12;8335:17;8358:37;8387:7;;;;8358:28;:37::i;:::-;8334:61;;;8476:1;8455:23;;:9;:23;;;8451:92;;8535:7;;;;8499:44;;;;;;;;;;;:::i;:::-;;;;;;;;8451:92;8555:12;8569:19;8592:9;:14;;8614:9;8655:8;;8665:10;8677:9;8638:49;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8592:105;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8554:143;;;;8712:7;8708:476;;;8742:6;8735:13;;;;;;;8708:476;9096:6;9090:13;9144:15;9139:2;9131:6;9127:15;9120:40;8159:1031;;;;;:::o;10233:331::-;10358:4;128:10:17;10408:17:19;;10393:32;;;:11;:32;;;;:84;;;;10441:36;10465:11;10441:23;:36::i;:::-;10393:84;:164;;;;10493:64;10545:11;10493:51;:64::i;:::-;10393:164;10374:183;;10233:331;;;:::o;12247:205::-;12368:22;12409:36;12428:7;12437;12409:18;:36::i;:::-;12402:43;;12247:205;;;;:::o;11165:109::-;11226:7;11252:15;;11245:22;;11165:109;:::o;12523:637::-;12670:25;12730:8;:15;12711:8;:15;:34;12707:104;;12768:32;;;;;;;;;;;;;;12707:104;12846:8;:15;12834:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12821:41;;12878:9;12873:253;12893:8;:15;12889:1;:19;12873:253;;;12942:44;12961:8;12970:1;12961:11;;;;;;;;:::i;:::-;;;;;;;;12974:8;12983:1;12974:11;;;;;;;;:::i;:::-;;;;;;;;12942:18;:44::i;:::-;12926:10;12937:1;12926:13;;;;;;;;:::i;:::-;;;;;;;:60;;;;13098:3;;;;;12873:253;;;;12523:637;;;;:::o;11605:290::-;11696:7;11715:18;11736:12;:21;11749:7;11736:21;;;;;;;;;;;;;;;;;;;;;11715:42;;11794:1;11772:24;;:10;:24;;;11768:93;;11842:7;11819:31;;;;;;;;;;;:::i;:::-;;;;;;;;11768:93;11878:10;11871:17;;;11605:290;;;:::o;18018:185::-;18136:4;18159:37;18178:8;18188:7;18159:18;:37::i;:::-;18152:44;;18018:185;;;;:::o;18274:197::-;18367:16;18395:23;18410:7;18395:14;:23::i;:::-;18436:28;:10;:19;18447:7;18436:19;;;;;;;;;;;:26;:28::i;:::-;18429:35;;18274:197;;;:::o;511:59:26:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;18964:349:19:-;19141:39;19160:10;19172:7;19141:18;:39::i;:::-;19136:119;;19224:7;19233:10;19203:41;;;;;;;;;;;;:::i;:::-;;;;;;;;19136:119;19265:41;19275:4;19281:2;19285:7;19294:5;19301:4;19265:9;:41::i;:::-;18964:349;;;;;:::o;1815:151:0:-;1901:22;1942:17;1951:7;1942:8;:17::i;:::-;1935:24;;1815:151;;;:::o;14468:1081:19:-;14558:22;14614:4;;:11;;14602:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14592:34;;14641:9;14636:907;14656:4;;:11;;14652:1;:15;14636:907;;;14686:12;14700:19;14731:4;14723:26;;14767:4;;14772:1;14767:7;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;14723:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14685:103;;;;14808:7;14803:636;;14926:1;14909:6;:13;:18;14905:520;;15224:6;15218:13;15280:15;15271:6;15267:2;15263:15;15256:40;14905:520;15403:1;15371:35;;;;;;;;;;;:::i;:::-;;;;;;;;14803:636;15466:6;15453:7;15461:1;15453:10;;;;;;;;:::i;:::-;;;;;;;:19;;;;15515:3;;;;;14671:872;;14636:907;;;;14468:1081;;;;:::o;11377:157::-;11468:7;11494:33;:12;:24;11507:10;11494:24;;;;;;;;;;;;;;;:31;:33::i;:::-;11487:40;;11377:157;;;:::o;1824:101:20:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;19384:683:19:-;19599:18;19620:4;:11;19599:32;;19672:2;:9;19658:10;:23;;:67;;;;19711:7;:14;19697:10;:28;;19658:67;:109;;;;19755:5;:12;19741:10;:26;;19658:109;:150;;;;19797:4;:11;19783:10;:25;;19658:150;19641:236;;;19840:26;;;;;;;;;;;;;;19641:236;19892:9;19887:174;19907:10;19903:1;:14;19887:174;;;19935:55;19944:4;19949:1;19944:7;;;;;;;;:::i;:::-;;;;;;;;19953:2;19956:1;19953:5;;;;;;;;:::i;:::-;;;;;;;;19960:7;19968:1;19960:10;;;;;;;;:::i;:::-;;;;;;;;19972:5;19978:1;19972:8;;;;;;;;:::i;:::-;;;;;;;;19982:4;19987:1;19982:7;;;;;;;;:::i;:::-;;;;;;;;19935:8;:55::i;:::-;20033:3;;;;;19887:174;;;;19589:478;19384:683;;;;;:::o;3076:232:0:-;1094:13:20;:11;:13::i;:::-;3225:1:0::1;3212:9;:14;3208:55;;3235:28;;;;;;;;;;;;;;3208:55;3273:28;3282:7;3291:9;3273:8;:28::i;:::-;3076:232:::0;;:::o;15655:1062:19:-;15820:18;15841:21;15854:7;15841:12;:21::i;:::-;15820:42;;15891:10;15877:24;;:10;:24;;;15873:112;;15942:10;15954:7;15963:10;15924:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;15873:112;16019:1;15999:22;;:8;:22;;;15995:96;;16044:36;;;;;;;;;;;;;;15995:96;16119:8;16105:22;;:10;:22;;;16101:92;;16150:32;;;;;;;;;;;;;;16101:92;16203:12;16218:33;16242:8;16218:10;:19;16229:7;16218:19;;;;;;;;;;;:23;;:33;;;;:::i;:::-;16203:48;;16266:7;16261:69;;16312:8;16322:7;16282:48;;;;;;;;;;;;:::i;:::-;;;;;;;;16261:69;16434:7;16410:10;16346:143;;16388:8;16346:143;;;16455:24;16346:143;;;;;;:::i;:::-;;;;;;;;16500:21;16548:10;16572:7;16593:4;16625:24;16524:135;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16500:159;;16670:40;16691:8;16701;16670:20;:40::i;:::-;15810:907;;;15655:1062;;;:::o;4035:121:26:-;4101:12;4132:17;4141:7;4132:8;:17::i;:::-;4125:24;;4035:121;;;:::o;1201:85:20:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;434:71:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3963:341:0:-;1094:13:20;:11;:13::i;:::-;4214:1:0::1;4201:9;:14;4197:55;;4224:28;;;;;;;;;;;;;;4197:55;4262:35;4276:8;4286:10;4262:13;:35::i;:::-;3963:341:::0;;:::o;11966:167:19:-;12058:16;12093:33;:12;:24;12106:10;12093:24;;;;;;;;;;;;;;;:31;:33::i;:::-;12086:40;;11966:167;;;:::o;13515:730::-;1094:13:20;:11;:13::i;:::-;13739:8:19::1;:15;13720:8;:15;:34;;:86;;;;13789:10;:17;13770:8;:15;:36;;13720:86;13703:178;;;13838:32;;;;;;;;;;;;;;13703:178;13914:1;13895:8;:15;:20:::0;13891:86:::1;;13938:28;;;;;;;;;;;;;;13891:86;13992:9;13987:252;14007:8;:15;14003:1;:19;13987:252;;;14040:59;14059:8;14068:1;14059:11;;;;;;;;:::i;:::-;;;;;;;;14072:8;14081:1;14072:11;;;;;;;;:::i;:::-;;;;;;;;14085:10;14096:1;14085:13;;;;;;;;:::i;:::-;;;;;;;;14040:18;:59::i;:::-;14211:3;;;;;13987:252;;;;13515:730:::0;;;:::o;2232:1507:26:-;2430:10;;2414;2397:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;2387:39;;;;;;:53;2366:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;2495:21;2519:10;:22;2530:10;2519:22;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2495:46;;2567:6;:12;;;2559:5;:20;2551:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2637:10;2620:27;;:6;:13;;;;;;;;;;;;:27;;;2616:160;;2678:5;2663:6;:12;;:20;;;;2727:10;2702:43;;2715:10;2702:43;;;;;;;;:::i;:::-;;;2739:5;2702:43;;;;;;:::i;:::-;;;;;;;;2759:7;;;2616:160;2816:1;2791:27;;:6;:13;;;;;;;;;;;;:27;;;;:74;;;;;2822:16;:31;2839:6;:13;;;;;;;;;;;;2822:31;;;;;;;;;;;;;;;:43;2854:10;2822:43;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2791:74;2787:421;;;2881:19;2947:6;:13;;;;;;;;;;;;2962:10;620:28;2930:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2903:101;;;;;;2881:123;;3018:45;3024:11;3018:45;;;;;;;;;;;;;;;;;:5;:45::i;:::-;3123:5;3077:16;:31;3094:6;:13;;;;;;;;;;;;3077:31;;;;;;;;;;;;;;;:43;3109:10;3077:43;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;3170:6;:13;;;;;;;;;;;;3147:50;;3158:10;3147:50;;;;;;;;:::i;:::-;;;3185:11;3147:50;;;;;;:::i;:::-;;;;;;;;2867:341;2787:421;3218:15;3276:10;3288;620:28;3259:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3236:90;;;;;;3218:108;;3336:51;3342:10;3354:7;3363:4;3336:51;;;;;;;;;;;;;;;;;:5;:51::i;:::-;3397:38;3415:7;3424:10;3397:17;:38::i;:::-;3445:45;3471:4;3478:7;3445:45;;;;;;;;;;;;:17;:45::i;:::-;3543:4;3500:16;:28;3517:10;3500:28;;;;;;;;;;;;;;;:40;3529:10;3500:40;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;3574:10;3558:6;:13;;;:26;;;;;;;;;;;;;;;;;;3609:5;3594:6;:12;;:20;;;;3655:10;3630:43;;3643:10;3630:43;;;;;;;;:::i;:::-;;;3667:5;3630:43;;;;;;:::i;:::-;;;;;;;;3712:10;3688:44;;3700:10;3688:44;;;;;;;;:::i;:::-;;;3724:7;3688:44;;;;;;:::i;:::-;;;;;;;;2356:1383;;2232:1507;;;;:::o;13231:213:19:-;1094:13:20;:11;:13::i;:::-;13390:47:19::1;13409:7;13418;13427:9;13390:18;:47::i;:::-;13231:213:::0;;;:::o;16788:1159::-;16971:18;16992:21;17005:7;16992:12;:21::i;:::-;16971:42;;17042:10;17028:24;;:10;:24;;;17024:264;;17084:10;17072:22;;:8;:22;;;17068:210;;17174:10;17206;17238:7;17121:142;;;;;;;;;;;;;:::i;:::-;;;;;;;;17068:210;17024:264;17322:1;17302:22;;:8;:22;;;17298:96;;17347:36;;;;;;;;;;;;;;17298:96;17422:8;17408:22;;:10;:22;;;17404:92;;17453:32;;;;;;;;;;;;;;17404:92;17506:150;17535:8;17557:10;17581:7;17602:6;17622:24;17506:15;:150::i;:::-;17671:6;17667:274;;;17693:21;17745:10;17773:7;17798:5;17837:24;17717:158;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17693:182;;17890:40;17911:8;17921;17890:20;:40::i;:::-;17679:262;17667:274;16961:986;16788:1159;;;;:::o;2016:458:0:-;2117:25;2179:8;:15;2167:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:41;;2211:9;2206:234;2230:8;:15;2226:1;:19;2206:234;;;2279:21;2288:8;2297:1;2288:11;;;;;;;;:::i;:::-;;;;;;;;2279:8;:21::i;:::-;2263:10;2274:1;2263:13;;;;;;;;:::i;:::-;;;;;;;:37;;;;2412:3;;;;;2206:234;;;;2016:458;;;:::o;2074:198:20:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;381:47:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9459:717:19:-;9576:7;9585:4;9681:30;9714:105;433:22:9;9756:23:19;;9793:16;9714:105;;;:28;:105::i;:::-;9681:138;;9908:29;9940:32;9949:22;9940:8;:32::i;:::-;9908:64;;10013:2;9986:16;:23;:29;;:61;;;;;10046:1;10019:16;:23;:28;;9986:61;9982:127;;;10092:16;10068:41;;;;;;;;;;;:::i;:::-;;;;;;;;9982:127;10144:16;10136:25;;;:::i;:::-;10128:34;;10164:4;10120:49;;;;;;9459:717;;;:::o;998:237:11:-;1097:4;182:10:9;1147:29:11;;1132:44;;;:11;:44;;;;:96;;;;1192:36;1216:11;1192:23;:36::i;:::-;1132:96;1113:115;;998:237;;;:::o;1658:457::-;1768:4;1785:23;1814:85;1856:33;;;1814:28;:85::i;:::-;1784:115;;;1940:1;1913:29;;:15;:29;;;1909:47;;1951:5;1944:12;;;;;1909:47;1986:122;2050:15;2083:11;1986:46;:122::i;:::-;1967:141;;;1658:457;;;;:::o;30825:213:19:-;30940:23;30982:6;:49;31012:7;31021;30999:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;30989:41;;;;;;30982:49;;;;;;;;;;;30975:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30825:213;;;;:::o;18629:229::-;18743:4;18777:21;18790:7;18777:12;:21::i;:::-;18767:31;;:6;:31;;;:83;;;;18814:36;18843:6;18814:10;:19;18825:7;18814:19;;;;;;;;;;;:28;;:36;;;;:::i;:::-;18767:83;18759:92;;18629:229;;;;:::o;22393:165::-;22471:16;22479:7;22471;:16::i;:::-;22466:86;;22533:7;22510:31;;;;;;;;;;;:::i;:::-;;;;;;;;22466:86;22393:165;:::o;10259:300:25:-;10322:16;10350:22;10375:19;10383:3;:10;;10375:7;:19::i;:::-;10350:44;;10404:23;10514:5;10504:15;;10546:6;10539:13;;;;10259:300;;;:::o;4162:229:26:-;4337:47;;;;;;;;;;:::i;:::-;;;;;;;;4799:143:0;4879:22;4920:6;:15;4927:7;4920:15;;;;;;;;;;;4913:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4799:143;;;:::o;6639:115:25:-;6702:7;6728:19;6736:3;:10;;6728:7;:19::i;:::-;6721:26;;6639:115;;;:::o;1359:130:20:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;10779:289:19:-;359:66:17;10911:24:19;;10900:7;:35;10896:103;;10958:30;;;;;;;;;;;;;;10896:103;11008:53;11042:7;11051:9;11008:33;:53::i;:::-;10779:289;;:::o;8305:150:25:-;8375:4;8398:50;8403:3;:10;;8439:5;8423:23;;8415:32;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;:::o;33171:254:19:-;33291:127;33338:8;1178:66:17;33360:26:19;;33400:8;33291:33;:127::i;:::-;33171:254;;:::o;6326:589:0:-;6475:10;:17;6456:8;:15;:36;6452:112;;6515:38;;;;;;;;;;;;;;6452:112;6597:1;6578:8;:15;:20;6574:92;;6621:34;;;;;;;;;;;;;;6574:92;6681:9;6676:233;6700:8;:15;6696:1;:19;6676:233;;;6733:36;6742:8;6751:1;6742:11;;;;;;;;:::i;:::-;;;;;;;;6755:10;6766:1;6755:13;;;;;;;;:::i;:::-;;;;;;;;6733:8;:36::i;:::-;6881:3;;;;;6676:233;;;;6326:589;;:::o;7765:300:25:-;7828:16;7856:22;7881:19;7889:3;:10;;7881:7;:19::i;:::-;7856:44;;7910:23;8020:5;8010:15;;8052:6;8045:13;;;;7765:300;;;:::o;30150:273:19:-;30345:9;30293:6;:49;30323:7;30332;30310:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;30300:41;;;;;;30293:49;;;;;;;;;;;:61;;;;;;:::i;:::-;;30397:7;30388;30369:47;30406:9;30369:47;;;;;;:::i;:::-;;;;;;;;30150:273;;;:::o;26055:946::-;26133:18;26154:21;26167:7;26154:12;:21::i;:::-;26133:42;;26186:66;26207:10;26227:1;26231:7;26240:5;26247:4;26186:20;:66::i;:::-;26404:21;26417:7;26404:12;:21::i;:::-;26391:34;;26468:15;;26466:17;;;;;:::i;:::-;;;;;;;;26494:36;26510:10;26522:7;26494:15;:36::i;:::-;26541:40;26573:7;26541:12;:24;26554:10;26541:24;;;;;;;;;;;;;;;:31;;:40;;;;:::i;:::-;;26598:12;:21;26611:7;26598:21;;;;;;;;;;;;26591:28;;;;;;;;;;;26680:7;26676:1;26635:66;;26656:10;26635:66;;;26644:10;26689:5;26696:4;26635:66;;;;;;;;:::i;:::-;;;;;;;;26712:65;26732:10;26752:1;26756:7;26765:5;26772:4;26712:19;:65::i;:::-;26788:21;26836:10;26860;26892:1;26908:7;26929:4;26812:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26788:155;;26954:40;26973:10;26985:8;26954:18;:40::i;:::-;26123:878;;26055:946;;:::o;23582:1117::-;23740:1;23726:16;;:2;:16;;;23722:83;;23765:29;;;;;;;;;;;;;;23722:83;23873:16;23881:7;23873;:16::i;:::-;23869:87;;;23937:7;23912:33;;;;;;;;;;;:::i;:::-;;;;;;;;23869:87;23966:58;23995:1;23999:2;24003:7;24012:5;24019:4;23966:20;:58::i;:::-;24125:16;24133:7;24125;:16::i;:::-;24121:87;;;24189:7;24164:33;;;;;;;;;;;:::i;:::-;;;;;;;;24121:87;24250:15;;24248:17;;;;;:::i;:::-;;;;;;;;24276:29;24297:7;24276:12;:16;24289:2;24276:16;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;;24339:2;24315:12;:21;24328:7;24315:21;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;24394:7;24390:2;24357:58;;24386:1;24357:58;;;24366:10;24403:5;24410:4;24357:58;;;;;;;;:::i;:::-;;;;;;;;24426:57;24454:1;24458:2;24462:7;24471:5;24478:4;24426:19;:57::i;:::-;24494:21;24542:10;24574:1;24590:2;24606:7;24627:4;24518:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;24494:147;;24651:41;24672:2;24676:5;24683:8;24651:20;:41::i;:::-;23712:987;23582:1117;;;;:::o;3745:284:26:-;3831:17;3851:22;:34;3874:10;3851:34;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3831:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3895:21;3972:3;3919:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;3895:90;;3995:27;4004:7;4013:8;3995;:27::i;:::-;3821:208;;3745:284;;:::o;20165:510:19:-;20372:14;20389:36;20416:8;20389:10;:19;20400:7;20389:19;;;;;;;;;;;:26;;:36;;;;:::i;:::-;20372:53;;20440:9;20435:65;;20482:8;20492:7;20458:42;;;;;;;;;;;;:::i;:::-;;;;;;;;20435:65;20591:7;20567:10;20516:152;;20545:8;20516:152;;;20612:8;20634:24;20516:152;;;;;;;:::i;:::-;;;;;;;;20362:313;20165:510;;;;;:::o;5197:300:12:-;5311:7;5330:25;5384:9;5414:1;5407:9;;5430:12;5358:94;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5330:122;;5477:12;5469:21;;;:::i;:::-;5462:28;;;5197:300;;;;:::o;6963:228:0:-;7062:4;178:10:1;7112:20:0;;7097:35;;;:11;:35;;;;:87;;;;7148:36;7172:11;7148:23;:36::i;:::-;7097:87;7078:106;;6963:228;;;:::o;4421:647:23:-;4523:4;4563:26;4615:34;;;4651:11;4592:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4563:100;;4705:12;4727:18;4755:19;4899:4;4893;4877:13;4871:20;4864:4;4849:13;4845:24;4836:7;4829:5;4818:86;4807:97;;4931:16;4917:30;;4981:4;4975:11;4960:26;;5013:7;:29;;;;;5038:4;5024:10;:18;;5013:29;:48;;;;;5060:1;5046:11;:15;5013:48;5006:55;;;;;;4421:647;;;;:::o;8860:165:25:-;8940:4;8963:55;8973:3;:10;;9009:5;8993:23;;8985:32;;8963:9;:55::i;:::-;8956:62;;8860:165;;;;:::o;22172:130:19:-;22237:4;22293:1;22260:35;;:12;:21;22273:7;22260:21;;;;;;;;;;;;;;;;;;;;;:35;;;;22253:42;;22172:130;;;:::o;5570:109:25:-;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;4463:107::-;4519:7;4545:3;:11;;:18;;;;4538:25;;4463:107;;;:::o;655:96:21:-;708:7;734:10;727:17;;655:96;:::o;1935:533:14:-;633:66:13;2067:20:14;;2056:7;:31;2052:410;;2110:26;;;;;;;;;;;;;;2052:410;776:66:13;2168:22:14;;2157:7;:33;2153:309;;2213:28;;;;;;;;;;;;;;2153:309;915:66:13;2273:20:14;;2262:7;:31;2258:204;;2316:26;;;;;;;;;;;;;;2258:204;2391:9;2373:6;:15;2380:7;2373:15;;;;;;;;;;;:27;;;;;;:::i;:::-;;2432:7;2420:31;2441:9;2420:31;;;;;;:::i;:::-;;;;;;;;1935:533;;:::o;2214:404:25:-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;2335:3;:11;;2352:5;2335:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:3;:11;;:18;;;;2493:3;:12;;:19;2506:5;2493:19;;;;;;;;;;;:40;;;;2554:4;2547:11;;;;2293:319;2596:5;2589:12;;2214:404;;;;;:::o;1352:361:8:-;1514:100;128:10:7;1583:17:8;;1514:18;:51;;;;:100;;;;:::i;:::-;1497:210;;;1645:18;1639:43;;;1683:6;1691:4;1639:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1497:210;1352:361;;;:::o;31575:214:19:-;;;;;;:::o;20956:1030::-;21478:52;21533:10;:41;21557:7;21533:41;;;;;;;;;;;21478:96;;21585:26;21614:28;:19;:26;:28::i;:::-;21585:57;;21652:16;21683:9;21678:302;21698:18;21694:1;:22;21678:302;;;21813:25;21836:1;21813:19;:22;;:25;;;;:::i;:::-;21802:36;;21852:57;21868:8;21878:10;21890:7;21899:5;21852:57;;;;;;;;;;;;:15;:57::i;:::-;21952:3;;;;;21678:302;;;;21057:929;;;20956:1030;;:::o;6210:129:25:-;6283:4;6306:26;6314:3;:10;;6326:5;6306:7;:26::i;:::-;6299:33;;6210:129;;;;:::o;32345:213:19:-;;;;;;:::o;34022:243::-;34136:122;34183:4;849:66:17;34201:25:19;;34240:8;34136:33;:122::i;:::-;34022:243;;:::o;5919:123:25:-;5989:4;6012:23;6017:3;:10;;6029:5;6012:4;:23::i;:::-;6005:30;;5919:123;;;;:::o;35155:615:19:-;35306:115;35370:2;128:10:7;35390:17:19;;35306:46;:115::i;:::-;35289:475;;;35452:2;35446:27;;;1015:66:17;35474:28:19;;35504:8;35446:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;35289:475;;;35535:5;35530:234;;35578:1;35560:2;:14;;;:19;35556:198;;35658:2;35606:55;;;;;;;;;;;:::i;:::-;;;;;;;;35556:198;35736:2;35707:32;;;;;;;;;;;:::i;:::-;;;;;;;;35530:234;35289:475;35155:615;;;:::o;8623:156:25:-;8696:4;8719:53;8727:3;:10;;8763:5;8747:23;;8739:32;;8719:7;:53::i;:::-;8712:60;;8623:156;;;;:::o;829:155:22:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;4255:127:25:-;4328:4;4374:1;4351:3;:12;;:19;4364:5;4351:19;;;;;;;;;;;;:24;;4344:31;;4255:127;;;;:::o;9106:115::-;9169:7;9195:19;9203:3;:10;;9195:7;:19::i;:::-;9188:26;;9106:115;;;:::o;9563:156::-;9637:7;9687:22;9691:3;:10;;9703:5;9687:3;:22::i;:::-;9679:31;;9656:56;;9563:156;;;;:::o;2786:1388::-;2852:4;2968:18;2989:3;:12;;:19;3002:5;2989:19;;;;;;;;;;;;2968:40;;3037:1;3023:10;:15;3019:1149;;3392:21;3429:1;3416:10;:14;;;;:::i;:::-;3392:38;;3444:17;3485:1;3464:3;:11;;:18;;;;:22;;;;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3831:10;3805:3;:12;;:23;3818:9;3805:23;;;;;;;;;;;:36;;;;3533:366;3501:398;3977:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;2786:1388;;;;;:::o;4912:118::-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;;4998:25;;4912:118;;;;:::o;7:168:27:-;90:11;124:6;119:3;112:19;164:4;159:3;155:14;140:29;;7:168;;;;:::o;181:214::-;321:66;317:1;309:6;305:14;298:90;181:214;:::o;401:363::-;542:3;563:65;626:1;621:3;563:65;:::i;:::-;556:72;;637:93;726:3;637:93;:::i;:::-;755:2;750:3;746:12;739:19;;401:363;;;:::o;770:417::-;935:4;973:2;962:9;958:18;950:26;;1022:9;1016:4;1012:20;1008:1;997:9;993:17;986:47;1050:130;1175:4;1050:130;:::i;:::-;1042:138;;770:417;;;:::o;1193:146::-;1290:6;1285:3;1280;1267:30;1331:1;1322:6;1317:3;1313:16;1306:27;1193:146;;;:::o;1345:102::-;1386:6;1437:2;1433:7;1428:2;1421:5;1417:14;1413:28;1403:38;;1345:102;;;:::o;1475:314::-;1571:3;1592:70;1655:6;1650:3;1592:70;:::i;:::-;1585:77;;1672:56;1721:6;1716:3;1709:5;1672:56;:::i;:::-;1753:29;1775:6;1753:29;:::i;:::-;1748:3;1744:39;1737:46;;1475:314;;;;;:::o;1795:329::-;1916:4;1954:2;1943:9;1939:18;1931:26;;2003:9;1997:4;1993:20;1989:1;1978:9;1974:17;1967:47;2031:86;2112:4;2103:6;2095;2031:86;:::i;:::-;2023:94;;1795:329;;;;;:::o;2130:75::-;2163:6;2196:2;2190:9;2180:19;;2130:75;:::o;2211:117::-;2320:1;2317;2310:12;2334:117;2443:1;2440;2433:12;2457:149;2493:7;2533:66;2526:5;2522:78;2511:89;;2457:149;;;:::o;2612:120::-;2684:23;2701:5;2684:23;:::i;:::-;2677:5;2674:34;2664:62;;2722:1;2719;2712:12;2664:62;2612:120;:::o;2738:137::-;2783:5;2821:6;2808:20;2799:29;;2837:32;2863:5;2837:32;:::i;:::-;2738:137;;;;:::o;2881:327::-;2939:6;2988:2;2976:9;2967:7;2963:23;2959:32;2956:119;;;2994:79;;:::i;:::-;2956:119;3114:1;3139:52;3183:7;3174:6;3163:9;3159:22;3139:52;:::i;:::-;3129:62;;3085:116;2881:327;;;;:::o;3214:90::-;3248:7;3291:5;3284:13;3277:21;3266:32;;3214:90;;;:::o;3310:109::-;3391:21;3406:5;3391:21;:::i;:::-;3386:3;3379:34;3310:109;;:::o;3425:210::-;3512:4;3550:2;3539:9;3535:18;3527:26;;3563:65;3625:1;3614:9;3610:17;3601:6;3563:65;:::i;:::-;3425:210;;;;:::o;3641:77::-;3678:7;3707:5;3696:16;;3641:77;;;:::o;3724:122::-;3797:24;3815:5;3797:24;:::i;:::-;3790:5;3787:35;3777:63;;3836:1;3833;3826:12;3777:63;3724:122;:::o;3852:139::-;3898:5;3936:6;3923:20;3914:29;;3952:33;3979:5;3952:33;:::i;:::-;3852:139;;;;:::o;3997:474::-;4065:6;4073;4122:2;4110:9;4101:7;4097:23;4093:32;4090:119;;;4128:79;;:::i;:::-;4090:119;4248:1;4273:53;4318:7;4309:6;4298:9;4294:22;4273:53;:::i;:::-;4263:63;;4219:117;4375:2;4401:53;4446:7;4437:6;4426:9;4422:22;4401:53;:::i;:::-;4391:63;;4346:118;3997:474;;;;;:::o;4477:98::-;4528:6;4562:5;4556:12;4546:22;;4477:98;;;:::o;4581:246::-;4662:1;4672:113;4686:6;4683:1;4680:13;4672:113;;;4771:1;4766:3;4762:11;4756:18;4752:1;4747:3;4743:11;4736:39;4708:2;4705:1;4701:10;4696:15;;4672:113;;;4819:1;4810:6;4805:3;4801:16;4794:27;4643:184;4581:246;;;:::o;4833:373::-;4919:3;4947:38;4979:5;4947:38;:::i;:::-;5001:70;5064:6;5059:3;5001:70;:::i;:::-;4994:77;;5080:65;5138:6;5133:3;5126:4;5119:5;5115:16;5080:65;:::i;:::-;5170:29;5192:6;5170:29;:::i;:::-;5165:3;5161:39;5154:46;;4923:283;4833:373;;;;:::o;5212:309::-;5323:4;5361:2;5350:9;5346:18;5338:26;;5410:9;5404:4;5400:20;5396:1;5385:9;5381:17;5374:47;5438:76;5509:4;5500:6;5438:76;:::i;:::-;5430:84;;5212:309;;;;:::o;5527:77::-;5564:7;5593:5;5582:16;;5527:77;;;:::o;5610:118::-;5697:24;5715:5;5697:24;:::i;:::-;5692:3;5685:37;5610:118;;:::o;5734:222::-;5827:4;5865:2;5854:9;5850:18;5842:26;;5878:71;5946:1;5935:9;5931:17;5922:6;5878:71;:::i;:::-;5734:222;;;;:::o;5962:117::-;6071:1;6068;6061:12;6085:180;6133:77;6130:1;6123:88;6230:4;6227:1;6220:15;6254:4;6251:1;6244:15;6271:281;6354:27;6376:4;6354:27;:::i;:::-;6346:6;6342:40;6484:6;6472:10;6469:22;6448:18;6436:10;6433:34;6430:62;6427:88;;;6495:18;;:::i;:::-;6427:88;6535:10;6531:2;6524:22;6314:238;6271:281;;:::o;6558:129::-;6592:6;6619:20;;:::i;:::-;6609:30;;6648:33;6676:4;6668:6;6648:33;:::i;:::-;6558:129;;;:::o;6693:311::-;6770:4;6860:18;6852:6;6849:30;6846:56;;;6882:18;;:::i;:::-;6846:56;6932:4;6924:6;6920:17;6912:25;;6992:4;6986;6982:15;6974:23;;6693:311;;;:::o;7010:117::-;7119:1;7116;7109:12;7150:710;7246:5;7271:81;7287:64;7344:6;7287:64;:::i;:::-;7271:81;:::i;:::-;7262:90;;7372:5;7401:6;7394:5;7387:21;7435:4;7428:5;7424:16;7417:23;;7488:4;7480:6;7476:17;7468:6;7464:30;7517:3;7509:6;7506:15;7503:122;;;7536:79;;:::i;:::-;7503:122;7651:6;7634:220;7668:6;7663:3;7660:15;7634:220;;;7743:3;7772:37;7805:3;7793:10;7772:37;:::i;:::-;7767:3;7760:50;7839:4;7834:3;7830:14;7823:21;;7710:144;7694:4;7689:3;7685:14;7678:21;;7634:220;;;7638:21;7252:608;;7150:710;;;;;:::o;7883:370::-;7954:5;8003:3;7996:4;7988:6;7984:17;7980:27;7970:122;;8011:79;;:::i;:::-;7970:122;8128:6;8115:20;8153:94;8243:3;8235:6;8228:4;8220:6;8216:17;8153:94;:::i;:::-;8144:103;;7960:293;7883:370;;;;:::o;8259:894::-;8377:6;8385;8434:2;8422:9;8413:7;8409:23;8405:32;8402:119;;;8440:79;;:::i;:::-;8402:119;8588:1;8577:9;8573:17;8560:31;8618:18;8610:6;8607:30;8604:117;;;8640:79;;:::i;:::-;8604:117;8745:78;8815:7;8806:6;8795:9;8791:22;8745:78;:::i;:::-;8735:88;;8531:302;8900:2;8889:9;8885:18;8872:32;8931:18;8923:6;8920:30;8917:117;;;8953:79;;:::i;:::-;8917:117;9058:78;9128:7;9119:6;9108:9;9104:22;9058:78;:::i;:::-;9048:88;;8843:303;8259:894;;;;;:::o;9159:123::-;9235:6;9269:5;9263:12;9253:22;;9159:123;;;:::o;9288:193::-;9396:11;9430:6;9425:3;9418:19;9470:4;9465:3;9461:14;9446:29;;9288:193;;;;:::o;9487:141::-;9563:4;9586:3;9578:11;;9616:4;9611:3;9607:14;9599:22;;9487:141;;;:::o;9634:158::-;9707:11;9741:6;9736:3;9729:19;9781:4;9776:3;9772:14;9757:29;;9634:158;;;;:::o;9798:353::-;9874:3;9902:38;9934:5;9902:38;:::i;:::-;9956:60;10009:6;10004:3;9956:60;:::i;:::-;9949:67;;10025:65;10083:6;10078:3;10071:4;10064:5;10060:16;10025:65;:::i;:::-;10115:29;10137:6;10115:29;:::i;:::-;10110:3;10106:39;10099:46;;9878:273;9798:353;;;;:::o;10157:192::-;10244:10;10279:64;10339:3;10331:6;10279:64;:::i;:::-;10265:78;;10157:192;;;;:::o;10355:122::-;10434:4;10466;10461:3;10457:14;10449:22;;10355:122;;;:::o;10509:983::-;10646:3;10675:63;10732:5;10675:63;:::i;:::-;10754:95;10842:6;10837:3;10754:95;:::i;:::-;10747:102;;10875:3;10920:4;10912:6;10908:17;10903:3;10899:27;10950:65;11009:5;10950:65;:::i;:::-;11038:7;11069:1;11054:393;11079:6;11076:1;11073:13;11054:393;;;11150:9;11144:4;11140:20;11135:3;11128:33;11201:6;11195:13;11229:82;11306:4;11291:13;11229:82;:::i;:::-;11221:90;;11334:69;11396:6;11334:69;:::i;:::-;11324:79;;11432:4;11427:3;11423:14;11416:21;;11114:333;11101:1;11098;11094:9;11089:14;;11054:393;;;11058:14;11463:4;11456:11;;11483:3;11476:10;;10651:841;;;;;10509:983;;;;:::o;11498:409::-;11659:4;11697:2;11686:9;11682:18;11674:26;;11746:9;11740:4;11736:20;11732:1;11721:9;11717:17;11710:47;11774:126;11895:4;11886:6;11774:126;:::i;:::-;11766:134;;11498:409;;;;:::o;11913:329::-;11972:6;12021:2;12009:9;12000:7;11996:23;11992:32;11989:119;;;12027:79;;:::i;:::-;11989:119;12147:1;12172:53;12217:7;12208:6;12197:9;12193:22;12172:53;:::i;:::-;12162:63;;12118:117;11913:329;;;;:::o;12248:126::-;12285:7;12325:42;12318:5;12314:54;12303:65;;12248:126;;;:::o;12380:96::-;12417:7;12446:24;12464:5;12446:24;:::i;:::-;12435:35;;12380:96;;;:::o;12482:118::-;12569:24;12587:5;12569:24;:::i;:::-;12564:3;12557:37;12482:118;;:::o;12606:222::-;12699:4;12737:2;12726:9;12722:18;12714:26;;12750:71;12818:1;12807:9;12803:17;12794:6;12750:71;:::i;:::-;12606:222;;;;:::o;12834:122::-;12907:24;12925:5;12907:24;:::i;:::-;12900:5;12897:35;12887:63;;12946:1;12943;12936:12;12887:63;12834:122;:::o;12962:139::-;13008:5;13046:6;13033:20;13024:29;;13062:33;13089:5;13062:33;:::i;:::-;12962:139;;;;:::o;13107:474::-;13175:6;13183;13232:2;13220:9;13211:7;13207:23;13203:32;13200:119;;;13238:79;;:::i;:::-;13200:119;13358:1;13383:53;13428:7;13419:6;13408:9;13404:22;13383:53;:::i;:::-;13373:63;;13329:117;13485:2;13511:53;13556:7;13547:6;13536:9;13532:22;13511:53;:::i;:::-;13501:63;;13456:118;13107:474;;;;;:::o;13587:114::-;13654:6;13688:5;13682:12;13672:22;;13587:114;;;:::o;13707:184::-;13806:11;13840:6;13835:3;13828:19;13880:4;13875:3;13871:14;13856:29;;13707:184;;;;:::o;13897:132::-;13964:4;13987:3;13979:11;;14017:4;14012:3;14008:14;14000:22;;13897:132;;;:::o;14035:108::-;14112:24;14130:5;14112:24;:::i;:::-;14107:3;14100:37;14035:108;;:::o;14149:179::-;14218:10;14239:46;14281:3;14273:6;14239:46;:::i;:::-;14317:4;14312:3;14308:14;14294:28;;14149:179;;;;:::o;14334:113::-;14404:4;14436;14431:3;14427:14;14419:22;;14334:113;;;:::o;14483:732::-;14602:3;14631:54;14679:5;14631:54;:::i;:::-;14701:86;14780:6;14775:3;14701:86;:::i;:::-;14694:93;;14811:56;14861:5;14811:56;:::i;:::-;14890:7;14921:1;14906:284;14931:6;14928:1;14925:13;14906:284;;;15007:6;15001:13;15034:63;15093:3;15078:13;15034:63;:::i;:::-;15027:70;;15120:60;15173:6;15120:60;:::i;:::-;15110:70;;14966:224;14953:1;14950;14946:9;14941:14;;14906:284;;;14910:14;15206:3;15199:10;;14607:608;;;14483:732;;;;:::o;15221:373::-;15364:4;15402:2;15391:9;15387:18;15379:26;;15451:9;15445:4;15441:20;15437:1;15426:9;15422:17;15415:47;15479:108;15582:4;15573:6;15479:108;:::i;:::-;15471:116;;15221:373;;;;:::o;15600:114::-;15688:1;15681:5;15678:12;15668:40;;15704:1;15701;15694:12;15668:40;15600:114;:::o;15720:169::-;15781:5;15819:6;15806:20;15797:29;;15835:48;15877:5;15835:48;:::i;:::-;15720:169;;;;:::o;15895:359::-;15969:6;16018:2;16006:9;15997:7;15993:23;15989:32;15986:119;;;16024:79;;:::i;:::-;15986:119;16144:1;16169:68;16229:7;16220:6;16209:9;16205:22;16169:68;:::i;:::-;16159:78;;16115:132;15895:359;;;;:::o;16260:99::-;16312:6;16346:5;16340:12;16330:22;;16260:99;;;:::o;16365:169::-;16449:11;16483:6;16478:3;16471:19;16523:4;16518:3;16514:14;16499:29;;16365:169;;;;:::o;16540:377::-;16628:3;16656:39;16689:5;16656:39;:::i;:::-;16711:71;16775:6;16770:3;16711:71;:::i;:::-;16704:78;;16791:65;16849:6;16844:3;16837:4;16830:5;16826:16;16791:65;:::i;:::-;16881:29;16903:6;16881:29;:::i;:::-;16876:3;16872:39;16865:46;;16632:285;16540:377;;;;:::o;16923:313::-;17036:4;17074:2;17063:9;17059:18;17051:26;;17123:9;17117:4;17113:20;17109:1;17098:9;17094:17;17087:47;17151:78;17224:4;17215:6;17151:78;:::i;:::-;17143:86;;16923:313;;;;:::o;17242:116::-;17312:21;17327:5;17312:21;:::i;:::-;17305:5;17302:32;17292:60;;17348:1;17345;17338:12;17292:60;17242:116;:::o;17364:133::-;17407:5;17445:6;17432:20;17423:29;;17461:30;17485:5;17461:30;:::i;:::-;17364:133;;;;:::o;17503:117::-;17612:1;17609;17602:12;17626:307;17687:4;17777:18;17769:6;17766:30;17763:56;;;17799:18;;:::i;:::-;17763:56;17837:29;17859:6;17837:29;:::i;:::-;17829:37;;17921:4;17915;17911:15;17903:23;;17626:307;;;:::o;17939:423::-;18016:5;18041:65;18057:48;18098:6;18057:48;:::i;:::-;18041:65;:::i;:::-;18032:74;;18129:6;18122:5;18115:21;18167:4;18160:5;18156:16;18205:3;18196:6;18191:3;18187:16;18184:25;18181:112;;;18212:79;;:::i;:::-;18181:112;18302:54;18349:6;18344:3;18339;18302:54;:::i;:::-;18022:340;17939:423;;;;;:::o;18381:338::-;18436:5;18485:3;18478:4;18470:6;18466:17;18462:27;18452:122;;18493:79;;:::i;:::-;18452:122;18610:6;18597:20;18635:78;18709:3;18701:6;18694:4;18686:6;18682:17;18635:78;:::i;:::-;18626:87;;18442:277;18381:338;;;;:::o;18725:1083::-;18826:6;18834;18842;18850;18858;18907:3;18895:9;18886:7;18882:23;18878:33;18875:120;;;18914:79;;:::i;:::-;18875:120;19034:1;19059:53;19104:7;19095:6;19084:9;19080:22;19059:53;:::i;:::-;19049:63;;19005:117;19161:2;19187:53;19232:7;19223:6;19212:9;19208:22;19187:53;:::i;:::-;19177:63;;19132:118;19289:2;19315:53;19360:7;19351:6;19340:9;19336:22;19315:53;:::i;:::-;19305:63;;19260:118;19417:2;19443:50;19485:7;19476:6;19465:9;19461:22;19443:50;:::i;:::-;19433:60;;19388:115;19570:3;19559:9;19555:19;19542:33;19602:18;19594:6;19591:30;19588:117;;;19624:79;;:::i;:::-;19588:117;19729:62;19783:7;19774:6;19763:9;19759:22;19729:62;:::i;:::-;19719:72;;19513:288;18725:1083;;;;;;;;:::o;19814:117::-;19923:1;19920;19913:12;19952:579;20036:8;20046:6;20096:3;20089:4;20081:6;20077:17;20073:27;20063:122;;20104:79;;:::i;:::-;20063:122;20217:6;20204:20;20194:30;;20247:18;20239:6;20236:30;20233:117;;;20269:79;;:::i;:::-;20233:117;20383:4;20375:6;20371:17;20359:29;;20437:3;20429:4;20421:6;20417:17;20407:8;20403:32;20400:41;20397:128;;;20444:79;;:::i;:::-;20397:128;19952:579;;;;;:::o;20537:581::-;20634:6;20642;20691:2;20679:9;20670:7;20666:23;20662:32;20659:119;;;20697:79;;:::i;:::-;20659:119;20845:1;20834:9;20830:17;20817:31;20875:18;20867:6;20864:30;20861:117;;;20897:79;;:::i;:::-;20861:117;21010:91;21093:7;21084:6;21073:9;21069:22;21010:91;:::i;:::-;20992:109;;;;20788:323;20537:581;;;;;:::o;21124:329::-;21183:6;21232:2;21220:9;21211:7;21207:23;21203:32;21200:119;;;21238:79;;:::i;:::-;21200:119;21358:1;21383:53;21428:7;21419:6;21408:9;21404:22;21383:53;:::i;:::-;21373:63;;21329:117;21124:329;;;;:::o;21459:311::-;21536:4;21626:18;21618:6;21615:30;21612:56;;;21648:18;;:::i;:::-;21612:56;21698:4;21690:6;21686:17;21678:25;;21758:4;21752;21748:15;21740:23;;21459:311;;;:::o;21793:710::-;21889:5;21914:81;21930:64;21987:6;21930:64;:::i;:::-;21914:81;:::i;:::-;21905:90;;22015:5;22044:6;22037:5;22030:21;22078:4;22071:5;22067:16;22060:23;;22131:4;22123:6;22119:17;22111:6;22107:30;22160:3;22152:6;22149:15;22146:122;;;22179:79;;:::i;:::-;22146:122;22294:6;22277:220;22311:6;22306:3;22303:15;22277:220;;;22386:3;22415:37;22448:3;22436:10;22415:37;:::i;:::-;22410:3;22403:50;22482:4;22477:3;22473:14;22466:21;;22353:144;22337:4;22332:3;22328:14;22321:21;;22277:220;;;22281:21;21895:608;;21793:710;;;;;:::o;22526:370::-;22597:5;22646:3;22639:4;22631:6;22627:17;22623:27;22613:122;;22654:79;;:::i;:::-;22613:122;22771:6;22758:20;22796:94;22886:3;22878:6;22871:4;22863:6;22859:17;22796:94;:::i;:::-;22787:103;;22603:293;22526:370;;;;:::o;22902:308::-;22976:4;23066:18;23058:6;23055:30;23052:56;;;23088:18;;:::i;:::-;23052:56;23138:4;23130:6;23126:17;23118:25;;23198:4;23192;23188:15;23180:23;;22902:308;;;:::o;23230:701::-;23323:5;23348:78;23364:61;23418:6;23364:61;:::i;:::-;23348:78;:::i;:::-;23339:87;;23446:5;23475:6;23468:5;23461:21;23509:4;23502:5;23498:16;23491:23;;23562:4;23554:6;23550:17;23542:6;23538:30;23591:3;23583:6;23580:15;23577:122;;;23610:79;;:::i;:::-;23577:122;23725:6;23708:217;23742:6;23737:3;23734:15;23708:217;;;23817:3;23846:34;23876:3;23864:10;23846:34;:::i;:::-;23841:3;23834:47;23910:4;23905:3;23901:14;23894:21;;23784:141;23768:4;23763:3;23759:14;23752:21;;23708:217;;;23712:21;23329:602;;23230:701;;;;;:::o;23951:364::-;24019:5;24068:3;24061:4;24053:6;24049:17;24045:27;24035:122;;24076:79;;:::i;:::-;24035:122;24193:6;24180:20;24218:91;24305:3;24297:6;24290:4;24282:6;24278:17;24218:91;:::i;:::-;24209:100;;24025:290;23951:364;;;;:::o;24321:320::-;24407:4;24497:18;24489:6;24486:30;24483:56;;;24519:18;;:::i;:::-;24483:56;24569:4;24561:6;24557:17;24549:25;;24629:4;24623;24619:15;24611:23;;24321:320;;;:::o;24662:942::-;24767:5;24792:90;24808:73;24874:6;24808:73;:::i;:::-;24792:90;:::i;:::-;24783:99;;24902:5;24931:6;24924:5;24917:21;24965:4;24958:5;24954:16;24947:23;;25018:4;25010:6;25006:17;24998:6;24994:30;25047:3;25039:6;25036:15;25033:122;;;25066:79;;:::i;:::-;25033:122;25181:6;25164:434;25198:6;25193:3;25190:15;25164:434;;;25287:3;25274:17;25323:18;25310:11;25307:35;25304:122;;;25345:79;;:::i;:::-;25304:122;25469:11;25461:6;25457:24;25507:46;25549:3;25537:10;25507:46;:::i;:::-;25502:3;25495:59;25583:4;25578:3;25574:14;25567:21;;25240:358;;25224:4;25219:3;25215:14;25208:21;;25164:434;;;25168:21;24773:831;;24662:942;;;;;:::o;25625:388::-;25705:5;25754:3;25747:4;25739:6;25735:17;25731:27;25721:122;;25762:79;;:::i;:::-;25721:122;25879:6;25866:20;25904:103;26003:3;25995:6;25988:4;25980:6;25976:17;25904:103;:::i;:::-;25895:112;;25711:302;25625:388;;;;:::o;26019:1973::-;26245:6;26253;26261;26269;26277;26326:3;26314:9;26305:7;26301:23;26297:33;26294:120;;;26333:79;;:::i;:::-;26294:120;26481:1;26470:9;26466:17;26453:31;26511:18;26503:6;26500:30;26497:117;;;26533:79;;:::i;:::-;26497:117;26638:78;26708:7;26699:6;26688:9;26684:22;26638:78;:::i;:::-;26628:88;;26424:302;26793:2;26782:9;26778:18;26765:32;26824:18;26816:6;26813:30;26810:117;;;26846:79;;:::i;:::-;26810:117;26951:78;27021:7;27012:6;27001:9;26997:22;26951:78;:::i;:::-;26941:88;;26736:303;27106:2;27095:9;27091:18;27078:32;27137:18;27129:6;27126:30;27123:117;;;27159:79;;:::i;:::-;27123:117;27264:78;27334:7;27325:6;27314:9;27310:22;27264:78;:::i;:::-;27254:88;;27049:303;27419:2;27408:9;27404:18;27391:32;27450:18;27442:6;27439:30;27436:117;;;27472:79;;:::i;:::-;27436:117;27577:75;27644:7;27635:6;27624:9;27620:22;27577:75;:::i;:::-;27567:85;;27362:300;27729:3;27718:9;27714:19;27701:33;27761:18;27753:6;27750:30;27747:117;;;27783:79;;:::i;:::-;27747:117;27888:87;27967:7;27958:6;27947:9;27943:22;27888:87;:::i;:::-;27878:97;;27672:313;26019:1973;;;;;;;;:::o;27998:652::-;28075:6;28083;28132:2;28120:9;28111:7;28107:23;28103:32;28100:119;;;28138:79;;:::i;:::-;28100:119;28258:1;28283:53;28328:7;28319:6;28308:9;28304:22;28283:53;:::i;:::-;28273:63;;28229:117;28413:2;28402:9;28398:18;28385:32;28444:18;28436:6;28433:30;28430:117;;;28466:79;;:::i;:::-;28430:117;28571:62;28625:7;28616:6;28605:9;28601:22;28571:62;:::i;:::-;28561:72;;28356:287;27998:652;;;;;:::o;28656:797::-;28742:6;28750;28758;28807:2;28795:9;28786:7;28782:23;28778:32;28775:119;;;28813:79;;:::i;:::-;28775:119;28933:1;28958:53;29003:7;28994:6;28983:9;28979:22;28958:53;:::i;:::-;28948:63;;28904:117;29060:2;29086:53;29131:7;29122:6;29111:9;29107:22;29086:53;:::i;:::-;29076:63;;29031:118;29216:2;29205:9;29201:18;29188:32;29247:18;29239:6;29236:30;29233:117;;;29269:79;;:::i;:::-;29233:117;29374:62;29428:7;29419:6;29408:9;29404:22;29374:62;:::i;:::-;29364:72;;29159:287;28656:797;;;;;:::o;29459:504::-;29542:6;29550;29599:2;29587:9;29578:7;29574:23;29570:32;29567:119;;;29605:79;;:::i;:::-;29567:119;29725:1;29750:53;29795:7;29786:6;29775:9;29771:22;29750:53;:::i;:::-;29740:63;;29696:117;29852:2;29878:68;29938:7;29929:6;29918:9;29914:22;29878:68;:::i;:::-;29868:78;;29823:133;29459:504;;;;;:::o;29969:912::-;30096:6;30104;30153:2;30141:9;30132:7;30128:23;30124:32;30121:119;;;30159:79;;:::i;:::-;30121:119;30307:1;30296:9;30292:17;30279:31;30337:18;30329:6;30326:30;30323:117;;;30359:79;;:::i;:::-;30323:117;30464:78;30534:7;30525:6;30514:9;30510:22;30464:78;:::i;:::-;30454:88;;30250:302;30619:2;30608:9;30604:18;30591:32;30650:18;30642:6;30639:30;30636:117;;;30672:79;;:::i;:::-;30636:117;30777:87;30856:7;30847:6;30836:9;30832:22;30777:87;:::i;:::-;30767:97;;30562:312;29969:912;;;;;:::o;30887:114::-;30954:6;30988:5;30982:12;30972:22;;30887:114;;;:::o;31007:184::-;31106:11;31140:6;31135:3;31128:19;31180:4;31175:3;31171:14;31156:29;;31007:184;;;;:::o;31197:132::-;31264:4;31287:3;31279:11;;31317:4;31312:3;31308:14;31300:22;;31197:132;;;:::o;31335:108::-;31412:24;31430:5;31412:24;:::i;:::-;31407:3;31400:37;31335:108;;:::o;31449:179::-;31518:10;31539:46;31581:3;31573:6;31539:46;:::i;:::-;31617:4;31612:3;31608:14;31594:28;;31449:179;;;;:::o;31634:113::-;31704:4;31736;31731:3;31727:14;31719:22;;31634:113;;;:::o;31783:732::-;31902:3;31931:54;31979:5;31931:54;:::i;:::-;32001:86;32080:6;32075:3;32001:86;:::i;:::-;31994:93;;32111:56;32161:5;32111:56;:::i;:::-;32190:7;32221:1;32206:284;32231:6;32228:1;32225:13;32206:284;;;32307:6;32301:13;32334:63;32393:3;32378:13;32334:63;:::i;:::-;32327:70;;32420:60;32473:6;32420:60;:::i;:::-;32410:70;;32266:224;32253:1;32250;32246:9;32241:14;;32206:284;;;32210:14;32506:3;32499:10;;31907:608;;;31783:732;;;;:::o;32521:373::-;32664:4;32702:2;32691:9;32687:18;32679:26;;32751:9;32745:4;32741:20;32737:1;32726:9;32722:17;32715:47;32779:108;32882:4;32873:6;32779:108;:::i;:::-;32771:116;;32521:373;;;;:::o;32900:1267::-;33061:6;33069;33077;33126:2;33114:9;33105:7;33101:23;33097:32;33094:119;;;33132:79;;:::i;:::-;33094:119;33280:1;33269:9;33265:17;33252:31;33310:18;33302:6;33299:30;33296:117;;;33332:79;;:::i;:::-;33296:117;33437:78;33507:7;33498:6;33487:9;33483:22;33437:78;:::i;:::-;33427:88;;33223:302;33592:2;33581:9;33577:18;33564:32;33623:18;33615:6;33612:30;33609:117;;;33645:79;;:::i;:::-;33609:117;33750:78;33820:7;33811:6;33800:9;33796:22;33750:78;:::i;:::-;33740:88;;33535:303;33905:2;33894:9;33890:18;33877:32;33936:18;33928:6;33925:30;33922:117;;;33958:79;;:::i;:::-;33922:117;34063:87;34142:7;34133:6;34122:9;34118:22;34063:87;:::i;:::-;34053:97;;33848:312;32900:1267;;;;;:::o;34173:122::-;34246:24;34264:5;34246:24;:::i;:::-;34239:5;34236:35;34226:63;;34285:1;34282;34275:12;34226:63;34173:122;:::o;34301:139::-;34347:5;34385:6;34372:20;34363:29;;34401:33;34428:5;34401:33;:::i;:::-;34301:139;;;;:::o;34446:308::-;34508:4;34598:18;34590:6;34587:30;34584:56;;;34620:18;;:::i;:::-;34584:56;34658:29;34680:6;34658:29;:::i;:::-;34650:37;;34742:4;34736;34732:15;34724:23;;34446:308;;;:::o;34760:425::-;34838:5;34863:66;34879:49;34921:6;34879:49;:::i;:::-;34863:66;:::i;:::-;34854:75;;34952:6;34945:5;34938:21;34990:4;34983:5;34979:16;35028:3;35019:6;35014:3;35010:16;35007:25;35004:112;;;35035:79;;:::i;:::-;35004:112;35125:54;35172:6;35167:3;35162;35125:54;:::i;:::-;34844:341;34760:425;;;;;:::o;35205:340::-;35261:5;35310:3;35303:4;35295:6;35291:17;35287:27;35277:122;;35318:79;;:::i;:::-;35277:122;35435:6;35422:20;35460:79;35535:3;35527:6;35520:4;35512:6;35508:17;35460:79;:::i;:::-;35451:88;;35267:278;35205:340;;;;:::o;35551:829::-;35653:6;35661;35669;35718:2;35706:9;35697:7;35693:23;35689:32;35686:119;;;35724:79;;:::i;:::-;35686:119;35844:1;35869:53;35914:7;35905:6;35894:9;35890:22;35869:53;:::i;:::-;35859:63;;35815:117;35971:2;35997:68;36057:7;36048:6;36037:9;36033:22;35997:68;:::i;:::-;35987:78;;35942:133;36142:2;36131:9;36127:18;36114:32;36173:18;36165:6;36162:30;36159:117;;;36195:79;;:::i;:::-;36159:117;36300:63;36355:7;36346:6;36335:9;36331:22;36300:63;:::i;:::-;36290:73;;36085:288;35551:829;;;;;:::o;36386:797::-;36472:6;36480;36488;36537:2;36525:9;36516:7;36512:23;36508:32;36505:119;;;36543:79;;:::i;:::-;36505:119;36663:1;36688:53;36733:7;36724:6;36713:9;36709:22;36688:53;:::i;:::-;36678:63;;36634:117;36790:2;36816:53;36861:7;36852:6;36841:9;36837:22;36816:53;:::i;:::-;36806:63;;36761:118;36946:2;36935:9;36931:18;36918:32;36977:18;36969:6;36966:30;36963:117;;;36999:79;;:::i;:::-;36963:117;37104:62;37158:7;37149:6;37138:9;37134:22;37104:62;:::i;:::-;37094:72;;36889:287;36386:797;;;;;:::o;37189:937::-;37281:6;37289;37297;37305;37354:3;37342:9;37333:7;37329:23;37325:33;37322:120;;;37361:79;;:::i;:::-;37322:120;37481:1;37506:53;37551:7;37542:6;37531:9;37527:22;37506:53;:::i;:::-;37496:63;;37452:117;37608:2;37634:53;37679:7;37670:6;37659:9;37655:22;37634:53;:::i;:::-;37624:63;;37579:118;37736:2;37762:50;37804:7;37795:6;37784:9;37780:22;37762:50;:::i;:::-;37752:60;;37707:115;37889:2;37878:9;37874:18;37861:32;37920:18;37912:6;37909:30;37906:117;;;37942:79;;:::i;:::-;37906:117;38047:62;38101:7;38092:6;38081:9;38077:22;38047:62;:::i;:::-;38037:72;;37832:287;37189:937;;;;;;;:::o;38132:539::-;38216:6;38265:2;38253:9;38244:7;38240:23;38236:32;38233:119;;;38271:79;;:::i;:::-;38233:119;38419:1;38408:9;38404:17;38391:31;38449:18;38441:6;38438:30;38435:117;;;38471:79;;:::i;:::-;38435:117;38576:78;38646:7;38637:6;38626:9;38622:22;38576:78;:::i;:::-;38566:88;;38362:302;38132:539;;;;:::o;38677:332::-;38798:4;38836:2;38825:9;38821:18;38813:26;;38849:71;38917:1;38906:9;38902:17;38893:6;38849:71;:::i;:::-;38930:72;38998:2;38987:9;38983:18;38974:6;38930:72;:::i;:::-;38677:332;;;;;:::o;39015:115::-;39100:23;39117:5;39100:23;:::i;:::-;39095:3;39088:36;39015:115;;:::o;39136:218::-;39227:4;39265:2;39254:9;39250:18;39242:26;;39278:69;39344:1;39333:9;39329:17;39320:6;39278:69;:::i;:::-;39136:218;;;;:::o;39360:147::-;39461:11;39498:3;39483:18;;39360:147;;;;:::o;39535:327::-;39649:3;39670:88;39751:6;39746:3;39670:88;:::i;:::-;39663:95;;39768:56;39817:6;39812:3;39805:5;39768:56;:::i;:::-;39849:6;39844:3;39840:16;39833:23;;39535:327;;;;;:::o;39868:94::-;39901:8;39949:5;39945:2;39941:14;39920:35;;39868:94;;;:::o;39968:::-;40007:7;40036:20;40050:5;40036:20;:::i;:::-;40025:31;;39968:94;;;:::o;40068:100::-;40107:7;40136:26;40156:5;40136:26;:::i;:::-;40125:37;;40068:100;;;:::o;40174:157::-;40279:45;40299:24;40317:5;40299:24;:::i;:::-;40279:45;:::i;:::-;40274:3;40267:58;40174:157;;:::o;40337:79::-;40376:7;40405:5;40394:16;;40337:79;;;:::o;40422:157::-;40527:45;40547:24;40565:5;40547:24;:::i;:::-;40527:45;:::i;:::-;40522:3;40515:58;40422:157;;:::o;40585:573::-;40781:3;40803:103;40902:3;40893:6;40885;40803:103;:::i;:::-;40796:110;;40916:75;40987:3;40978:6;40916:75;:::i;:::-;41016:2;41011:3;41007:12;41000:19;;41029:75;41100:3;41091:6;41029:75;:::i;:::-;41129:2;41124:3;41120:12;41113:19;;41149:3;41142:10;;40585:573;;;;;;;:::o;41164:386::-;41268:3;41296:38;41328:5;41296:38;:::i;:::-;41350:88;41431:6;41426:3;41350:88;:::i;:::-;41343:95;;41447:65;41505:6;41500:3;41493:4;41486:5;41482:16;41447:65;:::i;:::-;41537:6;41532:3;41528:16;41521:23;;41272:278;41164:386;;;;:::o;41556:271::-;41686:3;41708:93;41797:3;41788:6;41708:93;:::i;:::-;41701:100;;41818:3;41811:10;;41556:271;;;;:::o;41833:180::-;41881:77;41878:1;41871:88;41978:4;41975:1;41968:15;42002:4;41999:1;41992:15;42019:118;42106:24;42124:5;42106:24;:::i;:::-;42101:3;42094:37;42019:118;;:::o;42143:222::-;42236:4;42274:2;42263:9;42259:18;42251:26;;42287:71;42355:1;42344:9;42340:17;42331:6;42287:71;:::i;:::-;42143:222;;;;:::o;42371:180::-;42419:77;42416:1;42409:88;42516:4;42513:1;42506:15;42540:4;42537:1;42530:15;42557:320;42601:6;42638:1;42632:4;42628:12;42618:22;;42685:1;42679:4;42675:12;42706:18;42696:81;;42762:4;42754:6;42750:17;42740:27;;42696:81;42824:2;42816:6;42813:14;42793:18;42790:38;42787:84;;42843:18;;:::i;:::-;42787:84;42608:269;42557:320;;;:::o;42883:332::-;43004:4;43042:2;43031:9;43027:18;43019:26;;43055:71;43123:1;43112:9;43108:17;43099:6;43055:71;:::i;:::-;43136:72;43204:2;43193:9;43189:18;43180:6;43136:72;:::i;:::-;42883:332;;;;;:::o;43221:117::-;43330:1;43327;43320:12;43344:117;43453:1;43450;43443:12;43467:117;43576:1;43573;43566:12;43590:724;43667:4;43673:6;43729:11;43716:25;43829:1;43823:4;43819:12;43808:8;43792:14;43788:29;43784:48;43764:18;43760:73;43750:168;;43837:79;;:::i;:::-;43750:168;43949:18;43939:8;43935:33;43927:41;;44001:4;43988:18;43978:28;;44029:18;44021:6;44018:30;44015:117;;;44051:79;;:::i;:::-;44015:117;44159:2;44153:4;44149:13;44141:21;;44216:4;44208:6;44204:17;44188:14;44184:38;44178:4;44174:49;44171:136;;;44226:79;;:::i;:::-;44171:136;43680:634;43590:724;;;;;:::o;44320:291::-;44460:3;44482:103;44581:3;44572:6;44564;44482:103;:::i;:::-;44475:110;;44602:3;44595:10;;44320:291;;;;;:::o;44617:442::-;44766:4;44804:2;44793:9;44789:18;44781:26;;44817:71;44885:1;44874:9;44870:17;44861:6;44817:71;:::i;:::-;44898:72;44966:2;44955:9;44951:18;44942:6;44898:72;:::i;:::-;44980;45048:2;45037:9;45033:18;45024:6;44980:72;:::i;:::-;44617:442;;;;;;:::o;45065:332::-;45186:4;45224:2;45213:9;45209:18;45201:26;;45237:71;45305:1;45294:9;45290:17;45281:6;45237:71;:::i;:::-;45318:72;45386:2;45375:9;45371:18;45362:6;45318:72;:::i;:::-;45065:332;;;;;:::o;45403:628::-;45592:4;45630:3;45619:9;45615:19;45607:27;;45644:71;45712:1;45701:9;45697:17;45688:6;45644:71;:::i;:::-;45725:72;45793:2;45782:9;45778:18;45769:6;45725:72;:::i;:::-;45807:66;45869:2;45858:9;45854:18;45845:6;45807:66;:::i;:::-;45920:9;45914:4;45910:20;45905:2;45894:9;45890:18;45883:48;45948:76;46019:4;46010:6;45948:76;:::i;:::-;45940:84;;45403:628;;;;;;;:::o;46037:148::-;46139:11;46176:3;46161:18;;46037:148;;;;:::o;46191:390::-;46297:3;46325:39;46358:5;46325:39;:::i;:::-;46380:89;46462:6;46457:3;46380:89;:::i;:::-;46373:96;;46478:65;46536:6;46531:3;46524:4;46517:5;46513:16;46478:65;:::i;:::-;46568:6;46563:3;46559:16;46552:23;;46301:280;46191:390;;;;:::o;46587:275::-;46719:3;46741:95;46832:3;46823:6;46741:95;:::i;:::-;46734:102;;46853:3;46846:10;;46587:275;;;;:::o;46868:169::-;47008:21;47004:1;46996:6;46992:14;46985:45;46868:169;:::o;47043:366::-;47185:3;47206:67;47270:2;47265:3;47206:67;:::i;:::-;47199:74;;47282:93;47371:3;47282:93;:::i;:::-;47400:2;47395:3;47391:12;47384:19;;47043:366;;;:::o;47415:419::-;47581:4;47619:2;47608:9;47604:18;47596:26;;47668:9;47662:4;47658:20;47654:1;47643:9;47639:17;47632:47;47696:131;47822:4;47696:131;:::i;:::-;47688:139;;47415:419;;;:::o;47840:180::-;47888:77;47885:1;47878:88;47985:4;47982:1;47975:15;48009:4;48006:1;47999:15;48026:171;48166:23;48162:1;48154:6;48150:14;48143:47;48026:171;:::o;48203:366::-;48345:3;48366:67;48430:2;48425:3;48366:67;:::i;:::-;48359:74;;48442:93;48531:3;48442:93;:::i;:::-;48560:2;48555:3;48551:12;48544:19;;48203:366;;;:::o;48575:419::-;48741:4;48779:2;48768:9;48764:18;48756:26;;48828:9;48822:4;48818:20;48814:1;48803:9;48799:17;48792:47;48856:131;48982:4;48856:131;:::i;:::-;48848:139;;48575:419;;;:::o;49000:120::-;49088:1;49081:5;49078:12;49068:46;;49094:18;;:::i;:::-;49068:46;49000:120;:::o;49126:141::-;49178:7;49207:5;49196:16;;49213:48;49255:5;49213:48;:::i;:::-;49126:141;;;:::o;49273:::-;49336:9;49369:39;49402:5;49369:39;:::i;:::-;49356:52;;49273:141;;;:::o;49420:96::-;49454:8;49503:5;49498:3;49494:15;49473:36;;49420:96;;;:::o;49522:93::-;49559:7;49588:21;49603:5;49588:21;:::i;:::-;49577:32;;49522:93;;;:::o;49621:194::-;49739:69;49757:50;49801:5;49757:50;:::i;:::-;49739:69;:::i;:::-;49734:3;49727:82;49621:194;;:::o;49821:79::-;49860:7;49889:5;49878:16;;49821:79;;;:::o;49906:157::-;50011:45;50031:24;50049:5;50031:24;:::i;:::-;50011:45;:::i;:::-;50006:3;49999:58;49906:157;;:::o;50069:563::-;50250:3;50265:75;50336:3;50327:6;50265:75;:::i;:::-;50365:2;50360:3;50356:12;50349:19;;50378:88;50462:3;50453:6;50378:88;:::i;:::-;50491:1;50486:3;50482:11;50475:18;;50503:75;50574:3;50565:6;50503:75;:::i;:::-;50603:2;50598:3;50594:12;50587:19;;50623:3;50616:10;;50069:563;;;;;;:::o;50638:442::-;50787:4;50825:2;50814:9;50810:18;50802:26;;50838:71;50906:1;50895:9;50891:17;50882:6;50838:71;:::i;:::-;50919:72;50987:2;50976:9;50972:18;50963:6;50919:72;:::i;:::-;51001;51069:2;51058:9;51054:18;51045:6;51001:72;:::i;:::-;50638:442;;;;;;:::o;51086:225::-;51226:34;51222:1;51214:6;51210:14;51203:58;51295:8;51290:2;51282:6;51278:15;51271:33;51086:225;:::o;51317:366::-;51459:3;51480:67;51544:2;51539:3;51480:67;:::i;:::-;51473:74;;51556:93;51645:3;51556:93;:::i;:::-;51674:2;51669:3;51665:12;51658:19;;51317:366;;;:::o;51689:419::-;51855:4;51893:2;51882:9;51878:18;51870:26;;51942:9;51936:4;51932:20;51928:1;51917:9;51913:17;51906:47;51970:131;52096:4;51970:131;:::i;:::-;51962:139;;51689:419;;;:::o;52114:116::-;52165:4;52188:3;52180:11;;52218:4;52213:3;52209:14;52201:22;;52114:116;;;:::o;52236:150::-;52273:7;52313:66;52306:5;52302:78;52291:89;;52236:150;;;:::o;52392:154::-;52435:11;52471:29;52495:3;52489:10;52471:29;:::i;:::-;52534:5;52510:29;;52447:99;52392:154;;;:::o;52552:107::-;52596:8;52646:5;52640:4;52636:16;52615:37;;52552:107;;;;:::o;52665:594::-;52749:5;52780:38;52812:5;52780:38;:::i;:::-;52843:5;52870:40;52904:5;52870:40;:::i;:::-;52858:52;;52929:35;52955:8;52929:35;:::i;:::-;52920:44;;52988:2;52980:6;52977:14;52974:278;;;53059:169;53144:66;53114:6;53110:2;53106:15;53103:1;53099:23;53059:169;:::i;:::-;53036:5;53015:227;53006:236;;52974:278;52755:504;;52665:594;;;:::o;53265:397::-;53405:3;53420:75;53491:3;53482:6;53420:75;:::i;:::-;53520:2;53515:3;53511:12;53504:19;;53533:75;53604:3;53595:6;53533:75;:::i;:::-;53633:2;53628:3;53624:12;53617:19;;53653:3;53646:10;;53265:397;;;;;:::o;53668:224::-;53808:34;53804:1;53796:6;53792:14;53785:58;53877:7;53872:2;53864:6;53860:15;53853:32;53668:224;:::o;53898:366::-;54040:3;54061:67;54125:2;54120:3;54061:67;:::i;:::-;54054:74;;54137:93;54226:3;54137:93;:::i;:::-;54255:2;54250:3;54246:12;54239:19;;53898:366;;;:::o;54270:419::-;54436:4;54474:2;54463:9;54459:18;54451:26;;54523:9;54517:4;54513:20;54509:1;54498:9;54494:17;54487:47;54551:131;54677:4;54551:131;:::i;:::-;54543:139;;54270:419;;;:::o;54695:182::-;54835:34;54831:1;54823:6;54819:14;54812:58;54695:182;:::o;54883:366::-;55025:3;55046:67;55110:2;55105:3;55046:67;:::i;:::-;55039:74;;55122:93;55211:3;55122:93;:::i;:::-;55240:2;55235:3;55231:12;55224:19;;54883:366;;;:::o;55255:419::-;55421:4;55459:2;55448:9;55444:18;55436:26;;55508:9;55502:4;55498:20;55494:1;55483:9;55479:17;55472:47;55536:131;55662:4;55536:131;:::i;:::-;55528:139;;55255:419;;;:::o;55680:140::-;55728:4;55751:3;55743:11;;55774:3;55771:1;55764:14;55808:4;55805:1;55795:18;55787:26;;55680:140;;;:::o;55826:93::-;55863:6;55910:2;55905;55898:5;55894:14;55890:23;55880:33;;55826:93;;;:::o;55925:393::-;55994:6;56044:1;56032:10;56028:18;56067:97;56097:66;56086:9;56067:97;:::i;:::-;56185:39;56215:8;56204:9;56185:39;:::i;:::-;56173:51;;56257:4;56253:9;56246:5;56242:21;56233:30;;56306:4;56296:8;56292:19;56285:5;56282:30;56272:40;;56001:317;;55925:393;;;;;:::o;56324:60::-;56352:3;56373:5;56366:12;;56324:60;;;:::o;56390:142::-;56440:9;56473:53;56491:34;56500:24;56518:5;56500:24;:::i;:::-;56491:34;:::i;:::-;56473:53;:::i;:::-;56460:66;;56390:142;;;:::o;56538:75::-;56581:3;56602:5;56595:12;;56538:75;;;:::o;56619:269::-;56729:39;56760:7;56729:39;:::i;:::-;56790:91;56839:41;56863:16;56839:41;:::i;:::-;56831:6;56824:4;56818:11;56790:91;:::i;:::-;56784:4;56777:105;56695:193;56619:269;;;:::o;56894:73::-;56939:3;56894:73;:::o;56973:189::-;57050:32;;:::i;:::-;57091:65;57149:6;57141;57135:4;57091:65;:::i;:::-;57026:136;56973:189;;:::o;57168:186::-;57228:120;57245:3;57238:5;57235:14;57228:120;;;57299:39;57336:1;57329:5;57299:39;:::i;:::-;57272:1;57265:5;57261:13;57252:22;;57228:120;;;57168:186;;:::o;57360:541::-;57460:2;57455:3;57452:11;57449:445;;;57494:37;57525:5;57494:37;:::i;:::-;57577:29;57595:10;57577:29;:::i;:::-;57567:8;57563:44;57760:2;57748:10;57745:18;57742:49;;;57781:8;57766:23;;57742:49;57804:80;57860:22;57878:3;57860:22;:::i;:::-;57850:8;57846:37;57833:11;57804:80;:::i;:::-;57464:430;;57449:445;57360:541;;;:::o;57907:117::-;57961:8;58011:5;58005:4;58001:16;57980:37;;57907:117;;;;:::o;58030:169::-;58074:6;58107:51;58155:1;58151:6;58143:5;58140:1;58136:13;58107:51;:::i;:::-;58103:56;58188:4;58182;58178:15;58168:25;;58081:118;58030:169;;;;:::o;58204:295::-;58280:4;58426:29;58451:3;58445:4;58426:29;:::i;:::-;58418:37;;58488:3;58485:1;58481:11;58475:4;58472:21;58464:29;;58204:295;;;;:::o;58504:1390::-;58619:36;58651:3;58619:36;:::i;:::-;58720:18;58712:6;58709:30;58706:56;;;58742:18;;:::i;:::-;58706:56;58786:38;58818:4;58812:11;58786:38;:::i;:::-;58871:66;58930:6;58922;58916:4;58871:66;:::i;:::-;58964:1;58988:4;58975:17;;59020:2;59012:6;59009:14;59037:1;59032:617;;;;59693:1;59710:6;59707:77;;;59759:9;59754:3;59750:19;59744:26;59735:35;;59707:77;59810:67;59870:6;59863:5;59810:67;:::i;:::-;59804:4;59797:81;59666:222;59002:886;;59032:617;59084:4;59080:9;59072:6;59068:22;59118:36;59149:4;59118:36;:::i;:::-;59176:1;59190:208;59204:7;59201:1;59198:14;59190:208;;;59283:9;59278:3;59274:19;59268:26;59260:6;59253:42;59334:1;59326:6;59322:14;59312:24;;59381:2;59370:9;59366:18;59353:31;;59227:4;59224:1;59220:12;59215:17;;59190:208;;;59426:6;59417:7;59414:19;59411:179;;;59484:9;59479:3;59475:19;59469:26;59527:48;59569:4;59561:6;59557:17;59546:9;59527:48;:::i;:::-;59519:6;59512:64;59434:156;59411:179;59636:1;59632;59624:6;59620:14;59616:22;59610:4;59603:36;59039:610;;;59002:886;;58594:1300;;;58504:1390;;:::o;59900:180::-;59948:77;59945:1;59938:88;60045:4;60042:1;60035:15;60069:4;60066:1;60059:15;60086:171;60125:3;60148:24;60166:5;60148:24;:::i;:::-;60139:33;;60194:4;60187:5;60184:15;60181:41;;60202:18;;:::i;:::-;60181:41;60249:1;60242:5;60238:13;60231:20;;60086:171;;;:::o;60263:517::-;60424:4;60462:2;60451:9;60447:18;60439:26;;60475:71;60543:1;60532:9;60528:17;60519:6;60475:71;:::i;:::-;60556:66;60618:2;60607:9;60603:18;60594:6;60556:66;:::i;:::-;60669:9;60663:4;60659:20;60654:2;60643:9;60639:18;60632:48;60697:76;60768:4;60759:6;60697:76;:::i;:::-;60689:84;;60263:517;;;;;;:::o;60786:751::-;61009:4;61047:3;61036:9;61032:19;61024:27;;61061:71;61129:1;61118:9;61114:17;61105:6;61061:71;:::i;:::-;61142:72;61210:2;61199:9;61195:18;61186:6;61142:72;:::i;:::-;61224;61292:2;61281:9;61277:18;61268:6;61224:72;:::i;:::-;61306;61374:2;61363:9;61359:18;61350:6;61306:72;:::i;:::-;61426:9;61420:4;61416:20;61410:3;61399:9;61395:19;61388:49;61454:76;61525:4;61516:6;61454:76;:::i;:::-;61446:84;;60786:751;;;;;;;;:::o;61543:233::-;61582:3;61605:24;61623:5;61605:24;:::i;:::-;61596:33;;61651:66;61644:5;61641:77;61638:103;;61721:18;;:::i;:::-;61638:103;61768:1;61761:5;61757:13;61750:20;;61543:233;;;:::o;61782:214::-;61922:66;61918:1;61910:6;61906:14;61899:90;61782:214;:::o;62002:400::-;62162:3;62183:84;62265:1;62260:3;62183:84;:::i;:::-;62176:91;;62276:93;62365:3;62276:93;:::i;:::-;62394:1;62389:3;62385:11;62378:18;;62002:400;;;:::o;62408:541::-;62641:3;62663:148;62807:3;62663:148;:::i;:::-;62656:155;;62828:95;62919:3;62910:6;62828:95;:::i;:::-;62821:102;;62940:3;62933:10;;62408:541;;;;:::o;62955:407::-;63088:4;63126:2;63115:9;63111:18;63103:26;;63139:65;63201:1;63190:9;63186:17;63177:6;63139:65;:::i;:::-;63251:9;63245:4;63241:20;63236:2;63225:9;63221:18;63214:48;63279:76;63350:4;63341:6;63279:76;:::i;:::-;63271:84;;62955:407;;;;;:::o;63368:150::-;63405:7;63445:66;63438:5;63434:78;63423:89;;63368:150;;;:::o;63524:79::-;63563:7;63592:5;63581:16;;63524:79;;;:::o;63609:157::-;63714:45;63734:24;63752:5;63734:24;:::i;:::-;63714:45;:::i;:::-;63709:3;63702:58;63609:157;;:::o;63772:149::-;63808:7;63848:66;63841:5;63837:78;63826:89;;63772:149;;;:::o;63927:78::-;63965:7;63994:5;63983:16;;63927:78;;;:::o;64011:153::-;64114:43;64133:23;64150:5;64133:23;:::i;:::-;64114:43;:::i;:::-;64109:3;64102:56;64011:153;;:::o;64170:79::-;64209:7;64238:5;64227:16;;64170:79;;;:::o;64255:157::-;64360:45;64380:24;64398:5;64380:24;:::i;:::-;64360:45;:::i;:::-;64355:3;64348:58;64255:157;;:::o;64418:533::-;64584:3;64599:75;64670:3;64661:6;64599:75;:::i;:::-;64699:2;64694:3;64690:12;64683:19;;64712:73;64781:3;64772:6;64712:73;:::i;:::-;64810:1;64805:3;64801:11;64794:18;;64822:75;64893:3;64884:6;64822:75;:::i;:::-;64922:2;64917:3;64913:12;64906:19;;64942:3;64935:10;;64418:533;;;;;;:::o;64957:154::-;65000:11;65036:29;65060:3;65054:10;65036:29;:::i;:::-;65099:5;65075:29;;65012:99;64957:154;;;:::o;65117:594::-;65201:5;65232:38;65264:5;65232:38;:::i;:::-;65295:5;65322:40;65356:5;65322:40;:::i;:::-;65310:52;;65381:35;65407:8;65381:35;:::i;:::-;65372:44;;65440:2;65432:6;65429:14;65426:278;;;65511:169;65596:66;65566:6;65562:2;65558:15;65555:1;65551:23;65511:169;:::i;:::-;65488:5;65467:227;65458:236;;65426:278;65207:504;;65117:594;;;:::o;65717:419::-;65856:4;65894:2;65883:9;65879:18;65871:26;;65907:71;65975:1;65964:9;65960:17;65951:6;65907:71;:::i;:::-;66025:9;66019:4;66015:20;66010:2;65999:9;65995:18;65988:48;66053:76;66124:4;66115:6;66053:76;:::i;:::-;66045:84;;65717:419;;;;;:::o;66142:432::-;66230:5;66255:65;66271:48;66312:6;66271:48;:::i;:::-;66255:65;:::i;:::-;66246:74;;66343:6;66336:5;66329:21;66381:4;66374:5;66370:16;66419:3;66410:6;66405:3;66401:16;66398:25;66395:112;;;66426:79;;:::i;:::-;66395:112;66516:52;66561:6;66556:3;66551;66516:52;:::i;:::-;66236:338;66142:432;;;;;:::o;66593:353::-;66659:5;66708:3;66701:4;66693:6;66689:17;66685:27;66675:122;;66716:79;;:::i;:::-;66675:122;66826:6;66820:13;66851:89;66936:3;66928:6;66921:4;66913:6;66909:17;66851:89;:::i;:::-;66842:98;;66665:281;66593:353;;;;:::o;66952:522::-;67031:6;67080:2;67068:9;67059:7;67055:23;67051:32;67048:119;;;67086:79;;:::i;:::-;67048:119;67227:1;67216:9;67212:17;67206:24;67257:18;67249:6;67246:30;67243:117;;;67279:79;;:::i;:::-;67243:117;67384:73;67449:7;67440:6;67429:9;67425:22;67384:73;:::i;:::-;67374:83;;67177:290;66952:522;;;;:::o;67480:194::-;67520:4;67540:20;67558:1;67540:20;:::i;:::-;67535:25;;67574:20;67592:1;67574:20;:::i;:::-;67569:25;;67618:1;67615;67611:9;67603:17;;67642:1;67636:4;67633:11;67630:37;;;67647:18;;:::i;:::-;67630:37;67480:194;;;;:::o;67680:180::-;67728:77;67725:1;67718:88;67825:4;67822:1;67815:15;67849:4;67846:1;67839:15"},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","difficultyMetadataURIs(uint8)":"4fc4289c","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","getTokenMetadata(bytes32)":"8d959c24","hasFirstPlaceNFT(address,uint8)":"8f22d853","isOperatorFor(address,bytes32)":"2a3654a4","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","submitScore(uint256,uint8,string)":"cdca9f39","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","topScorers(uint8)":"fffc2c94","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lsp4TokenType_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lsp8TokenIdFormat_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"secretCode_\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"metadataURIs_\",\"type\":\"string[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8RevokeOperatorNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdFormatNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum TypingLeaderboardNFT.Difficulty\",\"name\":\"difficulty\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousPlayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"NFTRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum TypingLeaderboardNFT.Difficulty\",\"name\":\"difficulty\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"NFTRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum TypingLeaderboardNFT.Difficulty\",\"name\":\"difficulty\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"ScoreUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum TypingLeaderboardNFT.Difficulty\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"difficultyMetadataURIs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getTokenMetadata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum TypingLeaderboardNFT.Difficulty\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"hasFirstPlaceNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"enum TypingLeaderboardNFT.Difficulty\",\"name\":\"difficulty\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"secretCode\",\"type\":\"string\"}],\"name\":\"submitScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum TypingLeaderboardNFT.Difficulty\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"topScorers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8RevokeOperatorNotAuthorized(address,address,bytes32)\":[{\"details\":\"Reverts when the call to revoke operator is not authorized.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP8 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"Reverts when `tokenId` has already been minted.\"}],\"LSP8TokenIdFormatNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed. The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract. It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the address that owns a given `tokenId`.\",\"params\":{\"tokenId\":\"The token ID to query the owner for.\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"notice\":\"LSP8 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/typingGae.sol\":\"TypingLeaderboardNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x592c53c23d21eb3cbc4e453db0fe1fdcbe1ac9dd740d09309b836d118a8ecf34\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fe0addf5ad37bc784af425726b0f8aae8ceaa53859ac55b25259963bb00f8a7c\",\"dweb:/ipfs/QmVzLVeUHT7kMMUKgR49X6GFoTQ81f2QQF5L6hs7zjHp7K\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0xa81bf1910c3b56b43bf58d0be2105c434ed3b65cfb3674e282b5aba3fd35afb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://374e7bef39522d65cf8e45c365178eb54d159b9267d0c2a2b97dfea10e52d41f\",\"dweb:/ipfs/QmfVYVnVSTRVAAifFSyFk8icePgw3eeqpjAKWAwfHMu6vX\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x4536ed09238f33ca9d40ed2e7c6254aac84bf81010b3524711524ae7fd30227c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abaed57358cb811d3b368d52f66db3c1327b96c38301d6eccf2ffaa6d5fa5928\",\"dweb:/ipfs/QmS1FtQH4Gn6xYrHCTHWJwxgAURvGvvfypsuQ2rRhrkPgi\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x6a718979925b05064c15e4de4b376dadec8d107d720aa762d22a06e44ed67fa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c82f6c8133c4d35d8cbbfc4da647204989acc5f38980be787263881e9f732f5\",\"dweb:/ipfs/QmdhHBnJvvo4Ax183HgHkL7w5A4w3ADXDQuewocnTVqsW6\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x2ca5a81c6c006030e2204d2a9997b15e954bc0696959c051a570c8a19eac4786\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bef5bbbad59c2dbd09e9e80ffe2dcf6dc3da5101d4f4b8beedcb0245d04b7b8a\",\"dweb:/ipfs/QmQYeCHfTtCTQVpy36De1d1vFacvbjTNipxDRNWuCQPNo6\"]},\"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\":{\"keccak256\":\"0xe958d7d5ab694eb054df65ef6fb37864ff9da33604a28a14ca42e25c23629065\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41f8b02e4c05b6eb3cfc447dae5862e38ba100269c56bb8d23ab26255085a41e\",\"dweb:/ipfs/QmVgeWYBovEJR1Xqph5AuJoP5EizSuY77gUUDmt48wmgWm\"]},\"@lukso/lsp8-contracts/contracts/LSP8Errors.sol\":{\"keccak256\":\"0xff2c1791043272eb4a7c05bc77fa0a0234678991b0700f84d92edbd31fefd905\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72b32242e8a4b7c12355de3f1c463437a81d8d5f8d34b3a8d25d726340b891c0\",\"dweb:/ipfs/Qmbhz53zdudSQbPwES2qMHqLHaph4GhigNETC481VWwK6J\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x1f707425bbcd5a84c7de2ad8ba9c2f620617b5f6483074c27ad6f259d91b7dd2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://799901e6bb5e3465a610d88dd4d314bac0aa787e8aaffd69e960e3e0975bda60\",\"dweb:/ipfs/QmVtLccrrEmvJuMiTFDrbxFuBQcSR8u9St14jXtFB9tmE8\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/typingGae.sol\":{\"keccak256\":\"0xbef6e4b16d83904882963cfb704629bcc88b882d06f2b296d04b079a30427f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4d7c785b2f986068c95ff5628bc50000f7dee3016f67bc1d774d703347b5cef\",\"dweb:/ipfs/QmQfcLC9YDXxusPxwzGYPPvcsHzbXHbAVaYMiKrpBm9Nkq\"]}},\"version\":1}"}}}}}